node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "global_step/cond/Switch"
  op: "Switch"
  input: "global_step/IsVariableInitialized"
  input: "global_step/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_t"
  op: "Identity"
  input: "global_step/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_f"
  op: "Identity"
  input: "global_step/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/pred_id"
  op: "Identity"
  input: "global_step/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/read"
  op: "Identity"
  input: "global_step/cond/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/read/Switch"
  op: "RefSwitch"
  input: "global_step"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Switch_1"
  op: "Switch"
  input: "global_step/Initializer/zeros"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Merge"
  op: "Merge"
  input: "global_step/cond/Switch_1"
  input: "global_step/cond/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step/add"
  op: "Add"
  input: "global_step/cond/Merge"
  input: "global_step/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "./VCTK-Corpus/tfdata/train.tfrecord"
      }
    }
  }
}
node {
  name: "flat_filenames/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "flat_filenames"
  op: "Reshape"
  input: "Const"
  input: "flat_filenames/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 5585
          }
        }
        string_val: "<unk>"
        string_val: "<s>"
        string_val: "</s>"
        string_val: "a"
        string_val: "aback"
        string_val: "abandon"
        string_val: "abbey"
        string_val: "aberdeen"
        string_val: "abiding"
        string_val: "able"
        string_val: "abnormally"
        string_val: "abortion"
        string_val: "about"
        string_val: "above"
        string_val: "abroad"
        string_val: "absence"
        string_val: "absences"
        string_val: "absent"
        string_val: "absentee"
        string_val: "absolute"
        string_val: "absolutely"
        string_val: "abstract"
        string_val: "absurd"
        string_val: "abundance"
        string_val: "abuse"
        string_val: "abused"
        string_val: "abusers"
        string_val: "accept"
        string_val: "accepted"
        string_val: "access"
        string_val: "accident"
        string_val: "accidents"
        string_val: "according"
        string_val: "accordingly"
        string_val: "account"
        string_val: "accountable"
        string_val: "accounted"
        string_val: "accounting"
        string_val: "accounts"
        string_val: "accurate"
        string_val: "accused"
        string_val: "accustomed"
        string_val: "achieve"
        string_val: "achieved"
        string_val: "achievement"
        string_val: "achievements"
        string_val: "achieving"
        string_val: "acknowledge"
        string_val: "acknowledged"
        string_val: "across"
        string_val: "act"
        string_val: "acted"
        string_val: "acting"
        string_val: "action"
        string_val: "actions"
        string_val: "active"
        string_val: "actor"
        string_val: "actors"
        string_val: "acts"
        string_val: "actual"
        string_val: "actually"
        string_val: "acute"
        string_val: "adamant"
        string_val: "adams"
        string_val: "adapt"
        string_val: "add"
        string_val: "added"
        string_val: "addict"
        string_val: "addiction"
        string_val: "addictive"
        string_val: "addition"
        string_val: "additions"
        string_val: "address"
        string_val: "addressed"
        string_val: "adjust"
        string_val: "adjusted"
        string_val: "adjustments"
        string_val: "admirers"
        string_val: "admission"
        string_val: "admits"
        string_val: "admitted"
        string_val: "admonished"
        string_val: "adopt"
        string_val: "adopted"
        string_val: "adoption"
        string_val: "adult"
        string_val: "adults"
        string_val: "advance"
        string_val: "advanced"
        string_val: "advances"
        string_val: "advantage"
        string_val: "adventure"
        string_val: "adverse"
        string_val: "advertised"
        string_val: "adverts"
        string_val: "advice"
        string_val: "advised"
        string_val: "adviser"
        string_val: "advisers"
        string_val: "affair"
        string_val: "affairs"
        string_val: "affect"
        string_val: "affected"
        string_val: "affection"
        string_val: "afford"
        string_val: "afghan"
        string_val: "afghanistan"
        string_val: "afraid"
        string_val: "africa"
        string_val: "african"
        string_val: "after"
        string_val: "afternoon"
        string_val: "afterwards"
        string_val: "again"
        string_val: "against"
        string_val: "agassi"
        string_val: "age"
        string_val: "agencies"
        string_val: "agency"
        string_val: "agenda"
        string_val: "agent"
        string_val: "agents"
        string_val: "ages"
        string_val: "aggression"
        string_val: "aggressive"
        string_val: "ago"
        string_val: "agree"
        string_val: "agreed"
        string_val: "agreement"
        string_val: "agrees"
        string_val: "ahead"
        string_val: "aid"
        string_val: "aide"
        string_val: "aids"
        string_val: "aim"
        string_val: "aimed"
        string_val: "aiming"
        string_val: "aims"
        string_val: "air"
        string_val: "airbus"
        string_val: "aircraft"
        string_val: "airdrie"
        string_val: "airport"
        string_val: "airspace"
        string_val: "alain"
        string_val: "alan"
        string_val: "alarm"
        string_val: "alastair"
        string_val: "album"
        string_val: "albums"
        string_val: "alcohol"
        string_val: "alert"
        string_val: "alex"
        string_val: "ali"
        string_val: "alibi"
        string_val: "alice"
        string_val: "alien"
        string_val: "alight"
        string_val: "alison"
        string_val: "alistair"
        string_val: "alive"
        string_val: "all"
        string_val: "allan"
        string_val: "allegations"
        string_val: "allen"
        string_val: "alliance"
        string_val: "allies"
        string_val: "allocation"
        string_val: "allow"
        string_val: "allowed"
        string_val: "allows"
        string_val: "almost"
        string_val: "alone"
        string_val: "along"
        string_val: "alongside"
        string_val: "already"
        string_val: "alright"
        string_val: "also"
        string_val: "alter"
        string_val: "altered"
        string_val: "alternative"
        string_val: "although"
        string_val: "always"
        string_val: "am"
        string_val: "amateur"
        string_val: "amazed"
        string_val: "amazing"
        string_val: "ambition"
        string_val: "ambitions"
        string_val: "ambitious"
        string_val: "ambulance"
        string_val: "ambush"
        string_val: "amended"
        string_val: "amendment"
        string_val: "amiss"
        string_val: "amnesty"
        string_val: "among"
        string_val: "amongst"
        string_val: "amount"
        string_val: "amused"
        string_val: "an"
        string_val: "analysis"
        string_val: "analyst"
        string_val: "analysts"
        string_val: "and"
        string_val: "anderson"
        string_val: "andrew"
        string_val: "andy"
        string_val: "angel"
        string_val: "anger"
        string_val: "angina"
        string_val: "angola"
        string_val: "angrily"
        string_val: "angry"
        string_val: "animal"
        string_val: "animals"
        string_val: "ankles"
        string_val: "ann"
        string_val: "annabelle"
        string_val: "annika"
        string_val: "announced"
        string_val: "announcement"
        string_val: "announcements"
        string_val: "annoyed"
        string_val: "annoying"
        string_val: "annual"
        string_val: "another"
        string_val: "answer"
        string_val: "answered"
        string_val: "answers"
        string_val: "anthrax"
        string_val: "anti"
        string_val: "anxious"
        string_val: "any"
        string_val: "anymore"
        string_val: "anyone"
        string_val: "anything"
        string_val: "anyway"
        string_val: "anywhere"
        string_val: "apart"
        string_val: "apartheid"
        string_val: "appalled"
        string_val: "appalling"
        string_val: "apparently"
        string_val: "appeal"
        string_val: "appealed"
        string_val: "appealing"
        string_val: "appear"
        string_val: "appearance"
        string_val: "appeared"
        string_val: "appears"
        string_val: "applauded"
        string_val: "applicants"
        string_val: "applied"
        string_val: "apply"
        string_val: "applying"
        string_val: "appointed"
        string_val: "appointing"
        string_val: "appointment"
        string_val: "appointments"
        string_val: "approach"
        string_val: "approached"
        string_val: "approaching"
        string_val: "appropriate"
        string_val: "approval"
        string_val: "approvals"
        string_val: "approve"
        string_val: "approved"
        string_val: "april"
        string_val: "arabia"
        string_val: "arabs"
        string_val: "arafat"
        string_val: "arc"
        string_val: "arch"
        string_val: "archaic"
        string_val: "archer"
        string_val: "architect"
        string_val: "architects"
        string_val: "are"
        string_val: "area"
        string_val: "areas"
        string_val: "arent"
        string_val: "argue"
        string_val: "argued"
        string_val: "argues"
        string_val: "arguing"
        string_val: "argument"
        string_val: "arguments"
        string_val: "arise"
        string_val: "arises"
        string_val: "aristotle"
        string_val: "arm"
        string_val: "army"
        string_val: "arnie"
        string_val: "around"
        string_val: "arranged"
        string_val: "arrangement"
        string_val: "arrest"
        string_val: "arrested"
        string_val: "arrival"
        string_val: "arrived"
        string_val: "arrogance"
        string_val: "arrogant"
        string_val: "arrow"
        string_val: "arsenal"
        string_val: "art"
        string_val: "article"
        string_val: "artist"
        string_val: "artists"
        string_val: "arts"
        string_val: "artwork"
        string_val: "as"
        string_val: "ashamed"
        string_val: "aside"
        string_val: "ask"
        string_val: "asked"
        string_val: "asking"
        string_val: "aspect"
        string_val: "aspects"
        string_val: "assassin"
        string_val: "assault"
        string_val: "assaulted"
        string_val: "assaults"
        string_val: "assembly"
        string_val: "assertion"
        string_val: "assess"
        string_val: "assessment"
        string_val: "asset"
        string_val: "assets"
        string_val: "assignment"
        string_val: "assistance"
        string_val: "assumed"
        string_val: "assumption"
        string_val: "assure"
        string_val: "assured"
        string_val: "aston"
        string_val: "astonished"
        string_val: "asylum"
        string_val: "at"
        string_val: "athens"
        string_val: "athlete"
        string_val: "athletes"
        string_val: "athletics"
        string_val: "atmosphere"
        string_val: "atrocious"
        string_val: "attachment"
        string_val: "attack"
        string_val: "attacked"
        string_val: "attacker"
        string_val: "attacking"
        string_val: "attacks"
        string_val: "attempt"
        string_val: "attempted"
        string_val: "attempting"
        string_val: "attempts"
        string_val: "attend"
        string_val: "attendance"
        string_val: "attended"
        string_val: "attention"
        string_val: "attitude"
        string_val: "attitudes"
        string_val: "attorney"
        string_val: "attracted"
        string_val: "attracting"
        string_val: "attraction"
        string_val: "attractive"
        string_val: "attrition"
        string_val: "auction"
        string_val: "audacious"
        string_val: "audible"
        string_val: "audience"
        string_val: "audiences"
        string_val: "audio"
        string_val: "audit"
        string_val: "audition"
        string_val: "auditors"
        string_val: "august"
        string_val: "augusta"
        string_val: "australia"
        string_val: "austria"
        string_val: "authorities"
        string_val: "authority"
        string_val: "authors"
        string_val: "autism"
        string_val: "autumn"
        string_val: "avail"
        string_val: "available"
        string_val: "avalanche"
        string_val: "average"
        string_val: "averted"
        string_val: "avoid"
        string_val: "avoided"
        string_val: "awaiting"
        string_val: "awaits"
        string_val: "award"
        string_val: "awarded"
        string_val: "awards"
        string_val: "aware"
        string_val: "awareness"
        string_val: "away"
        string_val: "awesome"
        string_val: "awful"
        string_val: "axis"
        string_val: "aye"
        string_val: "ayr"
        string_val: "ayrshire"
        string_val: "b"
        string_val: "ba"
        string_val: "baby"
        string_val: "back"
        string_val: "backdated"
        string_val: "backed"
        string_val: "backfire"
        string_val: "background"
        string_val: "backing"
        string_val: "backwards"
        string_val: "backyard"
        string_val: "bacterium"
        string_val: "bad"
        string_val: "badly"
        string_val: "badminton"
        string_val: "bags"
        string_val: "balance"
        string_val: "balanced"
        string_val: "balancing"
        string_val: "balkans"
        string_val: "ball"
        string_val: "ballet"
        string_val: "ballot"
        string_val: "baloney"
        string_val: "ban"
        string_val: "band"
        string_val: "bands"
        string_val: "bank"
        string_val: "banker"
        string_val: "bankers"
        string_val: "banking"
        string_val: "banks"
        string_val: "banned"
        string_val: "bar"
        string_val: "barber"
        string_val: "bare"
        string_val: "barely"
        string_val: "bargain"
        string_val: "barnett"
        string_val: "barrier"
        string_val: "barriers"
        string_val: "barry"
        string_val: "base"
        string_val: "based"
        string_val: "basic"
        string_val: "basically"
        string_val: "basics"
        string_val: "basis"
        string_val: "basketball"
        string_val: "bass"
        string_val: "bastard"
        string_val: "bastards"
        string_val: "bath"
        string_val: "baton"
        string_val: "battle"
        string_val: "baxter"
        string_val: "bbc"
        string_val: "be"
        string_val: "beach"
        string_val: "bear"
        string_val: "beat"
        string_val: "beaten"
        string_val: "beating"
        string_val: "beautiful"
        string_val: "beauty"
        string_val: "became"
        string_val: "because"
        string_val: "become"
        string_val: "becomes"
        string_val: "becoming"
        string_val: "bed"
        string_val: "bedroom"
        string_val: "bedside"
        string_val: "beef"
        string_val: "been"
        string_val: "beethoven"
        string_val: "before"
        string_val: "beforehand"
        string_val: "began"
        string_val: "begin"
        string_val: "beginning"
        string_val: "begins"
        string_val: "begun"
        string_val: "behalf"
        string_val: "behaved"
        string_val: "behaviour"
        string_val: "behind"
        string_val: "being"
        string_val: "beings"
        string_val: "belfast"
        string_val: "belgium"
        string_val: "belief"
        string_val: "beliefs"
        string_val: "believe"
        string_val: "believed"
        string_val: "believer"
        string_val: "believes"
        string_val: "believing"
        string_val: "belongs"
        string_val: "beloved"
        string_val: "bemused"
        string_val: "bench"
        string_val: "benches"
        string_val: "benchmark"
        string_val: "benefit"
        string_val: "benefits"
        string_val: "bereavement"
        string_val: "berlin"
        string_val: "beside"
        string_val: "best"
        string_val: "bet"
        string_val: "betrayal"
        string_val: "better"
        string_val: "between"
        string_val: "bevan"
        string_val: "bewildered"
        string_val: "beyond"
        string_val: "bid"
        string_val: "bidder"
        string_val: "big"
        string_val: "bigger"
        string_val: "biggest"
        string_val: "bigotry"
        string_val: "bill"
        string_val: "billie"
        string_val: "bills"
        string_val: "billy"
        string_val: "bin"
        string_val: "binding"
        string_val: "birdie"
        string_val: "birthday"
        string_val: "birthdays"
        string_val: "biscuit"
        string_val: "biscuits"
        string_val: "bit"
        string_val: "bitter"
        string_val: "bitterly"
        string_val: "bitterness"
        string_val: "bizarre"
        string_val: "black"
        string_val: "blackburn"
        string_val: "blackened"
        string_val: "blackout"
        string_val: "blair"
        string_val: "blairs"
        string_val: "blame"
        string_val: "blamed"
        string_val: "blaming"
        string_val: "blast"
        string_val: "blessing"
        string_val: "blew"
        string_val: "blind"
        string_val: "block"
        string_val: "blocks"
        string_val: "blood"
        string_val: "bloody"
        string_val: "blow"
        string_val: "blown"
        string_val: "blue"
        string_val: "blueits"
        string_val: "blueprint"
        string_val: "blueshe"
        string_val: "blunkett"
        string_val: "blunt"
        string_val: "board"
        string_val: "boarding"
        string_val: "boat"
        string_val: "boats"
        string_val: "bob"
        string_val: "bobby"
        string_val: "bodies"
        string_val: "body"
        string_val: "boiling"
        string_val: "bomb"
        string_val: "bombardment"
        string_val: "bomber"
        string_val: "bombers"
        string_val: "bombing"
        string_val: "bonnie"
        string_val: "bonus"
        string_val: "book"
        string_val: "booked"
        string_val: "bookies"
        string_val: "booking"
        string_val: "bookings"
        string_val: "books"
        string_val: "bookshops"
        string_val: "boost"
        string_val: "border"
        string_val: "borderer"
        string_val: "borders"
        string_val: "born"
        string_val: "borrowing"
        string_val: "bosnia"
        string_val: "boss"
        string_val: "both"
        string_val: "bother"
        string_val: "bottle"
        string_val: "bottling"
        string_val: "bottom"
        string_val: "bought"
        string_val: "bound"
        string_val: "boundaries"
        string_val: "bout"
        string_val: "bow"
        string_val: "bows"
        string_val: "box"
        string_val: "boxer"
        string_val: "boxing"
        string_val: "boy"
        string_val: "boys"
        string_val: "branch"
        string_val: "branches"
        string_val: "brand"
        string_val: "bravado"
        string_val: "brave"
        string_val: "brazil"
        string_val: "breach"
        string_val: "breadwinner"
        string_val: "break"
        string_val: "breakaway"
        string_val: "breakdown"
        string_val: "breakin"
        string_val: "breaking"
        string_val: "breakthrough"
        string_val: "breath"
        string_val: "breathtaking"
        string_val: "breeding"
        string_val: "brian"
        string_val: "bridge"
        string_val: "briefly"
        string_val: "brigades"
        string_val: "bright"
        string_val: "brighter"
        string_val: "brighton"
        string_val: "brilliant"
        string_val: "bring"
        string_val: "bringing"
        string_val: "brings"
        string_val: "brink"
        string_val: "britain"
        string_val: "britains"
        string_val: "british"
        string_val: "briton"
        string_val: "brittle"
        string_val: "britton"
        string_val: "broadcast"
        string_val: "broadcasting"
        string_val: "broadly"
        string_val: "brochure"
        string_val: "broke"
        string_val: "broken"
        string_val: "bronze"
        string_val: "broomfield"
        string_val: "brother"
        string_val: "brothers"
        string_val: "brought"
        string_val: "brown"
        string_val: "bruce"
        string_val: "brunt"
        string_val: "brussels"
        string_val: "bubbles"
        string_val: "bucket"
        string_val: "buckingham"
        string_val: "budget"
        string_val: "bug"
        string_val: "build"
        string_val: "building"
        string_val: "buildings"
        string_val: "buildup"
        string_val: "built"
        string_val: "bulk"
        string_val: "bully"
        string_val: "bunch"
        string_val: "bunker"
        string_val: "bunkers"
        string_val: "buoyant"
        string_val: "burger"
        string_val: "burial"
        string_val: "buried"
        string_val: "burning"
        string_val: "burrell"
        string_val: "bus"
        string_val: "buses"
        string_val: "bush"
        string_val: "business"
        string_val: "businesses"
        string_val: "businesslike"
        string_val: "busy"
        string_val: "but"
        string_val: "butcher"
        string_val: "buy"
        string_val: "buyer"
        string_val: "buying"
        string_val: "buzz"
        string_val: "by"
        string_val: "byers"
        string_val: "bystanders"
        string_val: "cabinet"
        string_val: "cable"
        string_val: "cafe"
        string_val: "cake"
        string_val: "calderwood"
        string_val: "calibre"
        string_val: "call"
        string_val: "called"
        string_val: "calling"
        string_val: "callous"
        string_val: "calls"
        string_val: "calm"
        string_val: "calvin"
        string_val: "came"
        string_val: "camera"
        string_val: "cameron"
        string_val: "campaign"
        string_val: "campaigners"
        string_val: "campaigning"
        string_val: "campbell"
        string_val: "can"
        string_val: "canada"
        string_val: "cancelled"
        string_val: "cancer"
        string_val: "candid"
        string_val: "candidate"
        string_val: "candidates"
        string_val: "cannabis"
        string_val: "cannes"
        string_val: "cannot"
        string_val: "cant"
        string_val: "cap"
        string_val: "capable"
        string_val: "capacity"
        string_val: "capital"
        string_val: "captain"
        string_val: "captaincy"
        string_val: "captors"
        string_val: "capture"
        string_val: "car"
        string_val: "carcasses"
        string_val: "card"
        string_val: "cards"
        string_val: "care"
        string_val: "career"
        string_val: "careful"
        string_val: "carefully"
        string_val: "carers"
        string_val: "cares"
        string_val: "carlo"
        string_val: "carlton"
        string_val: "caroline"
        string_val: "carpet"
        string_val: "carried"
        string_val: "carries"
        string_val: "carry"
        string_val: "carrying"
        string_val: "cars"
        string_val: "case"
        string_val: "cases"
        string_val: "cash"
        string_val: "cassette"
        string_val: "cast"
        string_val: "casting"
        string_val: "castle"
        string_val: "casualties"
        string_val: "casualty"
        string_val: "catalogue"
        string_val: "catalyst"
        string_val: "catastrophe"
        string_val: "catch"
        string_val: "catching"
        string_val: "catholic"
        string_val: "cattle"
        string_val: "catwalk"
        string_val: "caught"
        string_val: "cause"
        string_val: "caused"
        string_val: "causes"
        string_val: "causing"
        string_val: "caution"
        string_val: "cautious"
        string_val: "caveat"
        string_val: "ceasefire"
        string_val: "ceiling"
        string_val: "celebrate"
        string_val: "cell"
        string_val: "cellars"
        string_val: "celtic"
        string_val: "central"
        string_val: "centre"
        string_val: "centres"
        string_val: "centuries"
        string_val: "century"
        string_val: "certain"
        string_val: "certainly"
        string_val: "chairman"
        string_val: "challenge"
        string_val: "challenged"
        string_val: "challenges"
        string_val: "challenging"
        string_val: "chamber"
        string_val: "chambers"
        string_val: "champagne"
        string_val: "champion"
        string_val: "champions"
        string_val: "championship"
        string_val: "championships"
        string_val: "chance"
        string_val: "chancellor"
        string_val: "chancellors"
        string_val: "chances"
        string_val: "change"
        string_val: "changed"
        string_val: "changes"
        string_val: "changing"
        string_val: "channel"
        string_val: "chaos"
        string_val: "chaotic"
        string_val: "chapter"
        string_val: "character"
        string_val: "characters"
        string_val: "charge"
        string_val: "charged"
        string_val: "charges"
        string_val: "charisma"
        string_val: "charity"
        string_val: "charles"
        string_val: "charlie"
        string_val: "charm"
        string_val: "chat"
        string_val: "cheap"
        string_val: "chechens"
        string_val: "check"
        string_val: "checkup"
        string_val: "cheese"
        string_val: "chelsea"
        string_val: "chemistry"
        string_val: "chief"
        string_val: "chiefs"
        string_val: "child"
        string_val: "childbirth"
        string_val: "childhood"
        string_val: "children"
        string_val: "chill"
        string_val: "chilling"
        string_val: "china"
        string_val: "chirac"
        string_val: "chisholm"
        string_val: "choice"
        string_val: "choices"
        string_val: "choir"
        string_val: "choose"
        string_val: "chose"
        string_val: "chosen"
        string_val: "chris"
        string_val: "christina"
        string_val: "christmas"
        string_val: "church"
        string_val: "cigarette"
        string_val: "cinema"
        string_val: "circle"
        string_val: "circumstances"
        string_val: "cities"
        string_val: "citizens"
        string_val: "city"
        string_val: "civic"
        string_val: "civil"
        string_val: "civilians"
        string_val: "civilised"
        string_val: "claim"
        string_val: "claimed"
        string_val: "claiming"
        string_val: "claims"
        string_val: "clarify"
        string_val: "clarity"
        string_val: "clark"
        string_val: "clarke"
        string_val: "class"
        string_val: "classes"
        string_val: "classic"
        string_val: "classical"
        string_val: "clean"
        string_val: "cleaner"
        string_val: "clear"
        string_val: "clearcut"
        string_val: "cleared"
        string_val: "clearer"
        string_val: "clearly"
        string_val: "clerk"
        string_val: "clever"
        string_val: "clients"
        string_val: "climate"
        string_val: "climax"
        string_val: "climb"
        string_val: "clinical"
        string_val: "clinicians"
        string_val: "clinton"
        string_val: "cloning"
        string_val: "close"
        string_val: "closed"
        string_val: "closely"
        string_val: "closing"
        string_val: "closure"
        string_val: "club"
        string_val: "clubhouse"
        string_val: "clubs"
        string_val: "clue"
        string_val: "clutching"
        string_val: "clydesdale"
        string_val: "coach"
        string_val: "coaches"
        string_val: "coaching"
        string_val: "coalition"
        string_val: "coast"
        string_val: "code"
        string_val: "coe"
        string_val: "coffins"
        string_val: "cohesion"
        string_val: "cold"
        string_val: "colin"
        string_val: "collaboration"
        string_val: "collapse"
        string_val: "collapsed"
        string_val: "colleagues"
        string_val: "collecting"
        string_val: "collection"
        string_val: "collective"
        string_val: "college"
        string_val: "collision"
        string_val: "colonel"
        string_val: "colored"
        string_val: "colors"
        string_val: "colour"
        string_val: "colourful"
        string_val: "colours"
        string_val: "coma"
        string_val: "combat"
        string_val: "combination"
        string_val: "come"
        string_val: "comedian"
        string_val: "comedy"
        string_val: "comended"
        string_val: "comes"
        string_val: "comfortable"
        string_val: "comforted"
        string_val: "comforting"
        string_val: "coming"
        string_val: "commanding"
        string_val: "comment"
        string_val: "commenting"
        string_val: "comments"
        string_val: "commercial"
        string_val: "commission"
        string_val: "commissioned"
        string_val: "commitment"
        string_val: "commitments"
        string_val: "committed"
        string_val: "committee"
        string_val: "committees"
        string_val: "committing"
        string_val: "common"
        string_val: "commonplace"
        string_val: "commons"
        string_val: "commonwealth"
        string_val: "commonwealths"
        string_val: "communal"
        string_val: "communist"
        string_val: "companies"
        string_val: "companion"
        string_val: "company"
        string_val: "companys"
        string_val: "compare"
        string_val: "comparing"
        string_val: "compelled"
        string_val: "compelling"
        string_val: "compensation"
        string_val: "compete"
        string_val: "competed"
        string_val: "competing"
        string_val: "compiled"
        string_val: "complacent"
        string_val: "complaining"
        string_val: "complaint"
        string_val: "complaints"
        string_val: "complete"
        string_val: "completed"
        string_val: "completely"
        string_val: "completing"
        string_val: "completion"
        string_val: "complex"
        string_val: "compliance"
        string_val: "complicated"
        string_val: "comply"
        string_val: "composer"
        string_val: "composite"
        string_val: "composure"
        string_val: "compromise"
        string_val: "computer"
        string_val: "conceded"
        string_val: "conceived"
        string_val: "concentrate"
        string_val: "concept"
        string_val: "concern"
        string_val: "concerned"
        string_val: "concerns"
        string_val: "concert"
        string_val: "concerted"
        string_val: "concerto"
        string_val: "concertos"
        string_val: "concession"
        string_val: "concessions"
        string_val: "conclude"
        string_val: "concluding"
        string_val: "conclusion"
        string_val: "conclusions"
        string_val: "condemned"
        string_val: "condition"
        string_val: "conditions"
        string_val: "conduct"
        string_val: "conducted"
        string_val: "conductor"
        string_val: "conference"
        string_val: "confess"
        string_val: "confession"
        string_val: "confidence"
        string_val: "confident"
        string_val: "confined"
        string_val: "confirm"
        string_val: "confirmed"
        string_val: "confirms"
        string_val: "conflict"
        string_val: "conflicts"
        string_val: "conform"
        string_val: "confronted"
        string_val: "confused"
        string_val: "confusion"
        string_val: "congestion"
        string_val: "connected"
        string_val: "connection"
        string_val: "connections"
        string_val: "connell"
        string_val: "connery"
        string_val: "conscience"
        string_val: "conscious"
        string_val: "conscripts"
        string_val: "consensus"
        string_val: "consent"
        string_val: "consequence"
        string_val: "consequences"
        string_val: "conservative"
        string_val: "consider"
        string_val: "considerably"
        string_val: "consideration"
        string_val: "considered"
        string_val: "consigned"
        string_val: "consistent"
        string_val: "conspicuous"
        string_val: "constable"
        string_val: "constant"
        string_val: "constantly"
        string_val: "constructed"
        string_val: "construction"
        string_val: "constructive"
        string_val: "consular"
        string_val: "consult"
        string_val: "consultant"
        string_val: "consultants"
        string_val: "consultation"
        string_val: "consulted"
        string_val: "consulting"
        string_val: "consumed"
        string_val: "consumer"
        string_val: "consumers"
        string_val: "consuming"
        string_val: "consumption"
        string_val: "contact"
        string_val: "contacted"
        string_val: "contain"
        string_val: "contained"
        string_val: "contempt"
        string_val: "contender"
        string_val: "contenders"
        string_val: "content"
        string_val: "contention"
        string_val: "contentious"
        string_val: "contest"
        string_val: "contested"
        string_val: "context"
        string_val: "continue"
        string_val: "continued"
        string_val: "continues"
        string_val: "contract"
        string_val: "contractor"
        string_val: "contracts"
        string_val: "contrary"
        string_val: "contrast"
        string_val: "contrasting"
        string_val: "contribute"
        string_val: "contribution"
        string_val: "control"
        string_val: "controlled"
        string_val: "controller"
        string_val: "controllers"
        string_val: "convened"
        string_val: "conversion"
        string_val: "converted"
        string_val: "convicted"
        string_val: "conviction"
        string_val: "convictions"
        string_val: "convince"
        string_val: "convinced"
        string_val: "convincing"
        string_val: "cook"
        string_val: "cooking"
        string_val: "cool"
        string_val: "cooper"
        string_val: "cop"
        string_val: "cope"
        string_val: "copy"
        string_val: "core"
        string_val: "corner"
        string_val: "corporate"
        string_val: "correct"
        string_val: "corrected"
        string_val: "correction"
        string_val: "cost"
        string_val: "costed"
        string_val: "costs"
        string_val: "could"
        string_val: "couldnt"
        string_val: "couldve"
        string_val: "council"
        string_val: "councillor"
        string_val: "councillors"
        string_val: "councils"
        string_val: "counselling"
        string_val: "count"
        string_val: "counter"
        string_val: "counterpart"
        string_val: "countries"
        string_val: "country"
        string_val: "countrymen"
        string_val: "countryside"
        string_val: "counts"
        string_val: "couple"
        string_val: "courage"
        string_val: "course"
        string_val: "courses"
        string_val: "court"
        string_val: "courtesy"
        string_val: "courtroom"
        string_val: "cover"
        string_val: "covered"
        string_val: "covers"
        string_val: "coverup"
        string_val: "cow"
        string_val: "crack"
        string_val: "crackdown"
        string_val: "cracking"
        string_val: "craig"
        string_val: "crash"
        string_val: "crawford"
        string_val: "crazy"
        string_val: "create"
        string_val: "created"
        string_val: "creating"
        string_val: "creation"
        string_val: "creative"
        string_val: "creator"
        string_val: "credible"
        string_val: "credit"
        string_val: "creditors"
        string_val: "crest"
        string_val: "crew"
        string_val: "criminal"
        string_val: "criminals"
        string_val: "crisis"
        string_val: "criteria"
        string_val: "critical"
        string_val: "critically"
        string_val: "criticise"
        string_val: "criticised"
        string_val: "criticism"
        string_val: "critics"
        string_val: "crops"
        string_val: "cross"
        string_val: "crosscountry"
        string_val: "crossed"
        string_val: "crossfire"
        string_val: "crossroads"
        string_val: "crowd"
        string_val: "crowds"
        string_val: "crown"
        string_val: "crowning"
        string_val: "crucial"
        string_val: "crucially"
        string_val: "cruelty"
        string_val: "crunch"
        string_val: "cry"
        string_val: "crystal"
        string_val: "cull"
        string_val: "culpable"
        string_val: "culture"
        string_val: "cultures"
        string_val: "cup"
        string_val: "curious"
        string_val: "currency"
        string_val: "current"
        string_val: "currently"
        string_val: "curse"
        string_val: "curve"
        string_val: "customer"
        string_val: "customers"
        string_val: "cut"
        string_val: "cuts"
        string_val: "cutting"
        string_val: "cycle"
        string_val: "cycling"
        string_val: "cynical"
        string_val: "dad"
        string_val: "daily"
        string_val: "dairy"
        string_val: "daly"
        string_val: "damage"
        string_val: "damaged"
        string_val: "damages"
        string_val: "damaging"
        string_val: "dance"
        string_val: "dancer"
        string_val: "dancers"
        string_val: "dancing"
        string_val: "danger"
        string_val: "dangerous"
        string_val: "dangers"
        string_val: "danish"
        string_val: "danny"
        string_val: "dark"
        string_val: "darling"
        string_val: "darrell"
        string_val: "darren"
        string_val: "data"
        string_val: "database"
        string_val: "date"
        string_val: "daughter"
        string_val: "david"
        string_val: "davies"
        string_val: "davis"
        string_val: "dawson"
        string_val: "day"
        string_val: "days"
        string_val: "daytime"
        string_val: "daytoday"
        string_val: "de"
        string_val: "deacon"
        string_val: "dead"
        string_val: "deadline"
        string_val: "deadly"
        string_val: "deal"
        string_val: "dealer"
        string_val: "dealers"
        string_val: "dealing"
        string_val: "deals"
        string_val: "dealt"
        string_val: "death"
        string_val: "debate"
        string_val: "debated"
        string_val: "debbie"
        string_val: "debt"
        string_val: "debut"
        string_val: "decade"
        string_val: "decades"
        string_val: "deceit"
        string_val: "december"
        string_val: "decent"
        string_val: "deception"
        string_val: "decide"
        string_val: "decided"
        string_val: "decides"
        string_val: "deciding"
        string_val: "decision"
        string_val: "decisions"
        string_val: "decisive"
        string_val: "declare"
        string_val: "declared"
        string_val: "decline"
        string_val: "declined"
        string_val: "declining"
        string_val: "deep"
        string_val: "deeply"
        string_val: "default"
        string_val: "defeat"
        string_val: "defeated"
        string_val: "defeats"
        string_val: "defence"
        string_val: "defences"
        string_val: "defend"
        string_val: "defended"
        string_val: "defender"
        string_val: "defending"
        string_val: "defensive"
        string_val: "deferred"
        string_val: "defiance"
        string_val: "defiant"
        string_val: "deficit"
        string_val: "defies"
        string_val: "defined"
        string_val: "defining"
        string_val: "definite"
        string_val: "degree"
        string_val: "degrees"
        string_val: "deja"
        string_val: "dejected"
        string_val: "delay"
        string_val: "delaying"
        string_val: "delicate"
        string_val: "delight"
        string_val: "delighted"
        string_val: "delightful"
        string_val: "deliver"
        string_val: "delivered"
        string_val: "demand"
        string_val: "demanded"
        string_val: "demanding"
        string_val: "demands"
        string_val: "demeaning"
        string_val: "demeanour"
        string_val: "demented"
        string_val: "demise"
        string_val: "democrat"
        string_val: "democrats"
        string_val: "demolished"
        string_val: "denial"
        string_val: "denied"
        string_val: "dennis"
        string_val: "denounced"
        string_val: "deny"
        string_val: "denying"
        string_val: "department"
        string_val: "departments"
        string_val: "departure"
        string_val: "depend"
        string_val: "dependent"
        string_val: "depends"
        string_val: "depleted"
        string_val: "deployed"
        string_val: "deported"
        string_val: "depressed"
        string_val: "depressing"
        string_val: "depression"
        string_val: "depth"
        string_val: "deputy"
        string_val: "derailment"
        string_val: "derby"
        string_val: "derek"
        string_val: "descent"
        string_val: "describe"
        string_val: "described"
        string_val: "describes"
        string_val: "description"
        string_val: "desert"
        string_val: "deserted"
        string_val: "deserve"
        string_val: "deserved"
        string_val: "deserves"
        string_val: "design"
        string_val: "designed"
        string_val: "designers"
        string_val: "desire"
        string_val: "desired"
        string_val: "desperate"
        string_val: "desperately"
        string_val: "despite"
        string_val: "despondent"
        string_val: "destiny"
        string_val: "destroy"
        string_val: "destroyed"
        string_val: "destroying"
        string_val: "destruction"
        string_val: "detail"
        string_val: "detailed"
        string_val: "details"
        string_val: "detained"
        string_val: "detection"
        string_val: "detectives"
        string_val: "deteriorated"
        string_val: "determine"
        string_val: "determined"
        string_val: "develop"
        string_val: "developed"
        string_val: "development"
        string_val: "device"
        string_val: "devices"
        string_val: "devil"
        string_val: "devolved"
        string_val: "devon"
        string_val: "devoted"
        string_val: "devotion"
        string_val: "dewar"
        string_val: "diagnosed"
        string_val: "diagnosis"
        string_val: "dialogue"
        string_val: "dick"
        string_val: "dickens"
        string_val: "dictator"
        string_val: "did"
        string_val: "didnt"
        string_val: "die"
        string_val: "died"
        string_val: "diego"
        string_val: "differ"
        string_val: "differed"
        string_val: "difference"
        string_val: "differences"
        string_val: "different"
        string_val: "differently"
        string_val: "difficult"
        string_val: "digital"
        string_val: "dignity"
        string_val: "dilemma"
        string_val: "diligent"
        string_val: "dimensions"
        string_val: "diminished"
        string_val: "dining"
        string_val: "dinner"
        string_val: "dip"
        string_val: "direct"
        string_val: "direction"
        string_val: "directions"
        string_val: "director"
        string_val: "directors"
        string_val: "dirty"
        string_val: "disabled"
        string_val: "disagree"
        string_val: "disappear"
        string_val: "disappeared"
        string_val: "disappoint"
        string_val: "disappointed"
        string_val: "disappointing"
        string_val: "disarerry"
        string_val: "disarming"
        string_val: "disarray"
        string_val: "disaster"
        string_val: "disastrous"
        string_val: "disbelief"
        string_val: "discharged"
        string_val: "discipline"
        string_val: "disciplined"
        string_val: "disciplines"
        string_val: "disclosed"
        string_val: "discontent"
        string_val: "discounting"
        string_val: "discourage"
        string_val: "discovered"
        string_val: "discrimination"
        string_val: "discuss"
        string_val: "discussed"
        string_val: "discussion"
        string_val: "discussions"
        string_val: "disease"
        string_val: "disgrace"
        string_val: "disgraceful"
        string_val: "disgusted"
        string_val: "disgusting"
        string_val: "dismal"
        string_val: "dismissal"
        string_val: "dismissed"
        string_val: "dismissive"
        string_val: "dispersal"
        string_val: "display"
        string_val: "displays"
        string_val: "disposal"
        string_val: "disposals"
        string_val: "dispute"
        string_val: "disputed"
        string_val: "disquiet"
        string_val: "disrepute"
        string_val: "disruption"
        string_val: "dissent"
        string_val: "disservice"
        string_val: "dissolve"
        string_val: "distance"
        string_val: "distances"
        string_val: "distancing"
        string_val: "distinction"
        string_val: "distinctive"
        string_val: "distorted"
        string_val: "distortion"
        string_val: "distressing"
        string_val: "district"
        string_val: "districts"
        string_val: "disturbance"
        string_val: "disturbed"
        string_val: "disturbing"
        string_val: "dithering"
        string_val: "diva"
        string_val: "diverse"
        string_val: "diversions"
        string_val: "divert"
        string_val: "divided"
        string_val: "dividend"
        string_val: "dividends"
        string_val: "diving"
        string_val: "division"
        string_val: "divorce"
        string_val: "divorced"
        string_val: "dizzy"
        string_val: "do"
        string_val: "dobson"
        string_val: "docherty"
        string_val: "doctor"
        string_val: "doctors"
        string_val: "document"
        string_val: "dodds"
        string_val: "does"
        string_val: "doesnt"
        string_val: "dog"
        string_val: "doing"
        string_val: "dollar"
        string_val: "dollars"
        string_val: "dome"
        string_val: "domestic"
        string_val: "dominant"
        string_val: "don"
        string_val: "donald"
        string_val: "donation"
        string_val: "done"
        string_val: "dont"
        string_val: "door"
        string_val: "double"
        string_val: "doubled"
        string_val: "doubt"
        string_val: "doubtful"
        string_val: "dow"
        string_val: "down"
        string_val: "downbeat"
        string_val: "downgrade"
        string_val: "downgrading"
        string_val: "downing"
        string_val: "downside"
        string_val: "downturn"
        string_val: "downward"
        string_val: "drama"
        string_val: "dramatic"
        string_val: "draw"
        string_val: "drawback"
        string_val: "drawing"
        string_val: "drawn"
        string_val: "dreadful"
        string_val: "dream"
        string_val: "dress"
        string_val: "dressing"
        string_val: "drink"
        string_val: "drinking"
        string_val: "drive"
        string_val: "driven"
        string_val: "driver"
        string_val: "drivers"
        string_val: "driving"
        string_val: "drop"
        string_val: "dropped"
        string_val: "drops"
        string_val: "drove"
        string_val: "drug"
        string_val: "drugs"
        string_val: "dublin"
        string_val: "due"
        string_val: "duke"
        string_val: "dumfries"
        string_val: "duncan"
        string_val: "dundee"
        string_val: "dunfermline"
        string_val: "during"
        string_val: "dutch"
        string_val: "dutchman"
        string_val: "duties"
        string_val: "duty"
        string_val: "dying"
        string_val: "dylan"
        string_val: "dylans"
        string_val: "dynamic"
        string_val: "dynamics"
        string_val: "e"
        string_val: "each"
        string_val: "earlier"
        string_val: "early"
        string_val: "earned"
        string_val: "earth"
        string_val: "easier"
        string_val: "easily"
        string_val: "east"
        string_val: "easter"
        string_val: "eastern"
        string_val: "easy"
        string_val: "eat"
        string_val: "eating"
        string_val: "echo"
        string_val: "echoed"
        string_val: "economic"
        string_val: "economy"
        string_val: "ecstatic"
        string_val: "eden"
        string_val: "edge"
        string_val: "edges"
        string_val: "edinburgh"
        string_val: "edited"
        string_val: "editor"
        string_val: "edmonton"
        string_val: "education"
        string_val: "effect"
        string_val: "effective"
        string_val: "effects"
        string_val: "effort"
        string_val: "efforts"
        string_val: "ego"
        string_val: "egypt"
        string_val: "eight"
        string_val: "eighties"
        string_val: "either"
        string_val: "elan"
        string_val: "elderly"
        string_val: "elected"
        string_val: "election"
        string_val: "elections"
        string_val: "electors"
        string_val: "electric"
        string_val: "electricity"
        string_val: "element"
        string_val: "elements"
        string_val: "eleven"
        string_val: "elgin"
        string_val: "elliot"
        string_val: "else"
        string_val: "elsewhere"
        string_val: "eluded"
        string_val: "elusive"
        string_val: "email"
        string_val: "embargo"
        string_val: "embarrassed"
        string_val: "embassy"
        string_val: "emerge"
        string_val: "emerged"
        string_val: "emergency"
        string_val: "emerges"
        string_val: "emerging"
        string_val: "emi"
        string_val: "emotionally"
        string_val: "emotions"
        string_val: "emphasis"
        string_val: "emphasise"
        string_val: "emphasised"
        string_val: "empire"
        string_val: "employed"
        string_val: "employee"
        string_val: "employees"
        string_val: "employer"
        string_val: "employers"
        string_val: "employment"
        string_val: "empowering"
        string_val: "empty"
        string_val: "emu"
        string_val: "emulate"
        string_val: "enabled"
        string_val: "encore"
        string_val: "encounter"
        string_val: "encourage"
        string_val: "encouraged"
        string_val: "end"
        string_val: "endangered"
        string_val: "endeavour"
        string_val: "ended"
        string_val: "endemic"
        string_val: "ending"
        string_val: "endorse"
        string_val: "endorsed"
        string_val: "ends"
        string_val: "endurance"
        string_val: "endure"
        string_val: "enduring"
        string_val: "enemies"
        string_val: "enemy"
        string_val: "energies"
        string_val: "energised"
        string_val: "energy"
        string_val: "enforce"
        string_val: "enforced"
        string_val: "enforcement"
        string_val: "engage"
        string_val: "engaged"
        string_val: "engaging"
        string_val: "engineer"
        string_val: "england"
        string_val: "english"
        string_val: "enhanced"
        string_val: "enjoy"
        string_val: "enjoyable"
        string_val: "enjoyed"
        string_val: "enjoying"
        string_val: "enormous"
        string_val: "enough"
        string_val: "ensure"
        string_val: "enter"
        string_val: "enterprise"
        string_val: "entertain"
        string_val: "entertained"
        string_val: "enthralling"
        string_val: "entirely"
        string_val: "entitled"
        string_val: "entrance"
        string_val: "entrapment"
        string_val: "entries"
        string_val: "entry"
        string_val: "envelope"
        string_val: "envious"
        string_val: "environment"
        string_val: "environmental"
        string_val: "epic"
        string_val: "episode"
        string_val: "equal"
        string_val: "equally"
        string_val: "equals"
        string_val: "equation"
        string_val: "equipment"
        string_val: "equipped"
        string_val: "equity"
        string_val: "era"
        string_val: "erased"
        string_val: "eriksson"
        string_val: "erotic"
        string_val: "error"
        string_val: "errors"
        string_val: "escape"
        string_val: "escaped"
        string_val: "escaping"
        string_val: "essence"
        string_val: "essential"
        string_val: "establish"
        string_val: "established"
        string_val: "estate"
        string_val: "ethic"
        string_val: "ethical"
        string_val: "ethics"
        string_val: "ethos"
        string_val: "euphoric"
        string_val: "euro"
        string_val: "europe"
        string_val: "european"
        string_val: "euros"
        string_val: "even"
        string_val: "evening"
        string_val: "evenly"
        string_val: "event"
        string_val: "eventful"
        string_val: "events"
        string_val: "ever"
        string_val: "every"
        string_val: "everyone"
        string_val: "everyones"
        string_val: "everything"
        string_val: "everywhere"
        string_val: "evicted"
        string_val: "eviction"
        string_val: "evidence"
        string_val: "evident"
        string_val: "evil"
        string_val: "evolving"
        string_val: "exacting"
        string_val: "exactly"
        string_val: "example"
        string_val: "examples"
        string_val: "exams"
        string_val: "excel"
        string_val: "excellent"
        string_val: "except"
        string_val: "exception"
        string_val: "exceptions"
        string_val: "excess"
        string_val: "exchange"
        string_val: "excited"
        string_val: "excitement"
        string_val: "exciting"
        string_val: "excluded"
        string_val: "excluding"
        string_val: "excuse"
        string_val: "excuses"
        string_val: "executive"
        string_val: "exercise"
        string_val: "exhausted"
        string_val: "exhaustive"
        string_val: "exist"
        string_val: "existed"
        string_val: "existence"
        string_val: "existing"
        string_val: "exists"
        string_val: "expand"
        string_val: "expanded"
        string_val: "expansion"
        string_val: "expansions"
        string_val: "expect"
        string_val: "expectations"
        string_val: "expected"
        string_val: "expense"
        string_val: "expenses"
        string_val: "expensive"
        string_val: "experience"
        string_val: "experienced"
        string_val: "expert"
        string_val: "expertise"
        string_val: "experts"
        string_val: "explain"
        string_val: "explained"
        string_val: "explains"
        string_val: "explanation"
        string_val: "explode"
        string_val: "exploding"
        string_val: "exploited"
        string_val: "explored"
        string_val: "explosion"
        string_val: "explosive"
        string_val: "export"
        string_val: "exposure"
        string_val: "express"
        string_val: "expressed"
        string_val: "expression"
        string_val: "expressions"
        string_val: "expressive"
        string_val: "expulsion"
        string_val: "extended"
        string_val: "extension"
        string_val: "extent"
        string_val: "external"
        string_val: "extinction"
        string_val: "extra"
        string_val: "extraordinary"
        string_val: "extreme"
        string_val: "extremely"
        string_val: "eye"
        string_val: "eyeing"
        string_val: "eyes"
        string_val: "eyesight"
        string_val: "face"
        string_val: "faceless"
        string_val: "faces"
        string_val: "facing"
        string_val: "fact"
        string_val: "factor"
        string_val: "factors"
        string_val: "facts"
        string_val: "fail"
        string_val: "failed"
        string_val: "failing"
        string_val: "failings"
        string_val: "failure"
        string_val: "failures"
        string_val: "fair"
        string_val: "fairly"
        string_val: "fairy"
        string_val: "faith"
        string_val: "fake"
        string_val: "falklands"
        string_val: "fall"
        string_val: "fallen"
        string_val: "falling"
        string_val: "falls"
        string_val: "fame"
        string_val: "familiar"
        string_val: "families"
        string_val: "family"
        string_val: "famous"
        string_val: "famously"
        string_val: "fan"
        string_val: "fancy"
        string_val: "fans"
        string_val: "fantastic"
        string_val: "fantasy"
        string_val: "far"
        string_val: "farce"
        string_val: "farewell"
        string_val: "farm"
        string_val: "farmer"
        string_val: "farmers"
        string_val: "farming"
        string_val: "fashion"
        string_val: "fast"
        string_val: "fatal"
        string_val: "fate"
        string_val: "father"
        string_val: "fatherhood"
        string_val: "fathom"
        string_val: "fatigue"
        string_val: "fault"
        string_val: "favour"
        string_val: "favourite"
        string_val: "favourites"
        string_val: "fbi"
        string_val: "fear"
        string_val: "feared"
        string_val: "feasible"
        string_val: "feature"
        string_val: "february"
        string_val: "fee"
        string_val: "feed"
        string_val: "feedback"
        string_val: "feel"
        string_val: "feeling"
        string_val: "feels"
        string_val: "fees"
        string_val: "feet"
        string_val: "fein"
        string_val: "fell"
        string_val: "fellowship"
        string_val: "felt"
        string_val: "female"
        string_val: "fenwick"
        string_val: "ferguson"
        string_val: "fergusons"
        string_val: "fernandez"
        string_val: "ferris"
        string_val: "festival"
        string_val: "festivals"
        string_val: "few"
        string_val: "fewer"
        string_val: "fiasco"
        string_val: "fickle"
        string_val: "field"
        string_val: "fields"
        string_val: "fiery"
        string_val: "fife"
        string_val: "fifteen"
        string_val: "fifth"
        string_val: "fight"
        string_val: "fighter"
        string_val: "fighting"
        string_val: "figure"
        string_val: "figures"
        string_val: "film"
        string_val: "filmed"
        string_val: "films"
        string_val: "filtering"
        string_val: "final"
        string_val: "finale"
        string_val: "finalised"
        string_val: "finally"
        string_val: "finals"
        string_val: "finance"
        string_val: "financed"
        string_val: "finances"
        string_val: "financial"
        string_val: "find"
        string_val: "finding"
        string_val: "findings"
        string_val: "finds"
        string_val: "fine"
        string_val: "finger"
        string_val: "fingers"
        string_val: "finish"
        string_val: "finished"
        string_val: "finisher"
        string_val: "finishing"
        string_val: "finland"
        string_val: "finnie"
        string_val: "fir"
        string_val: "fire"
        string_val: "firearm"
        string_val: "fired"
        string_val: "firefighter"
        string_val: "firm"
        string_val: "firmly"
        string_val: "first"
        string_val: "fisher"
        string_val: "fishermen"
        string_val: "fishing"
        string_val: "fit"
        string_val: "fitness"
        string_val: "fitting"
        string_val: "five"
        string_val: "fiveday"
        string_val: "fiver"
        string_val: "fix"
        string_val: "fixed"
        string_val: "fixes"
        string_val: "fixture"
        string_val: "flames"
        string_val: "flanker"
        string_val: "flashpoint"
        string_val: "flashy"
        string_val: "flat"
        string_val: "flats"
        string_val: "flawed"
        string_val: "fled"
        string_val: "flexible"
        string_val: "flight"
        string_val: "floating"
        string_val: "flooded"
        string_val: "floods"
        string_val: "floor"
        string_val: "florida"
        string_val: "flotation"
        string_val: "flourishing"
        string_val: "flow"
        string_val: "flowers"
        string_val: "flu"
        string_val: "fly"
        string_val: "focus"
        string_val: "focused"
        string_val: "folk"
        string_val: "follow"
        string_val: "followed"
        string_val: "following"
        string_val: "follows"
        string_val: "food"
        string_val: "foods"
        string_val: "fool"
        string_val: "foolhardy"
        string_val: "foolish"
        string_val: "foolishly"
        string_val: "foot"
        string_val: "footandmouth"
        string_val: "football"
        string_val: "footballer"
        string_val: "footballers"
        string_val: "for"
        string_val: "forbidden"
        string_val: "force"
        string_val: "forced"
        string_val: "forces"
        string_val: "fore"
        string_val: "forecast"
        string_val: "foreign"
        string_val: "foremost"
        string_val: "foretell"
        string_val: "forever"
        string_val: "forget"
        string_val: "forgive"
        string_val: "forgiven"
        string_val: "forgiveness"
        string_val: "forgot"
        string_val: "form"
        string_val: "formal"
        string_val: "formally"
        string_val: "format"
        string_val: "formation"
        string_val: "formed"
        string_val: "former"
        string_val: "forms"
        string_val: "formula"
        string_val: "forrester"
        string_val: "forthcoming"
        string_val: "fortnight"
        string_val: "fortunate"
        string_val: "fortune"
        string_val: "forward"
        string_val: "forwards"
        string_val: "fossil"
        string_val: "foster"
        string_val: "fought"
        string_val: "foul"
        string_val: "found"
        string_val: "foundations"
        string_val: "four"
        string_val: "fourth"
        string_val: "fouryear"
        string_val: "frame"
        string_val: "france"
        string_val: "franchise"
        string_val: "frank"
        string_val: "frankfurt"
        string_val: "frankly"
        string_val: "freaks"
        string_val: "free"
        string_val: "freedom"
        string_val: "freeforall"
        string_val: "french"
        string_val: "frenchman"
        string_val: "fresh"
        string_val: "friday"
        string_val: "friend"
        string_val: "friendly"
        string_val: "friends"
        string_val: "friendship"
        string_val: "fright"
        string_val: "frightened"
        string_val: "frightening"
        string_val: "frog"
        string_val: "from"
        string_val: "front"
        string_val: "frosty"
        string_val: "frustrated"
        string_val: "frustrating"
        string_val: "frustration"
        string_val: "frustrations"
        string_val: "fuel"
        string_val: "fulfilled"
        string_val: "fulfilment"
        string_val: "full"
        string_val: "fullscale"
        string_val: "fulltime"
        string_val: "fully"
        string_val: "fun"
        string_val: "function"
        string_val: "fund"
        string_val: "funded"
        string_val: "funding"
        string_val: "funds"
        string_val: "funny"
        string_val: "furious"
        string_val: "further"
        string_val: "fuss"
        string_val: "future"
        string_val: "futures"
        string_val: "gaelic"
        string_val: "gaffer"
        string_val: "gain"
        string_val: "gains"
        string_val: "galleries"
        string_val: "gallery"
        string_val: "galloway"
        string_val: "gamble"
        string_val: "gambling"
        string_val: "game"
        string_val: "games"
        string_val: "gap"
        string_val: "garage"
        string_val: "garcia"
        string_val: "garden"
        string_val: "gary"
        string_val: "gas"
        string_val: "gates"
        string_val: "gateway"
        string_val: "gave"
        string_val: "general"
        string_val: "generally"
        string_val: "generations"
        string_val: "generous"
        string_val: "genetic"
        string_val: "genius"
        string_val: "genocide"
        string_val: "genuine"
        string_val: "geoffrey"
        string_val: "george"
        string_val: "gerhard"
        string_val: "german"
        string_val: "germany"
        string_val: "gesture"
        string_val: "gestures"
        string_val: "get"
        string_val: "gets"
        string_val: "getting"
        string_val: "gift"
        string_val: "gigantic"
        string_val: "gilbert"
        string_val: "gimmick"
        string_val: "girl"
        string_val: "girlfriend"
        string_val: "girls"
        string_val: "give"
        string_val: "given"
        string_val: "gives"
        string_val: "giving"
        string_val: "glad"
        string_val: "glasgow"
        string_val: "glass"
        string_val: "global"
        string_val: "glory"
        string_val: "gm"
        string_val: "go"
        string_val: "goal"
        string_val: "goalkeeper"
        string_val: "goalposts"
        string_val: "goals"
        string_val: "god"
        string_val: "godfather"
        string_val: "gods"
        string_val: "goes"
        string_val: "going"
        string_val: "gold"
        string_val: "golden"
        string_val: "golf"
        string_val: "gomez"
        string_val: "gone"
        string_val: "gonna"
        string_val: "good"
        string_val: "goodbye"
        string_val: "goodness"
        string_val: "goods"
        string_val: "goodwill"
        string_val: "gordon"
        string_val: "got"
        string_val: "gotten"
        string_val: "government"
        string_val: "governments"
        string_val: "governors"
        string_val: "grabs"
        string_val: "grade"
        string_val: "graeme"
        string_val: "graham"
        string_val: "grail"
        string_val: "grampian"
        string_val: "grand"
        string_val: "granddaughter"
        string_val: "grandfather"
        string_val: "grandmother"
        string_val: "grandparents"
        string_val: "grandson"
        string_val: "grant"
        string_val: "granted"
        string_val: "grass"
        string_val: "grassroots"
        string_val: "grateful"
        string_val: "graves"
        string_val: "great"
        string_val: "greater"
        string_val: "greatest"
        string_val: "greatly"
        string_val: "greeks"
        string_val: "green"
        string_val: "greens"
        string_val: "greenwood"
        string_val: "grew"
        string_val: "grey"
        string_val: "grid"
        string_val: "grief"
        string_val: "grip"
        string_val: "ground"
        string_val: "grounds"
        string_val: "group"
        string_val: "groups"
        string_val: "grow"
        string_val: "growing"
        string_val: "grown"
        string_val: "growth"
        string_val: "guarantee"
        string_val: "guaranteed"
        string_val: "guard"
        string_val: "guess"
        string_val: "guest"
        string_val: "guidelines"
        string_val: "guilt"
        string_val: "guilty"
        string_val: "guitarist"
        string_val: "gulf"
        string_val: "gun"
        string_val: "guy"
        string_val: "guys"
        string_val: "habit"
        string_val: "had"
        string_val: "hadnt"
        string_val: "hague"
        string_val: "hair"
        string_val: "hairdresser"
        string_val: "half"
        string_val: "halfdozen"
        string_val: "halftime"
        string_val: "halifax"
        string_val: "hall"
        string_val: "halted"
        string_val: "ham"
        string_val: "hamilton"
        string_val: "hammer"
        string_val: "hammering"
        string_val: "hand"
        string_val: "handcuffed"
        string_val: "handed"
        string_val: "handful"
        string_val: "handle"
        string_val: "handled"
        string_val: "handling"
        string_val: "hands"
        string_val: "handsome"
        string_val: "handwriting"
        string_val: "hang"
        string_val: "happen"
        string_val: "happened"
        string_val: "happening"
        string_val: "happens"
        string_val: "happiest"
        string_val: "happily"
        string_val: "happiness"
        string_val: "happy"
        string_val: "hard"
        string_val: "hardly"
        string_val: "harm"
        string_val: "harold"
        string_val: "harrowing"
        string_val: "harry"
        string_val: "hartley"
        string_val: "has"
        string_val: "hash"
        string_val: "hasnt"
        string_val: "hassle"
        string_val: "hastings"
        string_val: "hat"
        string_val: "hate"
        string_val: "haul"
        string_val: "have"
        string_val: "havent"
        string_val: "having"
        string_val: "he"
        string_val: "head"
        string_val: "headache"
        string_val: "headed"
        string_val: "heading"
        string_val: "headless"
        string_val: "headmaster"
        string_val: "headquarters"
        string_val: "heads"
        string_val: "headteacher"
        string_val: "headteachers"
        string_val: "heal"
        string_val: "healing"
        string_val: "health"
        string_val: "healthy"
        string_val: "hear"
        string_val: "heard"
        string_val: "hearing"
        string_val: "heart"
        string_val: "heartbreaking"
        string_val: "hearts"
        string_val: "heat"
        string_val: "heaven"
        string_val: "heavily"
        string_val: "heavy"
        string_val: "hebrews"
        string_val: "hed"
        string_val: "held"
        string_val: "hell"
        string_val: "helmet"
        string_val: "help"
        string_val: "helped"
        string_val: "helpful"
        string_val: "helping"
        string_val: "helpless"
        string_val: "helpline"
        string_val: "helps"
        string_val: "helsinki"
        string_val: "henman"
        string_val: "henry"
        string_val: "her"
        string_val: "herald"
        string_val: "herd"
        string_val: "here"
        string_val: "heres"
        string_val: "heritage"
        string_val: "hero"
        string_val: "heroes"
        string_val: "heroin"
        string_val: "heroine"
        string_val: "hes"
        string_val: "hesitate"
        string_val: "hibs"
        string_val: "hidden"
        string_val: "hide"
        string_val: "hiding"
        string_val: "high"
        string_val: "highest"
        string_val: "highland"
        string_val: "highlands"
        string_val: "highlight"
        string_val: "highlighted"
        string_val: "highlights"
        string_val: "highly"
        string_val: "hijacked"
        string_val: "hill"
        string_val: "hillary"
        string_val: "hills"
        string_val: "him"
        string_val: "himself"
        string_val: "hindsight"
        string_val: "hint"
        string_val: "his"
        string_val: "historic"
        string_val: "historical"
        string_val: "history"
        string_val: "hit"
        string_val: "hitches"
        string_val: "hobbies"
        string_val: "hold"
        string_val: "holding"
        string_val: "hole"
        string_val: "holiday"
        string_val: "holidays"
        string_val: "holland"
        string_val: "hollywood"
        string_val: "holy"
        string_val: "holyrood"
        string_val: "home"
        string_val: "homegrown"
        string_val: "homeland"
        string_val: "homeless"
        string_val: "homes"
        string_val: "homework"
        string_val: "homicide"
        string_val: "honest"
        string_val: "honestly"
        string_val: "honesty"
        string_val: "honour"
        string_val: "honoured"
        string_val: "hoops"
        string_val: "hope"
        string_val: "hoped"
        string_val: "hopeful"
        string_val: "hopefully"
        string_val: "hopeless"
        string_val: "hopelessly"
        string_val: "hopes"
        string_val: "horizon"
        string_val: "horrible"
        string_val: "horrific"
        string_val: "horrified"
        string_val: "horror"
        string_val: "horse"
        string_val: "horses"
        string_val: "hospice"
        string_val: "hospital"
        string_val: "hospitals"
        string_val: "hostel"
        string_val: "hostile"
        string_val: "hot"
        string_val: "hotel"
        string_val: "hotels"
        string_val: "hour"
        string_val: "hours"
        string_val: "house"
        string_val: "housebreaking"
        string_val: "housekeeper"
        string_val: "housing"
        string_val: "how"
        string_val: "however"
        string_val: "huge"
        string_val: "hugely"
        string_val: "human"
        string_val: "humans"
        string_val: "humbling"
        string_val: "humour"
        string_val: "hundred"
        string_val: "hung"
        string_val: "hungry"
        string_val: "hurdle"
        string_val: "hurry"
        string_val: "hurt"
        string_val: "husband"
        string_val: "hussein"
        string_val: "hustings"
        string_val: "hutchison"
        string_val: "hype"
        string_val: "hysteria"
        string_val: "i"
        string_val: "iain"
        string_val: "ian"
        string_val: "iceberg"
        string_val: "icing"
        string_val: "id"
        string_val: "idea"
        string_val: "ideal"
        string_val: "ideally"
        string_val: "ideas"
        string_val: "idiot"
        string_val: "if"
        string_val: "ignore"
        string_val: "ignored"
        string_val: "ignores"
        string_val: "ignoring"
        string_val: "ill"
        string_val: "illegal"
        string_val: "illness"
        string_val: "illusion"
        string_val: "illusions"
        string_val: "im"
        string_val: "image"
        string_val: "images"
        string_val: "imagine"
        string_val: "immediate"
        string_val: "immense"
        string_val: "immensely"
        string_val: "immune"
        string_val: "impact"
        string_val: "impaired"
        string_val: "impartial"
        string_val: "impasse"
        string_val: "impassioned"
        string_val: "impatience"
        string_val: "impatient"
        string_val: "impeded"
        string_val: "important"
        string_val: "imports"
        string_val: "impose"
        string_val: "imposing"
        string_val: "impress"
        string_val: "impressed"
        string_val: "impressing"
        string_val: "impression"
        string_val: "impressive"
        string_val: "improve"
        string_val: "improved"
        string_val: "improvement"
        string_val: "improvements"
        string_val: "improving"
        string_val: "impulse"
        string_val: "impulsive"
        string_val: "in"
        string_val: "incentive"
        string_val: "incidence"
        string_val: "incident"
        string_val: "incidents"
        string_val: "incitement"
        string_val: "include"
        string_val: "included"
        string_val: "includes"
        string_val: "including"
        string_val: "inclusion"
        string_val: "inclusive"
        string_val: "income"
        string_val: "incoming"
        string_val: "incongruous"
        string_val: "incorrect"
        string_val: "increase"
        string_val: "increased"
        string_val: "increases"
        string_val: "increasing"
        string_val: "indeed"
        string_val: "independent"
        string_val: "index"
        string_val: "india"
        string_val: "indicate"
        string_val: "indicated"
        string_val: "indicates"
        string_val: "individual"
        string_val: "indoors"
        string_val: "industrial"
        string_val: "industry"
        string_val: "inevitable"
        string_val: "infants"
        string_val: "infection"
        string_val: "infectious"
        string_val: "inflation"
        string_val: "influence"
        string_val: "influenced"
        string_val: "information"
        string_val: "informed"
        string_val: "ingenious"
        string_val: "inherent"
        string_val: "inherited"
        string_val: "initial"
        string_val: "initiated"
        string_val: "injected"
        string_val: "injecting"
        string_val: "injection"
        string_val: "injured"
        string_val: "injuries"
        string_val: "injury"
        string_val: "inmates"
        string_val: "innings"
        string_val: "innocence"
        string_val: "innocent"
        string_val: "input"
        string_val: "inquiries"
        string_val: "inquiry"
        string_val: "inroads"
        string_val: "inside"
        string_val: "insider"
        string_val: "insisted"
        string_val: "insists"
        string_val: "inspector"
        string_val: "inspectors"
        string_val: "inspired"
        string_val: "inspiring"
        string_val: "instalment"
        string_val: "instance"
        string_val: "instant"
        string_val: "instantly"
        string_val: "instead"
        string_val: "instinctive"
        string_val: "instincts"
        string_val: "institute"
        string_val: "instructed"
        string_val: "instructions"
        string_val: "instrument"
        string_val: "insult"
        string_val: "insulting"
        string_val: "insurance"
        string_val: "insured"
        string_val: "integral"
        string_val: "intend"
        string_val: "intended"
        string_val: "intends"
        string_val: "intense"
        string_val: "intensive"
        string_val: "intent"
        string_val: "intention"
        string_val: "intentions"
        string_val: "intents"
        string_val: "interest"
        string_val: "interested"
        string_val: "interesting"
        string_val: "interests"
        string_val: "interfere"
        string_val: "interim"
        string_val: "interior"
        string_val: "internal"
        string_val: "international"
        string_val: "internet"
        string_val: "interval"
        string_val: "intervene"
        string_val: "interview"
        string_val: "interviewed"
        string_val: "interviews"
        string_val: "intimate"
        string_val: "into"
        string_val: "intricate"
        string_val: "intriguing"
        string_val: "introduce"
        string_val: "introduced"
        string_val: "intrusion"
        string_val: "intrusive"
        string_val: "invasion"
        string_val: "invented"
        string_val: "inventive"
        string_val: "inventories"
        string_val: "inverness"
        string_val: "invest"
        string_val: "invested"
        string_val: "investigation"
        string_val: "investing"
        string_val: "investment"
        string_val: "investments"
        string_val: "investor"
        string_val: "investors"
        string_val: "invited"
        string_val: "involved"
        string_val: "involvement"
        string_val: "involving"
        string_val: "iona"
        string_val: "ira"
        string_val: "iran"
        string_val: "iraq"
        string_val: "iraqi"
        string_val: "ireland"
        string_val: "irish"
        string_val: "irishmen"
        string_val: "irony"
        string_val: "irrational"
        string_val: "irvine"
        string_val: "is"
        string_val: "islam"
        string_val: "island"
        string_val: "isles"
        string_val: "isnt"
        string_val: "israel"
        string_val: "israeli"
        string_val: "issue"
        string_val: "issued"
        string_val: "issues"
        string_val: "it"
        string_val: "italian"
        string_val: "italy"
        string_val: "item"
        string_val: "items"
        string_val: "itll"
        string_val: "its"
        string_val: "itself"
        string_val: "itss"
        string_val: "ive"
        string_val: "ivory"
        string_val: "jack"
        string_val: "jackie"
        string_val: "jackson"
        string_val: "jacques"
        string_val: "jail"
        string_val: "jailed"
        string_val: "jailing"
        string_val: "jamming"
        string_val: "january"
        string_val: "japan"
        string_val: "jazz"
        string_val: "jealousy"
        string_val: "jeremy"
        string_val: "jersey"
        string_val: "jews"
        string_val: "jigsaw"
        string_val: "jim"
        string_val: "jimmy"
        string_val: "job"
        string_val: "jobs"
        string_val: "jock"
        string_val: "john"
        string_val: "johnny"
        string_val: "johnsen"
        string_val: "johnson"
        string_val: "johnston"
        string_val: "johnstone"
        string_val: "join"
        string_val: "joined"
        string_val: "joiner"
        string_val: "joint"
        string_val: "joke"
        string_val: "joked"
        string_val: "jolly"
        string_val: "jon"
        string_val: "jones"
        string_val: "jonny"
        string_val: "journal"
        string_val: "journalist"
        string_val: "journalists"
        string_val: "journey"
        string_val: "joy"
        string_val: "jubilee"
        string_val: "judge"
        string_val: "judged"
        string_val: "judges"
        string_val: "judgment"
        string_val: "judicial"
        string_val: "judith"
        string_val: "july"
        string_val: "jumped"
        string_val: "june"
        string_val: "junior"
        string_val: "jury"
        string_val: "just"
        string_val: "justice"
        string_val: "justified"
        string_val: "justify"
        string_val: "kabul"
        string_val: "keane"
        string_val: "keegan"
        string_val: "keen"
        string_val: "keep"
        string_val: "keeping"
        string_val: "kennedy"
        string_val: "kenny"
        string_val: "kent"
        string_val: "kept"
        string_val: "kevin"
        string_val: "key"
        string_val: "keynote"
        string_val: "kick"
        string_val: "kicking"
        string_val: "kid"
        string_val: "kidnappers"
        string_val: "kidney"
        string_val: "kids"
        string_val: "kill"
        string_val: "killed"
        string_val: "killer"
        string_val: "killing"
        string_val: "kilmarnock"
        string_val: "kind"
        string_val: "kinder"
        string_val: "kinds"
        string_val: "king"
        string_val: "kingdom"
        string_val: "kingfisher"
        string_val: "kings"
        string_val: "kirkwood"
        string_val: "kitchen"
        string_val: "knackered"
        string_val: "knee"
        string_val: "knees"
        string_val: "knew"
        string_val: "knife"
        string_val: "knocked"
        string_val: "knockout"
        string_val: "know"
        string_val: "knowing"
        string_val: "knowledge"
        string_val: "known"
        string_val: "knows"
        string_val: "kosovo"
        string_val: "kremlin"
        string_val: "label"
        string_val: "labelling"
        string_val: "labour"
        string_val: "labourers"
        string_val: "labours"
        string_val: "lack"
        string_val: "laden"
        string_val: "lads"
        string_val: "lady"
        string_val: "laid"
        string_val: "lambert"
        string_val: "lancashire"
        string_val: "land"
        string_val: "landlord"
        string_val: "landowner"
        string_val: "landscape"
        string_val: "language"
        string_val: "lara"
        string_val: "large"
        string_val: "largely"
        string_val: "las"
        string_val: "last"
        string_val: "lasted"
        string_val: "late"
        string_val: "lately"
        string_val: "later"
        string_val: "latest"
        string_val: "latter"
        string_val: "laugh"
        string_val: "laughs"
        string_val: "launched"
        string_val: "laura"
        string_val: "law"
        string_val: "lawyer"
        string_val: "lawyers"
        string_val: "lay"
        string_val: "lead"
        string_val: "leader"
        string_val: "leaders"
        string_val: "leadership"
        string_val: "leading"
        string_val: "league"
        string_val: "learn"
        string_val: "learned"
        string_val: "learning"
        string_val: "leary"
        string_val: "least"
        string_val: "leave"
        string_val: "leaves"
        string_val: "leaving"
        string_val: "led"
        string_val: "lee"
        string_val: "left"
        string_val: "lefthanded"
        string_val: "leftwinger"
        string_val: "leg"
        string_val: "legacy"
        string_val: "legal"
        string_val: "legally"
        string_val: "legend"
        string_val: "legislation"
        string_val: "leicester"
        string_val: "leighton"
        string_val: "leisure"
        string_val: "length"
        string_val: "lengthy"
        string_val: "lennon"
        string_val: "lennox"
        string_val: "lesbian"
        string_val: "less"
        string_val: "lessen"
        string_val: "lesson"
        string_val: "lessons"
        string_val: "let"
        string_val: "lets"
        string_val: "letter"
        string_val: "letters"
        string_val: "letting"
        string_val: "letup"
        string_val: "level"
        string_val: "levels"
        string_val: "levy"
        string_val: "lewis"
        string_val: "liaison"
        string_val: "liar"
        string_val: "liberal"
        string_val: "liberty"
        string_val: "library"
        string_val: "libya"
        string_val: "licence"
        string_val: "licences"
        string_val: "licensing"
        string_val: "lie"
        string_val: "lies"
        string_val: "life"
        string_val: "lifeboat"
        string_val: "lifeline"
        string_val: "lifestyle"
        string_val: "lift"
        string_val: "lifted"
        string_val: "ligaments"
        string_val: "light"
        string_val: "lightning"
        string_val: "like"
        string_val: "liked"
        string_val: "likelihood"
        string_val: "likely"
        string_val: "limelight"
        string_val: "limited"
        string_val: "limits"
        string_val: "line"
        string_val: "lines"
        string_val: "lineup"
        string_val: "link"
        string_val: "linked"
        string_val: "links"
        string_val: "lions"
        string_val: "list"
        string_val: "listed"
        string_val: "listen"
        string_val: "listened"
        string_val: "listener"
        string_val: "listeners"
        string_val: "listening"
        string_val: "listens"
        string_val: "lists"
        string_val: "little"
        string_val: "live"
        string_val: "lived"
        string_val: "livelihood"
        string_val: "liverpool"
        string_val: "lives"
        string_val: "living"
        string_val: "livingston"
        string_val: "livingstone"
        string_val: "load"
        string_val: "loan"
        string_val: "lobby"
        string_val: "local"
        string_val: "locally"
        string_val: "located"
        string_val: "location"
        string_val: "locations"
        string_val: "lockerbie"
        string_val: "logan"
        string_val: "logic"
        string_val: "logical"
        string_val: "london"
        string_val: "long"
        string_val: "longer"
        string_val: "longterm"
        string_val: "look"
        string_val: "looked"
        string_val: "looking"
        string_val: "looks"
        string_val: "loop"
        string_val: "loose"
        string_val: "lord"
        string_val: "lords"
        string_val: "lose"
        string_val: "loser"
        string_val: "losers"
        string_val: "loses"
        string_val: "losing"
        string_val: "loss"
        string_val: "losses"
        string_val: "lost"
        string_val: "lot"
        string_val: "lothian"
        string_val: "lots"
        string_val: "lottery"
        string_val: "love"
        string_val: "loved"
        string_val: "lovely"
        string_val: "loves"
        string_val: "loving"
        string_val: "low"
        string_val: "lower"
        string_val: "lowest"
        string_val: "loyal"
        string_val: "loyalist"
        string_val: "loyalty"
        string_val: "luck"
        string_val: "luckily"
        string_val: "lucky"
        string_val: "lukewarm"
        string_val: "lunchtime"
        string_val: "luxury"
        string_val: "lyceum"
        string_val: "lying"
        string_val: "lyrical"
        string_val: "macdonald"
        string_val: "machine"
        string_val: "mackay"
        string_val: "mackie"
        string_val: "mad"
        string_val: "made"
        string_val: "madness"
        string_val: "magazine"
        string_val: "magic"
        string_val: "magical"
        string_val: "magician"
        string_val: "magpies"
        string_val: "main"
        string_val: "mainly"
        string_val: "mainstream"
        string_val: "maintain"
        string_val: "maintained"
        string_val: "major"
        string_val: "majors"
        string_val: "make"
        string_val: "maker"
        string_val: "makes"
        string_val: "making"
        string_val: "malcolm"
        string_val: "male"
        string_val: "maloney"
        string_val: "man"
        string_val: "manage"
        string_val: "managed"
        string_val: "management"
        string_val: "manager"
        string_val: "managers"
        string_val: "managing"
        string_val: "manchester"
        string_val: "mandate"
        string_val: "mandela"
        string_val: "manner"
        string_val: "many"
        string_val: "marathon"
        string_val: "march"
        string_val: "marconi"
        string_val: "margaret"
        string_val: "margin"
        string_val: "margins"
        string_val: "mark"
        string_val: "marker"
        string_val: "market"
        string_val: "marketed"
        string_val: "marketing"
        string_val: "markets"
        string_val: "marriage"
        string_val: "marriages"
        string_val: "married"
        string_val: "marshall"
        string_val: "martin"
        string_val: "marvellous"
        string_val: "mary"
        string_val: "mason"
        string_val: "mass"
        string_val: "massacre"
        string_val: "massive"
        string_val: "master"
        string_val: "masterful"
        string_val: "masters"
        string_val: "match"
        string_val: "matches"
        string_val: "material"
        string_val: "maternal"
        string_val: "matter"
        string_val: "mattered"
        string_val: "matters"
        string_val: "maximum"
        string_val: "may"
        string_val: "maybe"
        string_val: "mayhem"
        string_val: "mcarthur"
        string_val: "mccall"
        string_val: "mccarthy"
        string_val: "mccartney"
        string_val: "mcconnell"
        string_val: "mccormick"
        string_val: "mcculloch"
        string_val: "mcgraw"
        string_val: "mcgregor"
        string_val: "mckay"
        string_val: "mckean"
        string_val: "mckenna"
        string_val: "mckenzie"
        string_val: "mclean"
        string_val: "mclellan"
        string_val: "mcleod"
        string_val: "mcmaster"
        string_val: "mcnaughton"
        string_val: "mcneill"
        string_val: "mcpherson"
        string_val: "me"
        string_val: "mean"
        string_val: "meaningful"
        string_val: "means"
        string_val: "meant"
        string_val: "meantime"
        string_val: "meanwhile"
        string_val: "measure"
        string_val: "measures"
        string_val: "measuring"
        string_val: "meat"
        string_val: "medal"
        string_val: "medals"
        string_val: "media"
        string_val: "medical"
        string_val: "medication"
        string_val: "medicine"
        string_val: "medicines"
        string_val: "medium"
        string_val: "meet"
        string_val: "meeting"
        string_val: "meetings"
        string_val: "member"
        string_val: "members"
        string_val: "membership"
        string_val: "memorial"
        string_val: "memories"
        string_val: "memory"
        string_val: "men"
        string_val: "mental"
        string_val: "mentally"
        string_val: "mention"
        string_val: "mentioned"
        string_val: "mentor"
        string_val: "menu"
        string_val: "merely"
        string_val: "merger"
        string_val: "merit"
        string_val: "mess"
        string_val: "message"
        string_val: "messages"
        string_val: "met"
        string_val: "metaphor"
        string_val: "methadone"
        string_val: "method"
        string_val: "mexico"
        string_val: "miami"
        string_val: "michael"
        string_val: "michaels"
        string_val: "michelle"
        string_val: "mickelson"
        string_val: "middle"
        string_val: "midfield"
        string_val: "midland"
        string_val: "midlands"
        string_val: "midnight"
        string_val: "midweek"
        string_val: "might"
        string_val: "mightily"
        string_val: "mike"
        string_val: "milburn"
        string_val: "mile"
        string_val: "miles"
        string_val: "milestone"
        string_val: "military"
        string_val: "milk"
        string_val: "millennium"
        string_val: "miller"
        string_val: "million"
        string_val: "millionaire"
        string_val: "millions"
        string_val: "mind"
        string_val: "minds"
        string_val: "mine"
        string_val: "mini"
        string_val: "minibus"
        string_val: "minimal"
        string_val: "minimum"
        string_val: "mining"
        string_val: "minister"
        string_val: "ministers"
        string_val: "ministry"
        string_val: "minnows"
        string_val: "minor"
        string_val: "minute"
        string_val: "minutes"
        string_val: "miracle"
        string_val: "miracles"
        string_val: "mirror"
        string_val: "misconduct"
        string_val: "miserable"
        string_val: "misguided"
        string_val: "misleading"
        string_val: "misplaced"
        string_val: "miss"
        string_val: "missed"
        string_val: "missing"
        string_val: "mission"
        string_val: "mistake"
        string_val: "mistakes"
        string_val: "mitchell"
        string_val: "mix"
        string_val: "mixed"
        string_val: "mixing"
        string_val: "mixture"
        string_val: "mo"
        string_val: "mobile"
        string_val: "mod"
        string_val: "model"
        string_val: "modern"
        string_val: "modernisation"
        string_val: "modest"
        string_val: "modified"
        string_val: "moment"
        string_val: "momentous"
        string_val: "moments"
        string_val: "monaco"
        string_val: "monday"
        string_val: "monetary"
        string_val: "money"
        string_val: "monitor"
        string_val: "monitored"
        string_val: "monster"
        string_val: "monte"
        string_val: "month"
        string_val: "months"
        string_val: "monty"
        string_val: "monument"
        string_val: "mood"
        string_val: "moon"
        string_val: "mooted"
        string_val: "moral"
        string_val: "morale"
        string_val: "moray"
        string_val: "more"
        string_val: "moreover"
        string_val: "morning"
        string_val: "mortgage"
        string_val: "moscow"
        string_val: "most"
        string_val: "mostly"
        string_val: "mother"
        string_val: "mothers"
        string_val: "motherwell"
        string_val: "motion"
        string_val: "motions"
        string_val: "motive"
        string_val: "motorists"
        string_val: "mountain"
        string_val: "mounted"
        string_val: "moustache"
        string_val: "mouth"
        string_val: "move"
        string_val: "moved"
        string_val: "movement"
        string_val: "movie"
        string_val: "movies"
        string_val: "moving"
        string_val: "mp"
        string_val: "mr"
        string_val: "mrs"
        string_val: "ms"
        string_val: "much"
        string_val: "muddle"
        string_val: "multiple"
        string_val: "multiply"
        string_val: "multitude"
        string_val: "mum"
        string_val: "murder"
        string_val: "murdered"
        string_val: "murray"
        string_val: "murrays"
        string_val: "muscular"
        string_val: "museum"
        string_val: "music"
        string_val: "musical"
        string_val: "musicals"
        string_val: "musician"
        string_val: "musicians"
        string_val: "muslim"
        string_val: "must"
        string_val: "my"
        string_val: "myself"
        string_val: "mystery"
        string_val: "name"
        string_val: "named"
        string_val: "names"
        string_val: "nancy"
        string_val: "narrative"
        string_val: "narrow"
        string_val: "narrowing"
        string_val: "nation"
        string_val: "national"
        string_val: "nations"
        string_val: "nationwide"
        string_val: "nato"
        string_val: "natural"
        string_val: "naturally"
        string_val: "nature"
        string_val: "near"
        string_val: "nearly"
        string_val: "necessary"
        string_val: "need"
        string_val: "needed"
        string_val: "needs"
        string_val: "negative"
        string_val: "neglected"
        string_val: "negligent"
        string_val: "neighbour"
        string_val: "neighbourhood"
        string_val: "neighbouring"
        string_val: "neighbours"
        string_val: "neil"
        string_val: "neill"
        string_val: "neither"
        string_val: "nelson"
        string_val: "nerveracking"
        string_val: "nervous"
        string_val: "net"
        string_val: "netherlands"
        string_val: "network"
        string_val: "never"
        string_val: "new"
        string_val: "newcastle"
        string_val: "newcomer"
        string_val: "news"
        string_val: "newspaper"
        string_val: "newspapers"
        string_val: "next"
        string_val: "nice"
        string_val: "nicholson"
        string_val: "nicolson"
        string_val: "nicotine"
        string_val: "night"
        string_val: "nightmare"
        string_val: "nights"
        string_val: "nine"
        string_val: "no"
        string_val: "nobody"
        string_val: "noel"
        string_val: "nogo"
        string_val: "none"
        string_val: "nonetheless"
        string_val: "nonsense"
        string_val: "noone"
        string_val: "nor"
        string_val: "norm"
        string_val: "normal"
        string_val: "normally"
        string_val: "norman"
        string_val: "norsemen"
        string_val: "north"
        string_val: "northeast"
        string_val: "northern"
        string_val: "norway"
        string_val: "not"
        string_val: "notable"
        string_val: "note"
        string_val: "noted"
        string_val: "nothing"
        string_val: "notice"
        string_val: "noticed"
        string_val: "novel"
        string_val: "november"
        string_val: "now"
        string_val: "nowadays"
        string_val: "nowhere"
        string_val: "nuclear"
        string_val: "number"
        string_val: "numbers"
        string_val: "numerous"
        string_val: "nurses"
        string_val: "nursing"
        string_val: "o"
        string_val: "oath"
        string_val: "objective"
        string_val: "observed"
        string_val: "observer"
        string_val: "obsessed"
        string_val: "obsession"
        string_val: "obstruction"
        string_val: "obvious"
        string_val: "obviously"
        string_val: "occasion"
        string_val: "occasions"
        string_val: "occupied"
        string_val: "occur"
        string_val: "occurred"
        string_val: "october"
        string_val: "odd"
        string_val: "odds"
        string_val: "of"
        string_val: "off"
        string_val: "offday"
        string_val: "offduty"
        string_val: "offence"
        string_val: "offences"
        string_val: "offended"
        string_val: "offender"
        string_val: "offenders"
        string_val: "offer"
        string_val: "offered"
        string_val: "offerings"
        string_val: "offers"
        string_val: "office"
        string_val: "officer"
        string_val: "officers"
        string_val: "offices"
        string_val: "official"
        string_val: "officials"
        string_val: "offside"
        string_val: "ofr"
        string_val: "often"
        string_val: "oil"
        string_val: "okay"
        string_val: "old"
        string_val: "older"
        string_val: "olympic"
        string_val: "olympics"
        string_val: "omen"
        string_val: "omission"
        string_val: "on"
        string_val: "once"
        string_val: "one"
        string_val: "ones"
        string_val: "onesided"
        string_val: "onethird"
        string_val: "oneyear"
        string_val: "ongoing"
        string_val: "online"
        string_val: "only"
        string_val: "open"
        string_val: "opened"
        string_val: "opener"
        string_val: "opening"
        string_val: "openly"
        string_val: "openness"
        string_val: "opens"
        string_val: "opera"
        string_val: "operate"
        string_val: "operation"
        string_val: "opinion"
        string_val: "opinions"
        string_val: "opponent"
        string_val: "opponents"
        string_val: "opportunism"
        string_val: "opportunities"
        string_val: "opportunity"
        string_val: "oppose"
        string_val: "opposed"
        string_val: "opposite"
        string_val: "oppressive"
        string_val: "option"
        string_val: "optional"
        string_val: "options"
        string_val: "or"
        string_val: "orange"
        string_val: "orchestra"
        string_val: "ordeal"
        string_val: "order"
        string_val: "ordering"
        string_val: "orders"
        string_val: "organised"
        string_val: "organisers"
        string_val: "orlando"
        string_val: "osama"
        string_val: "other"
        string_val: "others"
        string_val: "otherwise"
        string_val: "our"
        string_val: "ourselves"
        string_val: "out"
        string_val: "outbreak"
        string_val: "outcome"
        string_val: "outcomes"
        string_val: "outdated"
        string_val: "outdoors"
        string_val: "outfit"
        string_val: "outgoing"
        string_val: "outing"
        string_val: "outlay"
        string_val: "outlet"
        string_val: "outlook"
        string_val: "outperformed"
        string_val: "outplayed"
        string_val: "output"
        string_val: "outrage"
        string_val: "outraged"
        string_val: "outrageous"
        string_val: "outset"
        string_val: "outside"
        string_val: "outskirts"
        string_val: "outsourcing"
        string_val: "outstanding"
        string_val: "over"
        string_val: "overall"
        string_val: "overdraft"
        string_val: "overdue"
        string_val: "overload"
        string_val: "overlooked"
        string_val: "overly"
        string_val: "overnight"
        string_val: "overseas"
        string_val: "oversee"
        string_val: "overstretched"
        string_val: "overtime"
        string_val: "overwhelmed"
        string_val: "owe"
        string_val: "owen"
        string_val: "own"
        string_val: "owned"
        string_val: "owner"
        string_val: "owners"
        string_val: "ownership"
        string_val: "owns"
        string_val: "pace"
        string_val: "pack"
        string_val: "package"
        string_val: "packed"
        string_val: "paedophile"
        string_val: "paedophiles"
        string_val: "page"
        string_val: "pages"
        string_val: "paid"
        string_val: "pain"
        string_val: "painful"
        string_val: "painting"
        string_val: "paintings"
        string_val: "pair"
        string_val: "pakistan"
        string_val: "palace"
        string_val: "pals"
        string_val: "panel"
        string_val: "panels"
        string_val: "panic"
        string_val: "panicked"
        string_val: "paper"
        string_val: "papers"
        string_val: "par"
        string_val: "parade"
        string_val: "paradise"
        string_val: "parallel"
        string_val: "paramount"
        string_val: "paranoia"
        string_val: "parcel"
        string_val: "parental"
        string_val: "parenthood"
        string_val: "parents"
        string_val: "paris"
        string_val: "park"
        string_val: "parker"
        string_val: "parliament"
        string_val: "parliaments"
        string_val: "parole"
        string_val: "part"
        string_val: "partial"
        string_val: "particularly"
        string_val: "parties"
        string_val: "partition"
        string_val: "partly"
        string_val: "partner"
        string_val: "partners"
        string_val: "partnership"
        string_val: "parts"
        string_val: "parttime"
        string_val: "party"
        string_val: "partys"
        string_val: "passed"
        string_val: "passenger"
        string_val: "passengers"
        string_val: "passersby"
        string_val: "passes"
        string_val: "passing"
        string_val: "passion"
        string_val: "passionate"
        string_val: "passport"
        string_val: "past"
        string_val: "patent"
        string_val: "patently"
        string_val: "paterson"
        string_val: "path"
        string_val: "pathetic"
        string_val: "paths"
        string_val: "patience"
        string_val: "patient"
        string_val: "patients"
        string_val: "pattern"
        string_val: "patton"
        string_val: "paul"
        string_val: "pause"
        string_val: "pay"
        string_val: "paying"
        string_val: "payments"
        string_val: "peace"
        string_val: "peaceful"
        string_val: "peas"
        string_val: "pedestrians"
        string_val: "peers"
        string_val: "penalised"
        string_val: "penalties"
        string_val: "penalty"
        string_val: "penny"
        string_val: "pension"
        string_val: "pensioners"
        string_val: "pensions"
        string_val: "people"
        string_val: "percentage"
        string_val: "perception"
        string_val: "perfect"
        string_val: "perfection"
        string_val: "perfectly"
        string_val: "perform"
        string_val: "performance"
        string_val: "performers"
        string_val: "performing"
        string_val: "perhaps"
        string_val: "period"
        string_val: "perjury"
        string_val: "permanent"
        string_val: "permission"
        string_val: "permitting"
        string_val: "perplexed"
        string_val: "person"
        string_val: "personal"
        string_val: "personnel"
        string_val: "perspective"
        string_val: "persuaded"
        string_val: "persuasion"
        string_val: "persuasive"
        string_val: "peter"
        string_val: "petition"
        string_val: "petrol"
        string_val: "phase"
        string_val: "phenomenon"
        string_val: "phil"
        string_val: "phone"
        string_val: "phoned"
        string_val: "phones"
        string_val: "photo"
        string_val: "photograph"
        string_val: "physical"
        string_val: "physically"
        string_val: "physicists"
        string_val: "picked"
        string_val: "picture"
        string_val: "piece"
        string_val: "pieces"
        string_val: "pig"
        string_val: "pilot"
        string_val: "pint"
        string_val: "pitch"
        string_val: "pitt"
        string_val: "pity"
        string_val: "pivotal"
        string_val: "place"
        string_val: "placed"
        string_val: "places"
        string_val: "placing"
        string_val: "plain"
        string_val: "plainly"
        string_val: "plan"
        string_val: "plane"
        string_val: "planned"
        string_val: "planners"
        string_val: "planning"
        string_val: "plans"
        string_val: "plant"
        string_val: "planting"
        string_val: "plants"
        string_val: "plastic"
        string_val: "platform"
        string_val: "play"
        string_val: "played"
        string_val: "player"
        string_val: "players"
        string_val: "playing"
        string_val: "plays"
        string_val: "pleaded"
        string_val: "please"
        string_val: "pleased"
        string_val: "pleasure"
        string_val: "pledged"
        string_val: "pledges"
        string_val: "plenty"
        string_val: "plot"
        string_val: "plunge"
        string_val: "pockets"
        string_val: "podium"
        string_val: "poet"
        string_val: "poetic"
        string_val: "point"
        string_val: "pointed"
        string_val: "pointless"
        string_val: "points"
        string_val: "police"
        string_val: "policeman"
        string_val: "policemen"
        string_val: "policies"
        string_val: "policing"
        string_val: "policy"
        string_val: "polished"
        string_val: "political"
        string_val: "politics"
        string_val: "poll"
        string_val: "polls"
        string_val: "pollution"
        string_val: "pool"
        string_val: "pooled"
        string_val: "poor"
        string_val: "poorly"
        string_val: "pop"
        string_val: "popular"
        string_val: "population"
        string_val: "portrait"
        string_val: "portugal"
        string_val: "position"
        string_val: "positive"
        string_val: "positives"
        string_val: "possessed"
        string_val: "possessing"
        string_val: "possession"
        string_val: "possible"
        string_val: "possibly"
        string_val: "post"
        string_val: "poster"
        string_val: "postponed"
        string_val: "pot"
        string_val: "potential"
        string_val: "potions"
        string_val: "potter"
        string_val: "pound"
        string_val: "pounds"
        string_val: "poverty"
        string_val: "power"
        string_val: "powerful"
        string_val: "powers"
        string_val: "pr"
        string_val: "practical"
        string_val: "practice"
        string_val: "practise"
        string_val: "praised"
        string_val: "pray"
        string_val: "prayers"
        string_val: "precaution"
        string_val: "precedent"
        string_val: "preceding"
        string_val: "precious"
        string_val: "precisely"
        string_val: "precision"
        string_val: "predator"
        string_val: "predict"
        string_val: "predicted"
        string_val: "predicting"
        string_val: "prediction"
        string_val: "preemptive"
        string_val: "prefer"
        string_val: "preference"
        string_val: "preferred"
        string_val: "prefers"
        string_val: "pregnancy"
        string_val: "pregnant"
        string_val: "prejudice"
        string_val: "premature"
        string_val: "premier"
        string_val: "premiership"
        string_val: "premises"
        string_val: "premium"
        string_val: "prepared"
        string_val: "preparing"
        string_val: "prescott"
        string_val: "prescription"
        string_val: "presence"
        string_val: "present"
        string_val: "presented"
        string_val: "president"
        string_val: "press"
        string_val: "pressing"
        string_val: "pressure"
        string_val: "pressured"
        string_val: "pressures"
        string_val: "pretend"
        string_val: "pretended"
        string_val: "pretty"
        string_val: "prevail"
        string_val: "prevails"
        string_val: "prevented"
        string_val: "prevention"
        string_val: "previous"
        string_val: "previously"
        string_val: "price"
        string_val: "prices"
        string_val: "pride"
        string_val: "primal"
        string_val: "primary"
        string_val: "prime"
        string_val: "prince"
        string_val: "princess"
        string_val: "principal"
        string_val: "principle"
        string_val: "printed"
        string_val: "prism"
        string_val: "prison"
        string_val: "prisoner"
        string_val: "prisoners"
        string_val: "privacy"
        string_val: "private"
        string_val: "privilege"
        string_val: "privileged"
        string_val: "prize"
        string_val: "probably"
        string_val: "probation"
        string_val: "problem"
        string_val: "problems"
        string_val: "procedure"
        string_val: "procedures"
        string_val: "proceed"
        string_val: "proceedings"
        string_val: "process"
        string_val: "processing"
        string_val: "proclaiming"
        string_val: "procurement"
        string_val: "produce"
        string_val: "producer"
        string_val: "producers"
        string_val: "producing"
        string_val: "product"
        string_val: "production"
        string_val: "productive"
        string_val: "products"
        string_val: "profession"
        string_val: "professor"
        string_val: "profile"
        string_val: "profit"
        string_val: "profits"
        string_val: "profound"
        string_val: "profoundly"
        string_val: "prognosis"
        string_val: "programme"
        string_val: "programmes"
        string_val: "progress"
        string_val: "progressed"
        string_val: "progressing"
        string_val: "progression"
        string_val: "project"
        string_val: "projections"
        string_val: "projects"
        string_val: "promise"
        string_val: "promised"
        string_val: "promises"
        string_val: "promising"
        string_val: "promote"
        string_val: "promoters"
        string_val: "promotions"
        string_val: "prompted"
        string_val: "pronounced"
        string_val: "proof"
        string_val: "proper"
        string_val: "properly"
        string_val: "properties"
        string_val: "property"
        string_val: "proportion"
        string_val: "proposal"
        string_val: "proposals"
        string_val: "proposed"
        string_val: "proposing"
        string_val: "prosecute"
        string_val: "prosecution"
        string_val: "prospect"
        string_val: "prospects"
        string_val: "protect"
        string_val: "protecting"
        string_val: "protection"
        string_val: "protective"
        string_val: "protest"
        string_val: "protested"
        string_val: "protests"
        string_val: "protracted"
        string_val: "proud"
        string_val: "prove"
        string_val: "proved"
        string_val: "proven"
        string_val: "provide"
        string_val: "provided"
        string_val: "provident"
        string_val: "provider"
        string_val: "provides"
        string_val: "providing"
        string_val: "provision"
        string_val: "provisions"
        string_val: "provoke"
        string_val: "provoked"
        string_val: "pub"
        string_val: "public"
        string_val: "publish"
        string_val: "published"
        string_val: "publishing"
        string_val: "pull"
        string_val: "pulled"
        string_val: "punish"
        string_val: "punished"
        string_val: "punishment"
        string_val: "punters"
        string_val: "pupils"
        string_val: "purchase"
        string_val: "purely"
        string_val: "purists"
        string_val: "purpose"
        string_val: "purposes"
        string_val: "pursued"
        string_val: "pursuing"
        string_val: "pursuit"
        string_val: "push"
        string_val: "pushed"
        string_val: "pushing"
        string_val: "put"
        string_val: "puts"
        string_val: "putting"
        string_val: "puzzled"
        string_val: "puzzling"
        string_val: "qualified"
        string_val: "qualifier"
        string_val: "quality"
        string_val: "qualms"
        string_val: "quarter"
        string_val: "quarters"
        string_val: "queen"
        string_val: "queens"
        string_val: "question"
        string_val: "questioning"
        string_val: "questions"
        string_val: "queue"
        string_val: "quick"
        string_val: "quickly"
        string_val: "quiet"
        string_val: "quietly"
        string_val: "quit"
        string_val: "quite"
        string_val: "race"
        string_val: "races"
        string_val: "racial"
        string_val: "racism"
        string_val: "racist"
        string_val: "radical"
        string_val: "radio"
        string_val: "rafferty"
        string_val: "railways"
        string_val: "rain"
        string_val: "rainbow"
        string_val: "rainbows"
        string_val: "raindrops"
        string_val: "rainy"
        string_val: "raise"
        string_val: "raised"
        string_val: "raises"
        string_val: "rally"
        string_val: "ran"
        string_val: "random"
        string_val: "range"
        string_val: "rangers"
        string_val: "ranks"
        string_val: "ransom"
        string_val: "raped"
        string_val: "rapid"
        string_val: "rapidly"
        string_val: "rarely"
        string_val: "rarity"
        string_val: "rate"
        string_val: "rated"
        string_val: "rates"
        string_val: "rather"
        string_val: "ratify"
        string_val: "rationing"
        string_val: "raucous"
        string_val: "raymond"
        string_val: "rays"
        string_val: "reach"
        string_val: "reached"
        string_val: "reaches"
        string_val: "reaching"
        string_val: "react"
        string_val: "reacted"
        string_val: "reaction"
        string_val: "read"
        string_val: "reader"
        string_val: "ready"
        string_val: "real"
        string_val: "realise"
        string_val: "realised"
        string_val: "realises"
        string_val: "realising"
        string_val: "realism"
        string_val: "realistic"
        string_val: "reallife"
        string_val: "really"
        string_val: "rear"
        string_val: "reason"
        string_val: "reasons"
        string_val: "reassure"
        string_val: "rebound"
        string_val: "rebuild"
        string_val: "rebuilding"
        string_val: "recall"
        string_val: "receive"
        string_val: "received"
        string_val: "receivers"
        string_val: "receiving"
        string_val: "recent"
        string_val: "recently"
        string_val: "reception"
        string_val: "receptive"
        string_val: "recipe"
        string_val: "reckless"
        string_val: "reckons"
        string_val: "recognise"
        string_val: "recognised"
        string_val: "recommend"
        string_val: "recommended"
        string_val: "record"
        string_val: "recorded"
        string_val: "recording"
        string_val: "records"
        string_val: "recover"
        string_val: "recovered"
        string_val: "recruiting"
        string_val: "recruitment"
        string_val: "rectify"
        string_val: "recycled"
        string_val: "red"
        string_val: "redemption"
        string_val: "redress"
        string_val: "reds"
        string_val: "reduce"
        string_val: "reduced"
        string_val: "reduction"
        string_val: "redundant"
        string_val: "redwood"
        string_val: "referee"
        string_val: "referees"
        string_val: "refined"
        string_val: "reflect"
        string_val: "reflected"
        string_val: "reflection"
        string_val: "reflects"
        string_val: "reform"
        string_val: "refraction"
        string_val: "refugees"
        string_val: "refund"
        string_val: "refurbishment"
        string_val: "refuse"
        string_val: "refused"
        string_val: "refuses"
        string_val: "regaining"
        string_val: "regard"
        string_val: "regarding"
        string_val: "regime"
        string_val: "regiment"
        string_val: "region"
        string_val: "regional"
        string_val: "regions"
        string_val: "register"
        string_val: "registered"
        string_val: "regret"
        string_val: "regretted"
        string_val: "regular"
        string_val: "regulation"
        string_val: "rehearsal"
        string_val: "rehearsals"
        string_val: "reid"
        string_val: "reinforce"
        string_val: "reinforced"
        string_val: "reinvent"
        string_val: "reject"
        string_val: "rejected"
        string_val: "rejects"
        string_val: "relate"
        string_val: "related"
        string_val: "relation"
        string_val: "relations"
        string_val: "relationship"
        string_val: "relative"
        string_val: "relatives"
        string_val: "relax"
        string_val: "relay"
        string_val: "release"
        string_val: "released"
        string_val: "relentless"
        string_val: "relevant"
        string_val: "relied"
        string_val: "relief"
        string_val: "relieved"
        string_val: "religion"
        string_val: "religions"
        string_val: "religious"
        string_val: "relish"
        string_val: "relishing"
        string_val: "relocate"
        string_val: "rely"
        string_val: "remain"
        string_val: "remained"
        string_val: "remaining"
        string_val: "remains"
        string_val: "remarks"
        string_val: "rematch"
        string_val: "remember"
        string_val: "reminded"
        string_val: "reminder"
        string_val: "remit"
        string_val: "remorse"
        string_val: "remote"
        string_val: "removal"
        string_val: "removed"
        string_val: "renew"
        string_val: "renewal"
        string_val: "renewed"
        string_val: "reopen"
        string_val: "reopened"
        string_val: "repair"
        string_val: "repayment"
        string_val: "repeal"
        string_val: "repeat"
        string_val: "repeated"
        string_val: "replace"
        string_val: "replaced"
        string_val: "replacement"
        string_val: "replacements"
        string_val: "replicate"
        string_val: "replied"
        string_val: "reply"
        string_val: "replying"
        string_val: "report"
        string_val: "reported"
        string_val: "reporter"
        string_val: "reports"
        string_val: "reprehensible"
        string_val: "represent"
        string_val: "represents"
        string_val: "republic"
        string_val: "reputed"
        string_val: "request"
        string_val: "requested"
        string_val: "require"
        string_val: "required"
        string_val: "requirement"
        string_val: "rescue"
        string_val: "research"
        string_val: "resentment"
        string_val: "reserved"
        string_val: "reshuffle"
        string_val: "residence"
        string_val: "resident"
        string_val: "resign"
        string_val: "resigned"
        string_val: "resilient"
        string_val: "resistance"
        string_val: "resisted"
        string_val: "resolution"
        string_val: "resolutions"
        string_val: "resolve"
        string_val: "resolved"
        string_val: "resolving"
        string_val: "resort"
        string_val: "resource"
        string_val: "resourceful"
        string_val: "resources"
        string_val: "respect"
        string_val: "respected"
        string_val: "respects"
        string_val: "respite"
        string_val: "respond"
        string_val: "responded"
        string_val: "responding"
        string_val: "response"
        string_val: "responsibility"
        string_val: "responsible"
        string_val: "rest"
        string_val: "restart"
        string_val: "restaurant"
        string_val: "restraint"
        string_val: "restrictions"
        string_val: "restrictive"
        string_val: "restructure"
        string_val: "restructuring"
        string_val: "result"
        string_val: "results"
        string_val: "resume"
        string_val: "resurrect"
        string_val: "retail"
        string_val: "retailer"
        string_val: "retain"
        string_val: "retained"
        string_val: "retains"
        string_val: "rethink"
        string_val: "reticence"
        string_val: "retire"
        string_val: "retired"
        string_val: "retirement"
        string_val: "retiring"
        string_val: "retraining"
        string_val: "retreat"
        string_val: "return"
        string_val: "returned"
        string_val: "returning"
        string_val: "reunion"
        string_val: "reveal"
        string_val: "revealed"
        string_val: "revealing"
        string_val: "revellers"
        string_val: "revelling"
        string_val: "revenge"
        string_val: "revenue"
        string_val: "reverence"
        string_val: "reverse"
        string_val: "reversed"
        string_val: "reversing"
        string_val: "review"
        string_val: "reviewed"
        string_val: "reviews"
        string_val: "revising"
        string_val: "revision"
        string_val: "revival"
        string_val: "revive"
        string_val: "revived"
        string_val: "reviving"
        string_val: "reward"
        string_val: "rewarded"
        string_val: "rewarding"
        string_val: "rewards"
        string_val: "rhythm"
        string_val: "rich"
        string_val: "richard"
        string_val: "ride"
        string_val: "rider"
        string_val: "ridiculed"
        string_val: "right"
        string_val: "rightly"
        string_val: "rights"
        string_val: "rigid"
        string_val: "rigorous"
        string_val: "rise"
        string_val: "rising"
        string_val: "risk"
        string_val: "risks"
        string_val: "risky"
        string_val: "ritchie"
        string_val: "ritual"
        string_val: "rival"
        string_val: "rivals"
        string_val: "river"
        string_val: "riverside"
        string_val: "road"
        string_val: "roads"
        string_val: "robbery"
        string_val: "robbie"
        string_val: "robert"
        string_val: "robertson"
        string_val: "robin"
        string_val: "robinson"
        string_val: "robson"
        string_val: "robust"
        string_val: "rock"
        string_val: "role"
        string_val: "roll"
        string_val: "rolled"
        string_val: "roman"
        string_val: "romantic"
        string_val: "roof"
        string_val: "room"
        string_val: "rooms"
        string_val: "root"
        string_val: "roots"
        string_val: "ross"
        string_val: "rot"
        string_val: "rough"
        string_val: "round"
        string_val: "rounded"
        string_val: "route"
        string_val: "routine"
        string_val: "row"
        string_val: "rowley"
        string_val: "roy"
        string_val: "royal"
        string_val: "royalty"
        string_val: "rub"
        string_val: "rubbish"
        string_val: "rubble"
        string_val: "ruck"
        string_val: "rugby"
        string_val: "rule"
        string_val: "ruled"
        string_val: "rules"
        string_val: "ruling"
        string_val: "rumours"
        string_val: "run"
        string_val: "runner"
        string_val: "runnerup"
        string_val: "running"
        string_val: "runs"
        string_val: "rural"
        string_val: "rush"
        string_val: "rushed"
        string_val: "russell"
        string_val: "russia"
        string_val: "russian"
        string_val: "russians"
        string_val: "ryder"
        string_val: "s"
        string_val: "sac"
        string_val: "sacking"
        string_val: "sacrifice"
        string_val: "sad"
        string_val: "saddam"
        string_val: "saddened"
        string_val: "sadly"
        string_val: "sadness"
        string_val: "safe"
        string_val: "safety"
        string_val: "said"
        string_val: "sainsbury"
        string_val: "saints"
        string_val: "sake"
        string_val: "salaries"
        string_val: "salary"
        string_val: "sale"
        string_val: "sales"
        string_val: "salvation"
        string_val: "sam"
        string_val: "same"
        string_val: "samples"
        string_val: "sanctions"
        string_val: "sandy"
        string_val: "sarah"
        string_val: "sat"
        string_val: "satan"
        string_val: "satanic"
        string_val: "satire"
        string_val: "satisfactory"
        string_val: "satisfied"
        string_val: "saturday"
        string_val: "saturdays"
        string_val: "saudis"
        string_val: "save"
        string_val: "savings"
        string_val: "savour"
        string_val: "saw"
        string_val: "say"
        string_val: "saying"
        string_val: "says"
        string_val: "scale"
        string_val: "scandal"
        string_val: "scared"
        string_val: "scary"
        string_val: "scene"
        string_val: "scheduled"
        string_val: "scheme"
        string_val: "school"
        string_val: "schoolboy"
        string_val: "schoolboys"
        string_val: "schools"
        string_val: "schoolteacher"
        string_val: "schroeder"
        string_val: "science"
        string_val: "scientific"
        string_val: "scientists"
        string_val: "sclerosis"
        string_val: "scoop"
        string_val: "scope"
        string_val: "score"
        string_val: "scored"
        string_val: "scoring"
        string_val: "scot"
        string_val: "scotch"
        string_val: "scotland"
        string_val: "scots"
        string_val: "scotsman"
        string_val: "scott"
        string_val: "scottish"
        string_val: "scrapped"
        string_val: "scratch"
        string_val: "screen"
        string_val: "screenplay"
        string_val: "script"
        string_val: "scrutiny"
        string_val: "se"
        string_val: "sea"
        string_val: "seaman"
        string_val: "sean"
        string_val: "search"
        string_val: "season"
        string_val: "seasonal"
        string_val: "seat"
        string_val: "seats"
        string_val: "second"
        string_val: "secondly"
        string_val: "seconds"
        string_val: "secret"
        string_val: "secretary"
        string_val: "secrets"
        string_val: "sections"
        string_val: "sector"
        string_val: "secure"
        string_val: "secured"
        string_val: "securing"
        string_val: "security"
        string_val: "see"
        string_val: "seeing"
        string_val: "seek"
        string_val: "seekers"
        string_val: "seeking"
        string_val: "seem"
        string_val: "seemed"
        string_val: "seems"
        string_val: "seen"
        string_val: "sees"
        string_val: "seize"
        string_val: "seized"
        string_val: "seizures"
        string_val: "selected"
        string_val: "selecting"
        string_val: "selection"
        string_val: "selective"
        string_val: "self"
        string_val: "sell"
        string_val: "seller"
        string_val: "sellout"
        string_val: "senator"
        string_val: "sending"
        string_val: "sends"
        string_val: "senior"
        string_val: "sense"
        string_val: "sensible"
        string_val: "sensitive"
        string_val: "sent"
        string_val: "sentence"
        string_val: "sentenced"
        string_val: "sentences"
        string_val: "sentencing"
        string_val: "sentiment"
        string_val: "separate"
        string_val: "separates"
        string_val: "september"
        string_val: "serb"
        string_val: "serbia"
        string_val: "sergio"
        string_val: "serial"
        string_val: "series"
        string_val: "serious"
        string_val: "seriously"
        string_val: "seriousness"
        string_val: "servant"
        string_val: "serve"
        string_val: "served"
        string_val: "service"
        string_val: "services"
        string_val: "session"
        string_val: "sessions"
        string_val: "set"
        string_val: "sets"
        string_val: "setting"
        string_val: "settle"
        string_val: "settled"
        string_val: "settlement"
        string_val: "setup"
        string_val: "seven"
        string_val: "seventeenth"
        string_val: "seventies"
        string_val: "several"
        string_val: "severe"
        string_val: "severely"
        string_val: "sex"
        string_val: "sexually"
        string_val: "shadow"
        string_val: "shaking"
        string_val: "shall"
        string_val: "shambles"
        string_val: "shame"
        string_val: "shape"
        string_val: "share"
        string_val: "shared"
        string_val: "shareholders"
        string_val: "shares"
        string_val: "sharon"
        string_val: "sharp"
        string_val: "shattering"
        string_val: "she"
        string_val: "sheep"
        string_val: "sheet"
        string_val: "shells"
        string_val: "shelter"
        string_val: "sheriff"
        string_val: "shes"
        string_val: "shift"
        string_val: "shiny"
        string_val: "shirt"
        string_val: "shock"
        string_val: "shocked"
        string_val: "shocking"
        string_val: "shoot"
        string_val: "shooting"
        string_val: "shop"
        string_val: "shoppers"
        string_val: "shopping"
        string_val: "short"
        string_val: "shortage"
        string_val: "shortages"
        string_val: "shorten"
        string_val: "shortest"
        string_val: "shortfall"
        string_val: "shortlist"
        string_val: "shortlived"
        string_val: "shortly"
        string_val: "shortsighted"
        string_val: "shortterm"
        string_val: "shot"
        string_val: "shots"
        string_val: "should"
        string_val: "shouldnt"
        string_val: "shout"
        string_val: "shouting"
        string_val: "show"
        string_val: "showcase"
        string_val: "showdown"
        string_val: "showed"
        string_val: "showing"
        string_val: "shown"
        string_val: "shows"
        string_val: "shut"
        string_val: "shuttle"
        string_val: "shyness"
        string_val: "side"
        string_val: "sides"
        string_val: "sight"
        string_val: "sightings"
        string_val: "sights"
        string_val: "sign"
        string_val: "signal"
        string_val: "signals"
        string_val: "signature"
        string_val: "signed"
        string_val: "significant"
        string_val: "signing"
        string_val: "signings"
        string_val: "signs"
        string_val: "silence"
        string_val: "silver"
        string_val: "similar"
        string_val: "simmering"
        string_val: "simon"
        string_val: "simple"
        string_val: "simplified"
        string_val: "simply"
        string_val: "simpson"
        string_val: "since"
        string_val: "sincere"
        string_val: "sincerely"
        string_val: "sing"
        string_val: "singapore"
        string_val: "singer"
        string_val: "singers"
        string_val: "singing"
        string_val: "single"
        string_val: "singled"
        string_val: "singles"
        string_val: "sinister"
        string_val: "sinn"
        string_val: "sir"
        string_val: "sister"
        string_val: "sisters"
        string_val: "sit"
        string_val: "site"
        string_val: "sites"
        string_val: "sitting"
        string_val: "situation"
        string_val: "six"
        string_val: "sixth"
        string_val: "size"
        string_val: "sizeable"
        string_val: "sizes"
        string_val: "skies"
        string_val: "skill"
        string_val: "skilled"
        string_val: "skills"
        string_val: "skipper"
        string_val: "sky"
        string_val: "slabs"
        string_val: "slater"
        string_val: "slaughter"
        string_val: "sleep"
        string_val: "sleeper"
        string_val: "sleeve"
        string_val: "slightly"
        string_val: "slip"
        string_val: "slipped"
        string_val: "slippery"
        string_val: "slope"
        string_val: "sloppy"
        string_val: "slow"
        string_val: "slowly"
        string_val: "slump"
        string_val: "small"
        string_val: "smaller"
        string_val: "smashing"
        string_val: "smith"
        string_val: "smoke"
        string_val: "smoking"
        string_val: "smuggling"
        string_val: "snack"
        string_val: "snake"
        string_val: "snipers"
        string_val: "snow"
        string_val: "so"
        string_val: "soap"
        string_val: "sober"
        string_val: "sobering"
        string_val: "social"
        string_val: "socialise"
        string_val: "socialist"
        string_val: "socialists"
        string_val: "societies"
        string_val: "society"
        string_val: "soft"
        string_val: "sold"
        string_val: "soldier"
        string_val: "solely"
        string_val: "solid"
        string_val: "solo"
        string_val: "solution"
        string_val: "solutions"
        string_val: "solve"
        string_val: "some"
        string_val: "somebody"
        string_val: "somehow"
        string_val: "someone"
        string_val: "something"
        string_val: "sometime"
        string_val: "sometimes"
        string_val: "somewhat"
        string_val: "somewhere"
        string_val: "son"
        string_val: "song"
        string_val: "songbirds"
        string_val: "songs"
        string_val: "sons"
        string_val: "soon"
        string_val: "sooner"
        string_val: "soprano"
        string_val: "sorry"
        string_val: "sort"
        string_val: "sorted"
        string_val: "sorts"
        string_val: "sought"
        string_val: "soul"
        string_val: "sound"
        string_val: "sounded"
        string_val: "sounds"
        string_val: "source"
        string_val: "sources"
        string_val: "souter"
        string_val: "south"
        string_val: "southern"
        string_val: "sovereign"
        string_val: "space"
        string_val: "spain"
        string_val: "spare"
        string_val: "speak"
        string_val: "speaking"
        string_val: "special"
        string_val: "specialised"
        string_val: "specialist"
        string_val: "specialists"
        string_val: "species"
        string_val: "specific"
        string_val: "specified"
        string_val: "spectacle"
        string_val: "spectator"
        string_val: "spectrum"
        string_val: "speculate"
        string_val: "speech"
        string_val: "speed"
        string_val: "spencer"
        string_val: "spend"
        string_val: "spent"
        string_val: "spirit"
        string_val: "spirits"
        string_val: "spite"
        string_val: "split"
        string_val: "spoke"
        string_val: "spoken"
        string_val: "spokesman"
        string_val: "spokeswoman"
        string_val: "sponsors"
        string_val: "spoon"
        string_val: "spoons"
        string_val: "sport"
        string_val: "sporting"
        string_val: "sports"
        string_val: "spotlight"
        string_val: "spreading"
        string_val: "spring"
        string_val: "spy"
        string_val: "squad"
        string_val: "square"
        string_val: "stabbed"
        string_val: "stabilise"
        string_val: "stability"
        string_val: "stable"
        string_val: "stadium"
        string_val: "staff"
        string_val: "stage"
        string_val: "stagecoach"
        string_val: "stages"
        string_val: "stake"
        string_val: "stakes"
        string_val: "stalkers"
        string_val: "stan"
        string_val: "stance"
        string_val: "stand"
        string_val: "standard"
        string_val: "standards"
        string_val: "standby"
        string_val: "standing"
        string_val: "standpoint"
        string_val: "stands"
        string_val: "standstill"
        string_val: "standup"
        string_val: "star"
        string_val: "stars"
        string_val: "start"
        string_val: "started"
        string_val: "starter"
        string_val: "starters"
        string_val: "starting"
        string_val: "starts"
        string_val: "state"
        string_val: "statement"
        string_val: "states"
        string_val: "station"
        string_val: "statistic"
        string_val: "stature"
        string_val: "stay"
        string_val: "stayed"
        string_val: "staying"
        string_val: "stays"
        string_val: "stealing"
        string_val: "stealth"
        string_val: "stella"
        string_val: "step"
        string_val: "stephen"
        string_val: "steps"
        string_val: "steven"
        string_val: "stevenson"
        string_val: "stevie"
        string_val: "stewart"
        string_val: "stick"
        string_val: "stigma"
        string_val: "still"
        string_val: "stirling"
        string_val: "stock"
        string_val: "stocks"
        string_val: "stood"
        string_val: "stop"
        string_val: "stopgap"
        string_val: "stoppages"
        string_val: "stopped"
        string_val: "stopping"
        string_val: "storage"
        string_val: "store"
        string_val: "stores"
        string_val: "story"
        string_val: "straight"
        string_val: "straightforward"
        string_val: "strangely"
        string_val: "stranger"
        string_val: "strangers"
        string_val: "strategy"
        string_val: "strathclyde"
        string_val: "straw"
        string_val: "street"
        string_val: "streets"
        string_val: "strength"
        string_val: "strengthen"
        string_val: "strengthening"
        string_val: "stressed"
        string_val: "strictly"
        string_val: "strike"
        string_val: "striker"
        string_val: "strikers"
        string_val: "strikes"
        string_val: "striking"
        string_val: "string"
        string_val: "stroke"
        string_val: "strong"
        string_val: "strongly"
        string_val: "struck"
        string_val: "structural"
        string_val: "structure"
        string_val: "struggle"
        string_val: "struggling"
        string_val: "stuart"
        string_val: "stuck"
        string_val: "students"
        string_val: "studio"
        string_val: "study"
        string_val: "stuff"
        string_val: "stunned"
        string_val: "stunning"
        string_val: "stupid"
        string_val: "style"
        string_val: "styles"
        string_val: "sub"
        string_val: "subdued"
        string_val: "subject"
        string_val: "subjected"
        string_val: "submarines"
        string_val: "submissions"
        string_val: "submitted"
        string_val: "subs"
        string_val: "subsidised"
        string_val: "subsidy"
        string_val: "substance"
        string_val: "substantial"
        string_val: "substitute"
        string_val: "subtle"
        string_val: "subversive"
        string_val: "succeed"
        string_val: "succeeds"
        string_val: "success"
        string_val: "successes"
        string_val: "successful"
        string_val: "succession"
        string_val: "successor"
        string_val: "such"
        string_val: "sudden"
        string_val: "suddenly"
        string_val: "suffer"
        string_val: "suffered"
        string_val: "suffering"
        string_val: "suffers"
        string_val: "sufficient"
        string_val: "suggest"
        string_val: "suggested"
        string_val: "suggestion"
        string_val: "suggestions"
        string_val: "suggests"
        string_val: "suicide"
        string_val: "suit"
        string_val: "suitable"
        string_val: "suited"
        string_val: "sullivan"
        string_val: "summer"
        string_val: "summit"
        string_val: "sums"
        string_val: "sunbeds"
        string_val: "sunday"
        string_val: "sundays"
        string_val: "sunglasses"
        string_val: "sunlight"
        string_val: "suns"
        string_val: "sunset"
        string_val: "super"
        string_val: "superb"
        string_val: "superbly"
        string_val: "superimposition"
        string_val: "superposition"
        string_val: "supplies"
        string_val: "supply"
        string_val: "support"
        string_val: "supported"
        string_val: "supporter"
        string_val: "supporters"
        string_val: "supporting"
        string_val: "supportive"
        string_val: "supports"
        string_val: "supposed"
        string_val: "supreme"
        string_val: "supremely"
        string_val: "sure"
        string_val: "surely"
        string_val: "surface"
        string_val: "surge"
        string_val: "surgery"
        string_val: "surplus"
        string_val: "surprise"
        string_val: "surprised"
        string_val: "surprises"
        string_val: "surprising"
        string_val: "surrender"
        string_val: "surrey"
        string_val: "surrounded"
        string_val: "surrounding"
        string_val: "survey"
        string_val: "surveyed"
        string_val: "survival"
        string_val: "survive"
        string_val: "survived"
        string_val: "survivors"
        string_val: "suspect"
        string_val: "suspend"
        string_val: "suspended"
        string_val: "suspension"
        string_val: "suspicion"
        string_val: "suspicions"
        string_val: "suspicious"
        string_val: "sussex"
        string_val: "sustained"
        string_val: "sutherland"
        string_val: "sutton"
        string_val: "sweden"
        string_val: "sweetness"
        string_val: "swept"
        string_val: "swift"
        string_val: "swimming"
        string_val: "swing"
        string_val: "swipe"
        string_val: "switch"
        string_val: "symbolic"
        string_val: "symbols"
        string_val: "sympathy"
        string_val: "symphonies"
        string_val: "symphony"
        string_val: "symptoms"
        string_val: "system"
        string_val: "systems"
        string_val: "t"
        string_val: "table"
        string_val: "tabloids"
        string_val: "tackle"
        string_val: "tackled"
        string_val: "tackling"
        string_val: "tactical"
        string_val: "take"
        string_val: "taken"
        string_val: "takeover"
        string_val: "takes"
        string_val: "taking"
        string_val: "tale"
        string_val: "talent"
        string_val: "talented"
        string_val: "talents"
        string_val: "taliban"
        string_val: "talk"
        string_val: "talking"
        string_val: "talks"
        string_val: "tandem"
        string_val: "tangible"
        string_val: "tank"
        string_val: "target"
        string_val: "targeted"
        string_val: "targets"
        string_val: "tartan"
        string_val: "task"
        string_val: "taste"
        string_val: "tasty"
        string_val: "tate"
        string_val: "tax"
        string_val: "taxation"
        string_val: "taxes"
        string_val: "taxi"
        string_val: "taxpayer"
        string_val: "taylor"
        string_val: "tea"
        string_val: "teacher"
        string_val: "teachers"
        string_val: "teaching"
        string_val: "team"
        string_val: "teams"
        string_val: "tears"
        string_val: "technical"
        string_val: "technically"
        string_val: "technique"
        string_val: "techniques"
        string_val: "technology"
        string_val: "tee"
        string_val: "teenage"
        string_val: "teenager"
        string_val: "telecom"
        string_val: "telecoms"
        string_val: "telegraph"
        string_val: "telephone"
        string_val: "telephones"
        string_val: "tell"
        string_val: "telling"
        string_val: "tells"
        string_val: "telly"
        string_val: "temperature"
        string_val: "temporary"
        string_val: "temptation"
        string_val: "tempted"
        string_val: "ten"
        string_val: "tenancy"
        string_val: "tenant"
        string_val: "tenants"
        string_val: "tend"
        string_val: "tended"
        string_val: "tension"
        string_val: "term"
        string_val: "terms"
        string_val: "terrain"
        string_val: "terrible"
        string_val: "terribly"
        string_val: "terrific"
        string_val: "terrified"
        string_val: "terror"
        string_val: "terrorist"
        string_val: "terrorists"
        string_val: "test"
        string_val: "tested"
        string_val: "testing"
        string_val: "tests"
        string_val: "text"
        string_val: "thailand"
        string_val: "thames"
        string_val: "than"
        string_val: "thank"
        string_val: "thankfully"
        string_val: "that"
        string_val: "thatcher"
        string_val: "thatd"
        string_val: "thatll"
        string_val: "thats"
        string_val: "the"
        string_val: "theatre"
        string_val: "theft"
        string_val: "their"
        string_val: "them"
        string_val: "theme"
        string_val: "themes"
        string_val: "themselves"
        string_val: "then"
        string_val: "theory"
        string_val: "there"
        string_val: "thereafter"
        string_val: "therefore"
        string_val: "therein"
        string_val: "theres"
        string_val: "these"
        string_val: "they"
        string_val: "theyre"
        string_val: "theyve"
        string_val: "thick"
        string_val: "thing"
        string_val: "things"
        string_val: "think"
        string_val: "thinking"
        string_val: "thinks"
        string_val: "third"
        string_val: "thirds"
        string_val: "thirteen"
        string_val: "thirty"
        string_val: "this"
        string_val: "thomson"
        string_val: "thoroughly"
        string_val: "those"
        string_val: "though"
        string_val: "thought"
        string_val: "thoughts"
        string_val: "thousand"
        string_val: "thousands"
        string_val: "threat"
        string_val: "threaten"
        string_val: "threatened"
        string_val: "threatening"
        string_val: "three"
        string_val: "threehour"
        string_val: "threequarters"
        string_val: "threeyear"
        string_val: "threshold"
        string_val: "threw"
        string_val: "thrive"
        string_val: "through"
        string_val: "throughout"
        string_val: "thursday"
        string_val: "thus"
        string_val: "tibetan"
        string_val: "ticket"
        string_val: "tickets"
        string_val: "tidal"
        string_val: "tie"
        string_val: "tied"
        string_val: "tiger"
        string_val: "tight"
        string_val: "tighten"
        string_val: "tightrope"
        string_val: "time"
        string_val: "timely"
        string_val: "times"
        string_val: "timescale"
        string_val: "timetable"
        string_val: "timing"
        string_val: "tiny"
        string_val: "tip"
        string_val: "tired"
        string_val: "titanic"
        string_val: "title"
        string_val: "titles"
        string_val: "to"
        string_val: "today"
        string_val: "todays"
        string_val: "together"
        string_val: "toilet"
        string_val: "token"
        string_val: "tokyo"
        string_val: "told"
        string_val: "tolerance"
        string_val: "tolerate"
        string_val: "toll"
        string_val: "tommy"
        string_val: "tomorrow"
        string_val: "tone"
        string_val: "tonight"
        string_val: "tonights"
        string_val: "tony"
        string_val: "too"
        string_val: "took"
        string_val: "tooth"
        string_val: "top"
        string_val: "topup"
        string_val: "tories"
        string_val: "tornado"
        string_val: "torrance"
        string_val: "tory"
        string_val: "total"
        string_val: "totally"
        string_val: "touch"
        string_val: "touchdown"
        string_val: "tough"
        string_val: "tour"
        string_val: "tourism"
        string_val: "tourist"
        string_val: "tourists"
        string_val: "tournament"
        string_val: "tournaments"
        string_val: "towards"
        string_val: "town"
        string_val: "toy"
        string_val: "track"
        string_val: "trade"
        string_val: "trademark"
        string_val: "trader"
        string_val: "trading"
        string_val: "tradition"
        string_val: "traditions"
        string_val: "traffic"
        string_val: "tragedy"
        string_val: "tragic"
        string_val: "train"
        string_val: "training"
        string_val: "transaction"
        string_val: "transfer"
        string_val: "transferred"
        string_val: "translation"
        string_val: "transparent"
        string_val: "transpires"
        string_val: "transport"
        string_val: "trapped"
        string_val: "traumatic"
        string_val: "travel"
        string_val: "travelled"
        string_val: "travelling"
        string_val: "travels"
        string_val: "tread"
        string_val: "treasure"
        string_val: "treasures"
        string_val: "treasury"
        string_val: "treat"
        string_val: "treatable"
        string_val: "treated"
        string_val: "treating"
        string_val: "treatment"
        string_val: "tree"
        string_val: "tremendous"
        string_val: "trend"
        string_val: "trevor"
        string_val: "trial"
        string_val: "trials"
        string_val: "tribunal"
        string_val: "tribute"
        string_val: "trick"
        string_val: "tried"
        string_val: "trimble"
        string_val: "trio"
        string_val: "trip"
        string_val: "triumph"
        string_val: "triumphant"
        string_val: "tron"
        string_val: "trophy"
        string_val: "trouble"
        string_val: "troubles"
        string_val: "true"
        string_val: "truly"
        string_val: "trust"
        string_val: "truth"
        string_val: "try"
        string_val: "trying"
        string_val: "tube"
        string_val: "tuesday"
        string_val: "tumble"
        string_val: "tunnel"
        string_val: "turmoil"
        string_val: "turn"
        string_val: "turnaround"
        string_val: "turned"
        string_val: "turning"
        string_val: "turnout"
        string_val: "turnover"
        string_val: "tv"
        string_val: "twaddle"
        string_val: "twenties"
        string_val: "twentyfirst"
        string_val: "twice"
        string_val: "twickenham"
        string_val: "two"
        string_val: "twoday"
        string_val: "type"
        string_val: "types"
        string_val: "typical"
        string_val: "tyson"
        string_val: "ugly"
        string_val: "uk"
        string_val: "ukwide"
        string_val: "ulster"
        string_val: "ultimate"
        string_val: "un"
        string_val: "unable"
        string_val: "unacceptable"
        string_val: "unanimous"
        string_val: "unanswered"
        string_val: "unaware"
        string_val: "unbalanced"
        string_val: "unbeaten"
        string_val: "uncanny"
        string_val: "uncertain"
        string_val: "unchanged"
        string_val: "unclear"
        string_val: "uncommon"
        string_val: "unconfirmed"
        string_val: "unconscious"
        string_val: "under"
        string_val: "underage"
        string_val: "undercut"
        string_val: "underdogs"
        string_val: "undergone"
        string_val: "underground"
        string_val: "undermined"
        string_val: "understand"
        string_val: "understood"
        string_val: "underway"
        string_val: "underwear"
        string_val: "undue"
        string_val: "unduly"
        string_val: "unearthing"
        string_val: "uneasy"
        string_val: "unemployed"
        string_val: "unfair"
        string_val: "unfinished"
        string_val: "unfolding"
        string_val: "unhappy"
        string_val: "unharmed"
        string_val: "unhurt"
        string_val: "uniform"
        string_val: "uniforms"
        string_val: "uninjured"
        string_val: "union"
        string_val: "unionists"
        string_val: "unions"
        string_val: "unique"
        string_val: "unison"
        string_val: "unit"
        string_val: "united"
        string_val: "units"
        string_val: "unity"
        string_val: "universal"
        string_val: "universities"
        string_val: "university"
        string_val: "unjust"
        string_val: "unknown"
        string_val: "unlawful"
        string_val: "unless"
        string_val: "unlike"
        string_val: "unlikely"
        string_val: "unlucky"
        string_val: "unnoticed"
        string_val: "unpaid"
        string_val: "unpleasant"
        string_val: "unpredictable"
        string_val: "unprepared"
        string_val: "unproven"
        string_val: "unreal"
        string_val: "unrest"
        string_val: "unsafe"
        string_val: "unsettled"
        string_val: "until"
        string_val: "unto"
        string_val: "untouched"
        string_val: "untrue"
        string_val: "unusual"
        string_val: "unveiled"
        string_val: "unwanted"
        string_val: "unwell"
        string_val: "unwilling"
        string_val: "up"
        string_val: "upbeat"
        string_val: "upgrading"
        string_val: "upheaval"
        string_val: "upheld"
        string_val: "uplifting"
        string_val: "upon"
        string_val: "upset"
        string_val: "upsetting"
        string_val: "upside"
        string_val: "uptake"
        string_val: "upturn"
        string_val: "urge"
        string_val: "urged"
        string_val: "urgency"
        string_val: "urgent"
        string_val: "urgently"
        string_val: "us"
        string_val: "use"
        string_val: "used"
        string_val: "useful"
        string_val: "users"
        string_val: "usher"
        string_val: "using"
        string_val: "usual"
        string_val: "usually"
        string_val: "utmost"
        string_val: "utter"
        string_val: "utterly"
        string_val: "uturn"
        string_val: "vacancies"
        string_val: "vaccines"
        string_val: "vacuum"
        string_val: "valid"
        string_val: "valley"
        string_val: "valuable"
        string_val: "value"
        string_val: "vandals"
        string_val: "vanity"
        string_val: "variable"
        string_val: "variety"
        string_val: "various"
        string_val: "varying"
        string_val: "vast"
        string_val: "vaudeville"
        string_val: "vegas"
        string_val: "vehicle"
        string_val: "vehicles"
        string_val: "vein"
        string_val: "venture"
        string_val: "venue"
        string_val: "venus"
        string_val: "verbal"
        string_val: "verdict"
        string_val: "version"
        string_val: "very"
        string_val: "vessel"
        string_val: "veteran"
        string_val: "veterans"
        string_val: "vibrant"
        string_val: "vicious"
        string_val: "victim"
        string_val: "victims"
        string_val: "victor"
        string_val: "victoria"
        string_val: "victories"
        string_val: "victorious"
        string_val: "victory"
        string_val: "video"
        string_val: "videos"
        string_val: "view"
        string_val: "viewers"
        string_val: "viewing"
        string_val: "viewpoint"
        string_val: "views"
        string_val: "vigilant"
        string_val: "vigorous"
        string_val: "viligant"
        string_val: "villa"
        string_val: "village"
        string_val: "villagers"
        string_val: "villages"
        string_val: "violations"
        string_val: "violence"
        string_val: "virgin"
        string_val: "virtue"
        string_val: "virus"
        string_val: "visible"
        string_val: "visibly"
        string_val: "vision"
        string_val: "visionary"
        string_val: "visit"
        string_val: "visited"
        string_val: "visiting"
        string_val: "visitors"
        string_val: "visual"
        string_val: "vital"
        string_val: "vitally"
        string_val: "vivid"
        string_val: "vocation"
        string_val: "voice"
        string_val: "voices"
        string_val: "volatile"
        string_val: "volunteers"
        string_val: "volvo"
        string_val: "vote"
        string_val: "voted"
        string_val: "voters"
        string_val: "voting"
        string_val: "vu"
        string_val: "w"
        string_val: "wage"
        string_val: "wages"
        string_val: "wagner"
        string_val: "wait"
        string_val: "waited"
        string_val: "waiting"
        string_val: "wake"
        string_val: "wales"
        string_val: "walk"
        string_val: "walker"
        string_val: "walkers"
        string_val: "walking"
        string_val: "wall"
        string_val: "wallabies"
        string_val: "wallace"
        string_val: "wand"
        string_val: "wanger"
        string_val: "want"
        string_val: "wanted"
        string_val: "wants"
        string_val: "war"
        string_val: "wards"
        string_val: "warm"
        string_val: "warned"
        string_val: "warning"
        string_val: "warnings"
        string_val: "warrant"
        string_val: "warren"
        string_val: "was"
        string_val: "washington"
        string_val: "wasnt"
        string_val: "waste"
        string_val: "wasted"
        string_val: "watch"
        string_val: "watched"
        string_val: "watching"
        string_val: "water"
        string_val: "wave"
        string_val: "way"
        string_val: "ways"
        string_val: "we"
        string_val: "weak"
        string_val: "weakest"
        string_val: "weakness"
        string_val: "weaknesses"
        string_val: "wealth"
        string_val: "wealthiest"
        string_val: "wealthy"
        string_val: "weapons"
        string_val: "wearing"
        string_val: "weather"
        string_val: "web"
        string_val: "website"
        string_val: "webster"
        string_val: "wedding"
        string_val: "wednesday"
        string_val: "wednesdays"
        string_val: "wee"
        string_val: "week"
        string_val: "weekend"
        string_val: "weekends"
        string_val: "weekly"
        string_val: "weeks"
        string_val: "weight"
        string_val: "welcome"
        string_val: "welcomed"
        string_val: "welfare"
        string_val: "well"
        string_val: "welsh"
        string_val: "wembley"
        string_val: "went"
        string_val: "were"
        string_val: "werent"
        string_val: "west"
        string_val: "western"
        string_val: "westminister"
        string_val: "westminster"
        string_val: "westwood"
        string_val: "weve"
        string_val: "whammy"
        string_val: "what"
        string_val: "whatever"
        string_val: "whats"
        string_val: "wheel"
        string_val: "when"
        string_val: "whenever"
        string_val: "where"
        string_val: "whether"
        string_val: "which"
        string_val: "while"
        string_val: "whisky"
        string_val: "whistle"
        string_val: "white"
        string_val: "whitehall"
        string_val: "who"
        string_val: "whoever"
        string_val: "whole"
        string_val: "wholly"
        string_val: "why"
        string_val: "wickets"
        string_val: "wide"
        string_val: "widely"
        string_val: "wider"
        string_val: "widespread"
        string_val: "widow"
        string_val: "widows"
        string_val: "width"
        string_val: "wife"
        string_val: "wild"
        string_val: "wildest"
        string_val: "wilful"
        string_val: "wilkie"
        string_val: "wilkinson"
        string_val: "will"
        string_val: "william"
        string_val: "williams"
        string_val: "williamson"
        string_val: "willie"
        string_val: "willing"
        string_val: "wilson"
        string_val: "win"
        string_val: "wind"
        string_val: "window"
        string_val: "wine"
        string_val: "wing"
        string_val: "wingers"
        string_val: "winner"
        string_val: "winners"
        string_val: "winning"
        string_val: "wins"
        string_val: "winter"
        string_val: "wireless"
        string_val: "wise"
        string_val: "wish"
        string_val: "with"
        string_val: "withdrawal"
        string_val: "withdrawn"
        string_val: "within"
        string_val: "without"
        string_val: "witness"
        string_val: "witnesses"
        string_val: "wolfson"
        string_val: "woman"
        string_val: "women"
        string_val: "won"
        string_val: "wonder"
        string_val: "wondered"
        string_val: "wonderful"
        string_val: "wondering"
        string_val: "wont"
        string_val: "wood"
        string_val: "woodland"
        string_val: "word"
        string_val: "words"
        string_val: "work"
        string_val: "worked"
        string_val: "workers"
        string_val: "workforce"
        string_val: "working"
        string_val: "workings"
        string_val: "workmanlike"
        string_val: "workout"
        string_val: "works"
        string_val: "world"
        string_val: "worlds"
        string_val: "worried"
        string_val: "worries"
        string_val: "worry"
        string_val: "worrying"
        string_val: "worse"
        string_val: "worst"
        string_val: "worth"
        string_val: "worthwhile"
        string_val: "worthy"
        string_val: "would"
        string_val: "wouldnt"
        string_val: "wound"
        string_val: "wounded"
        string_val: "wounds"
        string_val: "wreck"
        string_val: "wreckage"
        string_val: "write"
        string_val: "writer"
        string_val: "writers"
        string_val: "writing"
        string_val: "written"
        string_val: "wrong"
        string_val: "wrote"
        string_val: "xray"
        string_val: "yard"
        string_val: "year"
        string_val: "years"
        string_val: "yellow"
        string_val: "yes"
        string_val: "yesterday"
        string_val: "yesterdays"
        string_val: "yet"
        string_val: "york"
        string_val: "yorkers"
        string_val: "yorkshire"
        string_val: "you"
        string_val: "youd"
        string_val: "youll"
        string_val: "young"
        string_val: "youngest"
        string_val: "youngster"
        string_val: "youngsters"
        string_val: "your"
        string_val: "youre"
        string_val: "yourself"
        string_val: "yourselves"
        string_val: "youth"
        string_val: "youve"
        string_val: "yugoslav"
        string_val: "zealand"
        string_val: "zimbabwe"
        string_val: "zone"
      }
    }
  }
}
node {
  name: "string_to_index/Size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5585
      }
    }
  }
}
node {
  name: "string_to_index/range/start"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "string_to_index/range/delta"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "string_to_index/range"
  op: "Range"
  input: "string_to_index/range/start"
  input: "string_to_index/Size"
  input: "string_to_index/range/delta"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5585
          }
        }
      }
    }
  }
}
node {
  name: "string_to_index/ToInt64"
  op: "Cast"
  input: "string_to_index/range"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5585
          }
        }
      }
    }
  }
}
node {
  name: "string_to_index/hash_table"
  op: "HashTableV2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "string_to_index/hash_table/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "string_to_index/hash_table/table_init"
  op: "LookupTableImportV2"
  input: "string_to_index/hash_table"
  input: "Const_1"
  input: "string_to_index/ToInt64"
  device: "/device:CPU:0"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Const_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "<s>"
      }
    }
  }
}
node {
  name: "hash_table_Lookup"
  op: "LookupTableFindV2"
  input: "string_to_index/hash_table"
  input: "Const_2"
  input: "string_to_index/hash_table/Const"
  device: "/device:CPU:0"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Cast"
  op: "Cast"
  input: "hash_table_Lookup"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Const_3"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "</s>"
      }
    }
  }
}
node {
  name: "hash_table_Lookup_1"
  op: "LookupTableFindV2"
  input: "string_to_index/hash_table"
  input: "Const_3"
  input: "string_to_index/hash_table/Const"
  device: "/device:CPU:0"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Cast_1"
  op: "Cast"
  input: "hash_table_Lookup_1"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "count"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 150
      }
    }
  }
}
node {
  name: "buffer_size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 32000
      }
    }
  }
}
node {
  name: "seed"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "num_parallel_calls"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "num_parallel_calls_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "num_parallel_calls_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "num_parallel_calls_3"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "batch_size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 32
      }
    }
  }
}
node {
  name: "Const_4"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\377\377\377\377\'\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Const_5"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Const_6"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Const_7"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 1
          }
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "Const_8"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 1
          }
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "padding_value"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "padding_value_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "padding_value_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "drop_remainder"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "IteratorV2"
  op: "IteratorV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 39
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "TensorSliceDataset"
  op: "TensorSliceDataset"
  input: "flat_filenames"
  attr {
    key: "Toutput_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@IteratorV2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "FlatMapDataset"
  op: "FlatMapDataset"
  input: "TensorSliceDataset"
  attr {
    key: "Targuments"
    value {
      list {
      }
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@IteratorV2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "tf_data_structured_function_wrapper_52oRgbbAY9U"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
}
node {
  name: "MapDataset"
  op: "MapDataset"
  input: "FlatMapDataset"
  attr {
    key: "Targuments"
    value {
      list {
      }
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@IteratorV2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "tf_data_structured_function_wrapper_aeuwDpH4P8c"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 39
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_STRING
      }
    }
  }
  attr {
    key: "use_inter_op_parallelism"
    value {
      b: true
    }
  }
}
node {
  name: "RepeatDataset"
  op: "RepeatDataset"
  input: "MapDataset"
  input: "count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@IteratorV2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 39
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_STRING
      }
    }
  }
}
node {
  name: "ShuffleDataset"
  op: "ShuffleDataset"
  input: "RepeatDataset"
  input: "buffer_size"
  input: "seed"
  input: "seed2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@IteratorV2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 39
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_STRING
      }
    }
  }
  attr {
    key: "reshuffle_each_iteration"
    value {
      b: true
    }
  }
}
node {
  name: "ParallelMapDataset"
  op: "ParallelMapDataset"
  input: "ShuffleDataset"
  input: "string_to_index/hash_table"
  input: "string_to_index/hash_table/Const"
  input: "num_parallel_calls"
  attr {
    key: "Targuments"
    value {
      list {
        type: DT_RESOURCE
        type: DT_INT64
      }
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@IteratorV2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "tf_data_structured_function_wrapper_lPmvTEtOHbs"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 39
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
  attr {
    key: "use_inter_op_parallelism"
    value {
      b: true
    }
  }
}
node {
  name: "ParallelMapDataset_1"
  op: "ParallelMapDataset"
  input: "ParallelMapDataset"
  input: "num_parallel_calls_1"
  attr {
    key: "Targuments"
    value {
      list {
      }
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@IteratorV2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "tf_data_structured_function_wrapper_AAfPU2iCD9w"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 39
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT32
      }
    }
  }
  attr {
    key: "use_inter_op_parallelism"
    value {
      b: true
    }
  }
}
node {
  name: "ParallelMapDataset_2"
  op: "ParallelMapDataset"
  input: "ParallelMapDataset_1"
  input: "Cast"
  input: "Cast_1"
  input: "num_parallel_calls_2"
  attr {
    key: "Targuments"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
      }
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@IteratorV2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "tf_data_structured_function_wrapper_mAdOBgQrakc"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 39
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT32
        type: DT_INT32
      }
    }
  }
  attr {
    key: "use_inter_op_parallelism"
    value {
      b: true
    }
  }
}
node {
  name: "ParallelMapDataset_3"
  op: "ParallelMapDataset"
  input: "ParallelMapDataset_2"
  input: "num_parallel_calls_3"
  attr {
    key: "Targuments"
    value {
      list {
      }
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@IteratorV2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "tf_data_structured_function_wrapper_xVA2SbI2ctA"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 39
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
      }
    }
  }
  attr {
    key: "use_inter_op_parallelism"
    value {
      b: true
    }
  }
}
node {
  name: "MapDataset_1"
  op: "MapDataset"
  input: "ParallelMapDataset_3"
  attr {
    key: "Targuments"
    value {
      list {
      }
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@IteratorV2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "tf_data_structured_function_wrapper_hvYyoquGYAk"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 39
          }
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
      }
    }
  }
  attr {
    key: "use_inter_op_parallelism"
    value {
      b: true
    }
  }
}
node {
  name: "PaddedBatchDatasetV2"
  op: "PaddedBatchDatasetV2"
  input: "MapDataset_1"
  input: "batch_size"
  input: "Const_4"
  input: "Const_5"
  input: "Const_6"
  input: "Const_7"
  input: "Const_8"
  input: "padding_value"
  input: "padding_value_1"
  input: "padding_value_2"
  input: "Cast_1"
  input: "Cast_1"
  input: "drop_remainder"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "Toutput_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
      }
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@IteratorV2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 39
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "MakeIterator"
  op: "MakeIterator"
  input: "PaddedBatchDatasetV2"
  input: "IteratorV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@IteratorV2"
      }
    }
  }
}
node {
  name: "IteratorToStringHandle"
  op: "IteratorToStringHandle"
  input: "IteratorV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "IteratorGetNext"
  op: "IteratorGetNext"
  input: "IteratorV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 39
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 39
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
      }
    }
  }
}
node {
  name: "listener/bilstm_0/fw_cell/DropoutWrapperInit/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "listener/bilstm_0/fw_cell/DropoutWrapperInit/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/fw_cell/DropoutWrapperInit/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bw_cell/DropoutWrapperInit/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bw_cell/DropoutWrapperInit/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bw_cell/DropoutWrapperInit/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/range"
  op: "Range"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/range/start"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/Rank"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/concat"
  op: "ConcatV2"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/concat/values_0"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/range"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/transpose"
  op: "Transpose"
  input: "IteratorGetNext"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 39
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/sequence_length"
  op: "Identity"
  input: "IteratorGetNext:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/Shape"
  op: "Shape"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/strided_slice"
  op: "StridedSlice"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/Shape"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/strided_slice/stack"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/strided_slice/stack_1"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/strided_slice"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros"
  op: "Fill"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_1"
  op: "ExpandDims"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/strided_slice"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_2"
  op: "ExpandDims"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/strided_slice"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_2"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_2"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat_1"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_3/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_3"
  op: "ExpandDims"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/strided_slice"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_3/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/Shape_1"
  op: "Shape"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/sequence_length"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/stack"
  op: "Pack"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/strided_slice"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/Equal"
  op: "Equal"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/Shape_1"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/All"
  op: "All"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/Equal"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor listener/bilstm_0/bidirectional_rnn/fw/fw/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor listener/bilstm_0/bidirectional_rnn/fw/fw/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/Assert/Assert"
  op: "Assert"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/All"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/Assert/Assert/data_0"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/stack"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/Assert/Assert/data_2"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/Shape_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/CheckSeqLen"
  op: "Identity"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/sequence_length"
  input: "^listener/bilstm_0/bidirectional_rnn/fw/fw/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/Shape_2"
  op: "Shape"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/strided_slice_1"
  op: "StridedSlice"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/Shape_2"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/strided_slice_1/stack"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/strided_slice_1/stack_1"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/Shape_3"
  op: "Shape"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/strided_slice_2"
  op: "StridedSlice"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/Shape_3"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/strided_slice_2/stack"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/strided_slice_2/stack_1"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/ExpandDims"
  op: "ExpandDims"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/strided_slice_2"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/concat_1"
  op: "ConcatV2"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/ExpandDims"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/Const_1"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/zeros"
  op: "Fill"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/concat_1"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/Min"
  op: "Min"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/CheckSeqLen"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/Const_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/Max"
  op: "Max"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/CheckSeqLen"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/time"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArray"
  op: "TensorArrayV3"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/fw/fw/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArray_1"
  op: "TensorArrayV3"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 39
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/fw/fw/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/Shape"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_1"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/range"
  op: "Range"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/range/start"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArray_1"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/range"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/transpose"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/fw/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/Maximum"
  op: "Maximum"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/Maximum/x"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/Max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/Minimum"
  op: "Minimum"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/strided_slice_1"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/iteration_counter"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Enter"
  op: "Enter"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Enter_1"
  op: "Enter"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Enter_2"
  op: "Enter"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Enter_3"
  op: "Enter"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Enter_4"
  op: "Enter"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge"
  op: "Merge"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Enter"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_1"
  op: "Merge"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Enter_1"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_2"
  op: "Merge"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Enter_2"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_3"
  op: "Merge"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Enter_3"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_4"
  op: "Merge"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Enter_4"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/NextIteration_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Less"
  op: "Less"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Less/Enter"
  op: "Enter"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Less_1"
  op: "Less"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_1"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Less_1/Enter"
  op: "Enter"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/LogicalAnd"
  op: "LogicalAnd"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Less"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Less_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/LoopCond"
  op: "LoopCond"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/LogicalAnd"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Switch"
  op: "Switch"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Switch_1"
  op: "Switch"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_1"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Switch_2"
  op: "Switch"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_2"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Switch_3"
  op: "Switch"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_3"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Switch_4"
  op: "Switch"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_4"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Identity"
  op: "Identity"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Identity_1"
  op: "Identity"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Identity_2"
  op: "Identity"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Identity_3"
  op: "Identity"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Identity_4"
  op: "Identity"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/add/y"
  op: "Const"
  input: "^listener/bilstm_0/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/add"
  op: "Add"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Identity"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Identity_1"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 39
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/GreaterEqual"
  op: "GreaterEqual"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Identity_1"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/GreaterEqual/Enter"
  op: "Enter"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/CheckSeqLen"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/dropout/keep_prob"
  op: "Const"
  input: "^listener/bilstm_0/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/dropout/Shape"
  op: "Shape"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/dropout/random_uniform/min"
  op: "Const"
  input: "^listener/bilstm_0/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/dropout/random_uniform/max"
  op: "Const"
  input: "^listener/bilstm_0/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 39
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/dropout/random_uniform/sub"
  op: "Sub"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/dropout/random_uniform/max"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/dropout/random_uniform/mul"
  op: "Mul"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/dropout/random_uniform/RandomUniform"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 39
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/dropout/random_uniform"
  op: "Add"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/dropout/random_uniform/mul"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 39
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/dropout/add"
  op: "Add"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/dropout/keep_prob"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 39
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/dropout/Floor"
  op: "Floor"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 39
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/dropout/div"
  op: "RealDiv"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 39
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/dropout/mul"
  op: "Mul"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/dropout/div"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 39
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\247\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09400279074907303
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09400279074907303
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Initializer/random_uniform"
  op: "Add"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 167
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Assign"
  op: "Assign"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/read"
  op: "Identity"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias/Assign"
  op: "Assign"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias/read"
  op: "Identity"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Const"
  op: "Const"
  input: "^listener/bilstm_0/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat/axis"
  op: "Const"
  input: "^listener/bilstm_0/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/dropout/mul"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Identity_4"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 167
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter"
  op: "Enter"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter"
  op: "Enter"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Const_1"
  op: "Const"
  input: "^listener/bilstm_0/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/split"
  op: "Split"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Const"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Const_2"
  op: "Const"
  input: "^listener/bilstm_0/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add"
  op: "Add"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/split:2"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul"
  op: "Mul"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Identity_3"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1"
  op: "Mul"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_1"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1"
  op: "Add"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2"
  op: "Mul"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Tanh_1"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select"
  op: "Select"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/GreaterEqual"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select/Enter"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select/Enter"
  op: "Enter"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1"
  op: "Select"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/GreaterEqual"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Identity_3"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_2"
  op: "Select"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/GreaterEqual"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Identity_4"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Identity_1"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/add_1/y"
  op: "Const"
  input: "^listener/bilstm_0/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/add_1"
  op: "Add"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Identity_1"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/NextIteration"
  op: "NextIteration"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/NextIteration_1"
  op: "NextIteration"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/NextIteration_2"
  op: "NextIteration"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/NextIteration_3"
  op: "NextIteration"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/NextIteration_4"
  op: "NextIteration"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Exit"
  op: "Exit"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Exit_1"
  op: "Exit"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Exit_2"
  op: "Exit"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Exit_3"
  op: "Exit"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Exit_4"
  op: "Exit"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArray"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArrayStack/range"
  op: "Range"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArrayStack/range/start"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArraySizeV3"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArray"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArrayStack/range"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/Rank_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/range_1/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/range_1/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/range_1"
  op: "Range"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/range_1/start"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/Rank_1"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/concat_2/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/concat_2"
  op: "ConcatV2"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/concat_2/values_0"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/range_1"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/fw/transpose_1"
  op: "Transpose"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/ReverseSequence"
  op: "ReverseSequence"
  input: "IteratorGetNext"
  input: "IteratorGetNext:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 39
          }
        }
      }
    }
  }
  attr {
    key: "batch_dim"
    value {
      i: 0
    }
  }
  attr {
    key: "seq_dim"
    value {
      i: 1
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/range"
  op: "Range"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/range/start"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/Rank"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/concat"
  op: "ConcatV2"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/concat/values_0"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/range"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/transpose"
  op: "Transpose"
  input: "listener/bilstm_0/bidirectional_rnn/bw/ReverseSequence"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 39
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/sequence_length"
  op: "Identity"
  input: "IteratorGetNext:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/Shape"
  op: "Shape"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/strided_slice"
  op: "StridedSlice"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/Shape"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/strided_slice/stack"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/strided_slice/stack_1"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/strided_slice"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros"
  op: "Fill"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_1"
  op: "ExpandDims"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/strided_slice"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_2"
  op: "ExpandDims"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/strided_slice"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_2"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_2"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat_1"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_3/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_3"
  op: "ExpandDims"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/strided_slice"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_3/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/Shape_1"
  op: "Shape"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/sequence_length"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/stack"
  op: "Pack"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/strided_slice"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/Equal"
  op: "Equal"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/Shape_1"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/All"
  op: "All"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/Equal"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor listener/bilstm_0/bidirectional_rnn/bw/bw/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor listener/bilstm_0/bidirectional_rnn/bw/bw/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/Assert/Assert"
  op: "Assert"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/All"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/Assert/Assert/data_0"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/stack"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/Assert/Assert/data_2"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/Shape_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/CheckSeqLen"
  op: "Identity"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/sequence_length"
  input: "^listener/bilstm_0/bidirectional_rnn/bw/bw/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/Shape_2"
  op: "Shape"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/strided_slice_1"
  op: "StridedSlice"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/Shape_2"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/strided_slice_1/stack"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/strided_slice_1/stack_1"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/Shape_3"
  op: "Shape"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/strided_slice_2"
  op: "StridedSlice"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/Shape_3"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/strided_slice_2/stack"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/strided_slice_2/stack_1"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/ExpandDims"
  op: "ExpandDims"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/strided_slice_2"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/concat_1"
  op: "ConcatV2"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/ExpandDims"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/Const_1"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/zeros"
  op: "Fill"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/concat_1"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/Min"
  op: "Min"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/CheckSeqLen"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/Const_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/Max"
  op: "Max"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/CheckSeqLen"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/time"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArray"
  op: "TensorArrayV3"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/bw/bw/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArray_1"
  op: "TensorArrayV3"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 39
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/bw/bw/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/Shape"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_1"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/range"
  op: "Range"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/range/start"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArray_1"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/range"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/transpose"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/bw/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/Maximum"
  op: "Maximum"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/Maximum/x"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/Max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/Minimum"
  op: "Minimum"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/strided_slice_1"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/iteration_counter"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Enter"
  op: "Enter"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Enter_1"
  op: "Enter"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Enter_2"
  op: "Enter"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Enter_3"
  op: "Enter"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Enter_4"
  op: "Enter"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge"
  op: "Merge"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Enter"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_1"
  op: "Merge"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Enter_1"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_2"
  op: "Merge"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Enter_2"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_3"
  op: "Merge"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Enter_3"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_4"
  op: "Merge"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Enter_4"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/NextIteration_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Less"
  op: "Less"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Less/Enter"
  op: "Enter"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Less_1"
  op: "Less"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_1"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Less_1/Enter"
  op: "Enter"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/LogicalAnd"
  op: "LogicalAnd"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Less"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Less_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/LoopCond"
  op: "LoopCond"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/LogicalAnd"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Switch"
  op: "Switch"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Switch_1"
  op: "Switch"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_1"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Switch_2"
  op: "Switch"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_2"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Switch_3"
  op: "Switch"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_3"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Switch_4"
  op: "Switch"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_4"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Identity"
  op: "Identity"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Identity_1"
  op: "Identity"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Identity_2"
  op: "Identity"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Identity_3"
  op: "Identity"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Identity_4"
  op: "Identity"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/add/y"
  op: "Const"
  input: "^listener/bilstm_0/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/add"
  op: "Add"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Identity"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Identity_1"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 39
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/GreaterEqual"
  op: "GreaterEqual"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Identity_1"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/GreaterEqual/Enter"
  op: "Enter"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/CheckSeqLen"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/dropout/keep_prob"
  op: "Const"
  input: "^listener/bilstm_0/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/dropout/Shape"
  op: "Shape"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/dropout/random_uniform/min"
  op: "Const"
  input: "^listener/bilstm_0/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/dropout/random_uniform/max"
  op: "Const"
  input: "^listener/bilstm_0/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 39
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/dropout/random_uniform/sub"
  op: "Sub"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/dropout/random_uniform/max"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/dropout/random_uniform/mul"
  op: "Mul"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/dropout/random_uniform/RandomUniform"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 39
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/dropout/random_uniform"
  op: "Add"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/dropout/random_uniform/mul"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 39
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/dropout/add"
  op: "Add"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/dropout/keep_prob"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 39
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/dropout/Floor"
  op: "Floor"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 39
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/dropout/div"
  op: "RealDiv"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 39
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/dropout/mul"
  op: "Mul"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/dropout/div"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 39
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\247\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09400279074907303
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09400279074907303
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Initializer/random_uniform"
  op: "Add"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 167
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Assign"
  op: "Assign"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/read"
  op: "Identity"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias/Assign"
  op: "Assign"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias/read"
  op: "Identity"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Const"
  op: "Const"
  input: "^listener/bilstm_0/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat/axis"
  op: "Const"
  input: "^listener/bilstm_0/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/dropout/mul"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Identity_4"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 167
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter"
  op: "Enter"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter"
  op: "Enter"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Const_1"
  op: "Const"
  input: "^listener/bilstm_0/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/split"
  op: "Split"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Const"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Const_2"
  op: "Const"
  input: "^listener/bilstm_0/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add"
  op: "Add"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/split:2"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul"
  op: "Mul"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Identity_3"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1"
  op: "Mul"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_1"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1"
  op: "Add"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2"
  op: "Mul"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Tanh_1"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select"
  op: "Select"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/GreaterEqual"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select/Enter"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select/Enter"
  op: "Enter"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1"
  op: "Select"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/GreaterEqual"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Identity_3"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_2"
  op: "Select"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/GreaterEqual"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Identity_4"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Identity_1"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/add_1/y"
  op: "Const"
  input: "^listener/bilstm_0/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/add_1"
  op: "Add"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Identity_1"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/NextIteration"
  op: "NextIteration"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/NextIteration_1"
  op: "NextIteration"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/NextIteration_2"
  op: "NextIteration"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/NextIteration_3"
  op: "NextIteration"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/NextIteration_4"
  op: "NextIteration"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Exit"
  op: "Exit"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Exit_1"
  op: "Exit"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Exit_2"
  op: "Exit"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Exit_3"
  op: "Exit"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Exit_4"
  op: "Exit"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArray"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArrayStack/range"
  op: "Range"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArrayStack/range/start"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArraySizeV3"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArray"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArrayStack/range"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/Rank_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/range_1/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/range_1/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/range_1"
  op: "Range"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/range_1/start"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/Rank_1"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/concat_2/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/concat_2"
  op: "ConcatV2"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/concat_2/values_0"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/range_1"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/bw/transpose_1"
  op: "Transpose"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/ReverseSequence"
  op: "ReverseSequence"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/transpose_1"
  input: "IteratorGetNext:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "batch_dim"
    value {
      i: 0
    }
  }
  attr {
    key: "seq_dim"
    value {
      i: 1
    }
  }
}
node {
  name: "listener/bilstm_0/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "listener/bilstm_0/concat"
  op: "ConcatV2"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/transpose_1"
  input: "listener/bilstm_0/ReverseSequence"
  input: "listener/bilstm_0/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/fw_cell/DropoutWrapperInit/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "listener/bilstm_1/fw_cell/DropoutWrapperInit/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/fw_cell/DropoutWrapperInit/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bw_cell/DropoutWrapperInit/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bw_cell/DropoutWrapperInit/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bw_cell/DropoutWrapperInit/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/range"
  op: "Range"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/range/start"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/Rank"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/concat"
  op: "ConcatV2"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/concat/values_0"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/range"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/transpose"
  op: "Transpose"
  input: "listener/bilstm_0/concat"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/sequence_length"
  op: "Identity"
  input: "IteratorGetNext:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/Shape"
  op: "Shape"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/strided_slice"
  op: "StridedSlice"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/Shape"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/strided_slice/stack"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/strided_slice/stack_1"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/strided_slice"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros"
  op: "Fill"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_1"
  op: "ExpandDims"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/strided_slice"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_2"
  op: "ExpandDims"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/strided_slice"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_2"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_2"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat_1"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_3/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_3"
  op: "ExpandDims"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/strided_slice"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_3/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/Shape_1"
  op: "Shape"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/sequence_length"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/stack"
  op: "Pack"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/strided_slice"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/Equal"
  op: "Equal"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/Shape_1"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/All"
  op: "All"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/Equal"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor listener/bilstm_1/bidirectional_rnn/fw/fw/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor listener/bilstm_1/bidirectional_rnn/fw/fw/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/Assert/Assert"
  op: "Assert"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/All"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/Assert/Assert/data_0"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/stack"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/Assert/Assert/data_2"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/Shape_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/CheckSeqLen"
  op: "Identity"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/sequence_length"
  input: "^listener/bilstm_1/bidirectional_rnn/fw/fw/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/Shape_2"
  op: "Shape"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/strided_slice_1"
  op: "StridedSlice"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/Shape_2"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/strided_slice_1/stack"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/strided_slice_1/stack_1"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/Shape_3"
  op: "Shape"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/strided_slice_2"
  op: "StridedSlice"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/Shape_3"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/strided_slice_2/stack"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/strided_slice_2/stack_1"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/ExpandDims"
  op: "ExpandDims"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/strided_slice_2"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/concat_1"
  op: "ConcatV2"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/ExpandDims"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/Const_1"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/zeros"
  op: "Fill"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/concat_1"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/Min"
  op: "Min"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/CheckSeqLen"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/Const_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/Max"
  op: "Max"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/CheckSeqLen"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/time"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArray"
  op: "TensorArrayV3"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/fw/fw/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArray_1"
  op: "TensorArrayV3"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/fw/fw/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/Shape"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_1"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/range"
  op: "Range"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/range/start"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArray_1"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/range"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/transpose"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/Maximum"
  op: "Maximum"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/Maximum/x"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/Max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/Minimum"
  op: "Minimum"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/strided_slice_1"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/iteration_counter"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Enter"
  op: "Enter"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Enter_1"
  op: "Enter"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Enter_2"
  op: "Enter"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Enter_3"
  op: "Enter"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Enter_4"
  op: "Enter"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge"
  op: "Merge"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Enter"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_1"
  op: "Merge"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Enter_1"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_2"
  op: "Merge"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Enter_2"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_3"
  op: "Merge"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Enter_3"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_4"
  op: "Merge"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Enter_4"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/NextIteration_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Less"
  op: "Less"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Less/Enter"
  op: "Enter"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Less_1"
  op: "Less"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_1"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Less_1/Enter"
  op: "Enter"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/LogicalAnd"
  op: "LogicalAnd"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Less"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Less_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/LoopCond"
  op: "LoopCond"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/LogicalAnd"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Switch"
  op: "Switch"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Switch_1"
  op: "Switch"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_1"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Switch_2"
  op: "Switch"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_2"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Switch_3"
  op: "Switch"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_3"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Switch_4"
  op: "Switch"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_4"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Identity"
  op: "Identity"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Identity_1"
  op: "Identity"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Identity_2"
  op: "Identity"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Identity_3"
  op: "Identity"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Identity_4"
  op: "Identity"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/add/y"
  op: "Const"
  input: "^listener/bilstm_1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/add"
  op: "Add"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Identity"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Identity_1"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/GreaterEqual"
  op: "GreaterEqual"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Identity_1"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/GreaterEqual/Enter"
  op: "Enter"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/CheckSeqLen"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/keep_prob"
  op: "Const"
  input: "^listener/bilstm_1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/Shape"
  op: "Shape"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/random_uniform/min"
  op: "Const"
  input: "^listener/bilstm_1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/random_uniform/max"
  op: "Const"
  input: "^listener/bilstm_1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/random_uniform/sub"
  op: "Sub"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/random_uniform/max"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/random_uniform/mul"
  op: "Mul"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/random_uniform/RandomUniform"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/random_uniform"
  op: "Add"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/random_uniform/mul"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/add"
  op: "Add"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/keep_prob"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/Floor"
  op: "Floor"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div"
  op: "RealDiv"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul"
  op: "Mul"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.08183170855045319
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.08183170855045319
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Initializer/random_uniform"
  op: "Add"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Assign"
  op: "Assign"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/read"
  op: "Identity"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias/Assign"
  op: "Assign"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias/read"
  op: "Identity"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Const"
  op: "Const"
  input: "^listener/bilstm_1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat/axis"
  op: "Const"
  input: "^listener/bilstm_1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Identity_4"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter"
  op: "Enter"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter"
  op: "Enter"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Const_1"
  op: "Const"
  input: "^listener/bilstm_1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/split"
  op: "Split"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Const"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Const_2"
  op: "Const"
  input: "^listener/bilstm_1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add"
  op: "Add"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/split:2"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul"
  op: "Mul"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Identity_3"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1"
  op: "Mul"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_1"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1"
  op: "Add"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2"
  op: "Mul"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Tanh_1"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select"
  op: "Select"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/GreaterEqual"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select/Enter"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select/Enter"
  op: "Enter"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1"
  op: "Select"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/GreaterEqual"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Identity_3"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_2"
  op: "Select"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/GreaterEqual"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Identity_4"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Identity_1"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/add_1/y"
  op: "Const"
  input: "^listener/bilstm_1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/add_1"
  op: "Add"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Identity_1"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/NextIteration"
  op: "NextIteration"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/NextIteration_1"
  op: "NextIteration"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/NextIteration_2"
  op: "NextIteration"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/NextIteration_3"
  op: "NextIteration"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/NextIteration_4"
  op: "NextIteration"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Exit"
  op: "Exit"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Exit_1"
  op: "Exit"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Exit_2"
  op: "Exit"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Exit_3"
  op: "Exit"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Exit_4"
  op: "Exit"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArray"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayStack/range"
  op: "Range"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayStack/range/start"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArraySizeV3"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArray"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayStack/range"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/Rank_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/range_1/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/range_1/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/range_1"
  op: "Range"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/range_1/start"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/Rank_1"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/concat_2/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/concat_2"
  op: "ConcatV2"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/concat_2/values_0"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/range_1"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/fw/transpose_1"
  op: "Transpose"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/ReverseSequence"
  op: "ReverseSequence"
  input: "listener/bilstm_0/concat"
  input: "IteratorGetNext:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "batch_dim"
    value {
      i: 0
    }
  }
  attr {
    key: "seq_dim"
    value {
      i: 1
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/range"
  op: "Range"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/range/start"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/Rank"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/concat"
  op: "ConcatV2"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/concat/values_0"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/range"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/transpose"
  op: "Transpose"
  input: "listener/bilstm_1/bidirectional_rnn/bw/ReverseSequence"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/sequence_length"
  op: "Identity"
  input: "IteratorGetNext:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/Shape"
  op: "Shape"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/strided_slice"
  op: "StridedSlice"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/Shape"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/strided_slice/stack"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/strided_slice/stack_1"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/strided_slice"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros"
  op: "Fill"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_1"
  op: "ExpandDims"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/strided_slice"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_2"
  op: "ExpandDims"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/strided_slice"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_2"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_2"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat_1"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_3/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_3"
  op: "ExpandDims"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/strided_slice"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_3/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/Shape_1"
  op: "Shape"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/sequence_length"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/stack"
  op: "Pack"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/strided_slice"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/Equal"
  op: "Equal"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/Shape_1"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/All"
  op: "All"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/Equal"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor listener/bilstm_1/bidirectional_rnn/bw/bw/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor listener/bilstm_1/bidirectional_rnn/bw/bw/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/Assert/Assert"
  op: "Assert"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/All"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/Assert/Assert/data_0"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/stack"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/Assert/Assert/data_2"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/Shape_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/CheckSeqLen"
  op: "Identity"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/sequence_length"
  input: "^listener/bilstm_1/bidirectional_rnn/bw/bw/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/Shape_2"
  op: "Shape"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/strided_slice_1"
  op: "StridedSlice"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/Shape_2"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/strided_slice_1/stack"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/strided_slice_1/stack_1"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/Shape_3"
  op: "Shape"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/strided_slice_2"
  op: "StridedSlice"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/Shape_3"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/strided_slice_2/stack"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/strided_slice_2/stack_1"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/ExpandDims"
  op: "ExpandDims"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/strided_slice_2"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/concat_1"
  op: "ConcatV2"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/ExpandDims"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/Const_1"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/zeros"
  op: "Fill"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/concat_1"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/Min"
  op: "Min"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/CheckSeqLen"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/Const_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/Max"
  op: "Max"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/CheckSeqLen"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/time"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArray"
  op: "TensorArrayV3"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/bw/bw/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArray_1"
  op: "TensorArrayV3"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/bw/bw/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/Shape"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_1"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/range"
  op: "Range"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/range/start"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArray_1"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/range"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/transpose"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/Maximum"
  op: "Maximum"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/Maximum/x"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/Max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/Minimum"
  op: "Minimum"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/strided_slice_1"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/iteration_counter"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Enter"
  op: "Enter"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Enter_1"
  op: "Enter"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Enter_2"
  op: "Enter"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Enter_3"
  op: "Enter"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Enter_4"
  op: "Enter"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge"
  op: "Merge"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Enter"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_1"
  op: "Merge"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Enter_1"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_2"
  op: "Merge"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Enter_2"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_3"
  op: "Merge"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Enter_3"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_4"
  op: "Merge"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Enter_4"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/NextIteration_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Less"
  op: "Less"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Less/Enter"
  op: "Enter"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Less_1"
  op: "Less"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_1"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Less_1/Enter"
  op: "Enter"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/LogicalAnd"
  op: "LogicalAnd"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Less"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Less_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/LoopCond"
  op: "LoopCond"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/LogicalAnd"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Switch"
  op: "Switch"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Switch_1"
  op: "Switch"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_1"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Switch_2"
  op: "Switch"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_2"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Switch_3"
  op: "Switch"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_3"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Switch_4"
  op: "Switch"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_4"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Identity"
  op: "Identity"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Identity_1"
  op: "Identity"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Identity_2"
  op: "Identity"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Identity_3"
  op: "Identity"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Identity_4"
  op: "Identity"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/add/y"
  op: "Const"
  input: "^listener/bilstm_1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/add"
  op: "Add"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Identity"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Identity_1"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/GreaterEqual"
  op: "GreaterEqual"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Identity_1"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/GreaterEqual/Enter"
  op: "Enter"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/CheckSeqLen"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/keep_prob"
  op: "Const"
  input: "^listener/bilstm_1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/Shape"
  op: "Shape"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/random_uniform/min"
  op: "Const"
  input: "^listener/bilstm_1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/random_uniform/max"
  op: "Const"
  input: "^listener/bilstm_1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/random_uniform/sub"
  op: "Sub"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/random_uniform/max"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/random_uniform/mul"
  op: "Mul"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/random_uniform/RandomUniform"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/random_uniform"
  op: "Add"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/random_uniform/mul"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/add"
  op: "Add"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/keep_prob"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/Floor"
  op: "Floor"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div"
  op: "RealDiv"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul"
  op: "Mul"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.08183170855045319
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.08183170855045319
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Initializer/random_uniform"
  op: "Add"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Assign"
  op: "Assign"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/read"
  op: "Identity"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias/Assign"
  op: "Assign"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias/read"
  op: "Identity"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Const"
  op: "Const"
  input: "^listener/bilstm_1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat/axis"
  op: "Const"
  input: "^listener/bilstm_1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Identity_4"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter"
  op: "Enter"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter"
  op: "Enter"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Const_1"
  op: "Const"
  input: "^listener/bilstm_1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/split"
  op: "Split"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Const"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Const_2"
  op: "Const"
  input: "^listener/bilstm_1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add"
  op: "Add"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/split:2"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul"
  op: "Mul"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Identity_3"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1"
  op: "Mul"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_1"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1"
  op: "Add"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2"
  op: "Mul"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Tanh_1"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select"
  op: "Select"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/GreaterEqual"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select/Enter"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select/Enter"
  op: "Enter"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1"
  op: "Select"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/GreaterEqual"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Identity_3"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_2"
  op: "Select"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/GreaterEqual"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Identity_4"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Identity_1"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/add_1/y"
  op: "Const"
  input: "^listener/bilstm_1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/add_1"
  op: "Add"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Identity_1"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/NextIteration"
  op: "NextIteration"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/NextIteration_1"
  op: "NextIteration"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/NextIteration_2"
  op: "NextIteration"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/NextIteration_3"
  op: "NextIteration"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/NextIteration_4"
  op: "NextIteration"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Exit"
  op: "Exit"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Exit_1"
  op: "Exit"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Exit_2"
  op: "Exit"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Exit_3"
  op: "Exit"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Exit_4"
  op: "Exit"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArray"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayStack/range"
  op: "Range"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayStack/range/start"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArraySizeV3"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArray"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayStack/range"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/Rank_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/range_1/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/range_1/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/range_1"
  op: "Range"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/range_1/start"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/Rank_1"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/concat_2/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/concat_2"
  op: "ConcatV2"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/concat_2/values_0"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/range_1"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/bw/transpose_1"
  op: "Transpose"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/ReverseSequence"
  op: "ReverseSequence"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/transpose_1"
  input: "IteratorGetNext:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "batch_dim"
    value {
      i: 0
    }
  }
  attr {
    key: "seq_dim"
    value {
      i: 1
    }
  }
}
node {
  name: "listener/bilstm_1/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "listener/bilstm_1/concat"
  op: "ConcatV2"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/transpose_1"
  input: "listener/bilstm_1/ReverseSequence"
  input: "listener/bilstm_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/Shape"
  op: "Shape"
  input: "listener/bilstm_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_1/strided_slice"
  op: "StridedSlice"
  input: "listener/bilstm_1/Shape"
  input: "listener/bilstm_1/strided_slice/stack"
  input: "listener/bilstm_1/strided_slice/stack_1"
  input: "listener/bilstm_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "listener/bilstm_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "listener/bilstm_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_1/strided_slice_1"
  op: "StridedSlice"
  input: "listener/bilstm_1/Shape"
  input: "listener/bilstm_1/strided_slice_1/stack"
  input: "listener/bilstm_1/strided_slice_1/stack_1"
  input: "listener/bilstm_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "listener/bilstm_1/FloorMod/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "listener/bilstm_1/FloorMod"
  op: "FloorMod"
  input: "listener/bilstm_1/strided_slice_1"
  input: "listener/bilstm_1/FloorMod/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/Pad/paddings/1/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/Pad/paddings/1"
  op: "Pack"
  input: "listener/bilstm_1/Pad/paddings/1/0"
  input: "listener/bilstm_1/FloorMod"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "listener/bilstm_1/Pad/paddings/0_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "listener/bilstm_1/Pad/paddings/2_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "listener/bilstm_1/Pad/paddings"
  op: "Pack"
  input: "listener/bilstm_1/Pad/paddings/0_1"
  input: "listener/bilstm_1/Pad/paddings/1"
  input: "listener/bilstm_1/Pad/paddings/2_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "listener/bilstm_1/Pad"
  op: "Pad"
  input: "listener/bilstm_1/concat"
  input: "listener/bilstm_1/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "listener/bilstm_1/Reshape/shape/2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "listener/bilstm_1/Reshape/shape"
  op: "Pack"
  input: "listener/bilstm_1/strided_slice"
  input: "listener/bilstm_1/Reshape/shape/1"
  input: "listener/bilstm_1/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "listener/bilstm_1/Reshape"
  op: "Reshape"
  input: "listener/bilstm_1/Pad"
  input: "listener/bilstm_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/floordiv/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "listener/bilstm_1/floordiv"
  op: "FloorDiv"
  input: "IteratorGetNext:1"
  input: "listener/bilstm_1/floordiv/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/FloorMod_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "listener/bilstm_1/FloorMod_1"
  op: "FloorMod"
  input: "IteratorGetNext:1"
  input: "listener/bilstm_1/FloorMod_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/add"
  op: "Add"
  input: "listener/bilstm_1/floordiv"
  input: "listener/bilstm_1/FloorMod_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/fw_cell/DropoutWrapperInit/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "listener/bilstm_2/fw_cell/DropoutWrapperInit/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/fw_cell/DropoutWrapperInit/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bw_cell/DropoutWrapperInit/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bw_cell/DropoutWrapperInit/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bw_cell/DropoutWrapperInit/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/range"
  op: "Range"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/range/start"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/Rank"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/concat"
  op: "ConcatV2"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/concat/values_0"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/range"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/transpose"
  op: "Transpose"
  input: "listener/bilstm_1/Reshape"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/sequence_length"
  op: "Identity"
  input: "listener/bilstm_1/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/Shape"
  op: "Shape"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/strided_slice"
  op: "StridedSlice"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/Shape"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/strided_slice/stack"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/strided_slice/stack_1"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/strided_slice"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros"
  op: "Fill"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_1"
  op: "ExpandDims"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/strided_slice"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_2"
  op: "ExpandDims"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/strided_slice"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_2"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_2"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat_1"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_3/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_3"
  op: "ExpandDims"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/strided_slice"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_3/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/Shape_1"
  op: "Shape"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/sequence_length"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/stack"
  op: "Pack"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/strided_slice"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/Equal"
  op: "Equal"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/Shape_1"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/All"
  op: "All"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/Equal"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor listener/bilstm_2/bidirectional_rnn/fw/fw/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor listener/bilstm_2/bidirectional_rnn/fw/fw/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/Assert/Assert"
  op: "Assert"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/All"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/Assert/Assert/data_0"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/stack"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/Assert/Assert/data_2"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/Shape_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/CheckSeqLen"
  op: "Identity"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/sequence_length"
  input: "^listener/bilstm_2/bidirectional_rnn/fw/fw/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/Shape_2"
  op: "Shape"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/strided_slice_1"
  op: "StridedSlice"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/Shape_2"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/strided_slice_1/stack"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/strided_slice_1/stack_1"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/Shape_3"
  op: "Shape"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/strided_slice_2"
  op: "StridedSlice"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/Shape_3"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/strided_slice_2/stack"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/strided_slice_2/stack_1"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/ExpandDims"
  op: "ExpandDims"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/strided_slice_2"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/concat_1"
  op: "ConcatV2"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/ExpandDims"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/Const_1"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/zeros"
  op: "Fill"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/concat_1"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/Min"
  op: "Min"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/CheckSeqLen"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/Const_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/Max"
  op: "Max"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/CheckSeqLen"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/time"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArray"
  op: "TensorArrayV3"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/fw/fw/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArray_1"
  op: "TensorArrayV3"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/fw/fw/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayUnstack/Shape"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_1"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayUnstack/range"
  op: "Range"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayUnstack/range/start"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArray_1"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayUnstack/range"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/transpose"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/Maximum"
  op: "Maximum"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/Maximum/x"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/Max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/Minimum"
  op: "Minimum"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/strided_slice_1"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/iteration_counter"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Enter"
  op: "Enter"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Enter_1"
  op: "Enter"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Enter_2"
  op: "Enter"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Enter_3"
  op: "Enter"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Enter_4"
  op: "Enter"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge"
  op: "Merge"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Enter"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_1"
  op: "Merge"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Enter_1"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_2"
  op: "Merge"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Enter_2"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_3"
  op: "Merge"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Enter_3"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_4"
  op: "Merge"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Enter_4"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/NextIteration_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Less"
  op: "Less"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Less/Enter"
  op: "Enter"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Less_1"
  op: "Less"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_1"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Less_1/Enter"
  op: "Enter"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/LogicalAnd"
  op: "LogicalAnd"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Less"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Less_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/LoopCond"
  op: "LoopCond"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/LogicalAnd"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Switch"
  op: "Switch"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Switch_1"
  op: "Switch"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_1"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Switch_2"
  op: "Switch"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_2"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Switch_3"
  op: "Switch"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_3"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Switch_4"
  op: "Switch"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_4"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Identity"
  op: "Identity"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Identity_1"
  op: "Identity"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Identity_2"
  op: "Identity"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Identity_3"
  op: "Identity"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Identity_4"
  op: "Identity"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/add/y"
  op: "Const"
  input: "^listener/bilstm_2/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/add"
  op: "Add"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Identity"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Identity_1"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/GreaterEqual"
  op: "GreaterEqual"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Identity_1"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/GreaterEqual/Enter"
  op: "Enter"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/CheckSeqLen"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/keep_prob"
  op: "Const"
  input: "^listener/bilstm_2/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/Shape"
  op: "Shape"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/random_uniform/min"
  op: "Const"
  input: "^listener/bilstm_2/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/random_uniform/max"
  op: "Const"
  input: "^listener/bilstm_2/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/random_uniform/sub"
  op: "Sub"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/random_uniform/max"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/random_uniform/mul"
  op: "Mul"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/random_uniform/RandomUniform"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/random_uniform"
  op: "Add"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/random_uniform/mul"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/add"
  op: "Add"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/keep_prob"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/Floor"
  op: "Floor"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div"
  op: "RealDiv"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul"
  op: "Mul"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07216878235340118
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07216878235340118
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Initializer/random_uniform"
  op: "Add"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 640
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Assign"
  op: "Assign"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/read"
  op: "Identity"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias/Assign"
  op: "Assign"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias/read"
  op: "Identity"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Const"
  op: "Const"
  input: "^listener/bilstm_2/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat/axis"
  op: "Const"
  input: "^listener/bilstm_2/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Identity_4"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 640
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter"
  op: "Enter"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter"
  op: "Enter"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Const_1"
  op: "Const"
  input: "^listener/bilstm_2/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/split"
  op: "Split"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Const"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Const_2"
  op: "Const"
  input: "^listener/bilstm_2/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add"
  op: "Add"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/split:2"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul"
  op: "Mul"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Identity_3"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1"
  op: "Mul"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_1"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1"
  op: "Add"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2"
  op: "Mul"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Tanh_1"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select"
  op: "Select"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/GreaterEqual"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select/Enter"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select/Enter"
  op: "Enter"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1"
  op: "Select"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/GreaterEqual"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Identity_3"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_2"
  op: "Select"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/GreaterEqual"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Identity_4"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Identity_1"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/add_1/y"
  op: "Const"
  input: "^listener/bilstm_2/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/add_1"
  op: "Add"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Identity_1"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/NextIteration"
  op: "NextIteration"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/NextIteration_1"
  op: "NextIteration"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/NextIteration_2"
  op: "NextIteration"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/NextIteration_3"
  op: "NextIteration"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/NextIteration_4"
  op: "NextIteration"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Exit"
  op: "Exit"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Exit_1"
  op: "Exit"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Exit_2"
  op: "Exit"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Exit_3"
  op: "Exit"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Exit_4"
  op: "Exit"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArray"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayStack/range"
  op: "Range"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayStack/range/start"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArraySizeV3"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArray"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayStack/range"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/Rank_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/range_1/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/range_1/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/range_1"
  op: "Range"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/range_1/start"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/Rank_1"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/concat_2/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/concat_2"
  op: "ConcatV2"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/concat_2/values_0"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/range_1"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/fw/transpose_1"
  op: "Transpose"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/ReverseSequence"
  op: "ReverseSequence"
  input: "listener/bilstm_1/Reshape"
  input: "listener/bilstm_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "batch_dim"
    value {
      i: 0
    }
  }
  attr {
    key: "seq_dim"
    value {
      i: 1
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/range"
  op: "Range"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/range/start"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/Rank"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/concat"
  op: "ConcatV2"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/concat/values_0"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/range"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/transpose"
  op: "Transpose"
  input: "listener/bilstm_2/bidirectional_rnn/bw/ReverseSequence"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/sequence_length"
  op: "Identity"
  input: "listener/bilstm_1/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/Shape"
  op: "Shape"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/strided_slice"
  op: "StridedSlice"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/Shape"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/strided_slice/stack"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/strided_slice/stack_1"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/strided_slice"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros"
  op: "Fill"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_1"
  op: "ExpandDims"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/strided_slice"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_2"
  op: "ExpandDims"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/strided_slice"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_2"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_2"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat_1"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_3/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_3"
  op: "ExpandDims"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/strided_slice"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_3/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/Shape_1"
  op: "Shape"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/sequence_length"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/stack"
  op: "Pack"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/strided_slice"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/Equal"
  op: "Equal"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/Shape_1"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/All"
  op: "All"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/Equal"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor listener/bilstm_2/bidirectional_rnn/bw/bw/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor listener/bilstm_2/bidirectional_rnn/bw/bw/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/Assert/Assert"
  op: "Assert"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/All"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/Assert/Assert/data_0"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/stack"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/Assert/Assert/data_2"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/Shape_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/CheckSeqLen"
  op: "Identity"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/sequence_length"
  input: "^listener/bilstm_2/bidirectional_rnn/bw/bw/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/Shape_2"
  op: "Shape"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/strided_slice_1"
  op: "StridedSlice"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/Shape_2"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/strided_slice_1/stack"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/strided_slice_1/stack_1"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/Shape_3"
  op: "Shape"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/strided_slice_2"
  op: "StridedSlice"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/Shape_3"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/strided_slice_2/stack"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/strided_slice_2/stack_1"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/ExpandDims"
  op: "ExpandDims"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/strided_slice_2"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/concat_1"
  op: "ConcatV2"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/ExpandDims"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/Const_1"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/zeros"
  op: "Fill"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/concat_1"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/Min"
  op: "Min"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/CheckSeqLen"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/Const_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/Max"
  op: "Max"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/CheckSeqLen"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/time"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArray"
  op: "TensorArrayV3"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/bw/bw/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArray_1"
  op: "TensorArrayV3"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/bw/bw/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayUnstack/Shape"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_1"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayUnstack/range"
  op: "Range"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayUnstack/range/start"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArray_1"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayUnstack/range"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/transpose"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/Maximum"
  op: "Maximum"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/Maximum/x"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/Max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/Minimum"
  op: "Minimum"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/strided_slice_1"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/iteration_counter"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Enter"
  op: "Enter"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Enter_1"
  op: "Enter"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Enter_2"
  op: "Enter"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Enter_3"
  op: "Enter"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Enter_4"
  op: "Enter"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge"
  op: "Merge"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Enter"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_1"
  op: "Merge"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Enter_1"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_2"
  op: "Merge"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Enter_2"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_3"
  op: "Merge"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Enter_3"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_4"
  op: "Merge"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Enter_4"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/NextIteration_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Less"
  op: "Less"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Less/Enter"
  op: "Enter"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Less_1"
  op: "Less"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_1"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Less_1/Enter"
  op: "Enter"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/LogicalAnd"
  op: "LogicalAnd"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Less"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Less_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/LoopCond"
  op: "LoopCond"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/LogicalAnd"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Switch"
  op: "Switch"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Switch_1"
  op: "Switch"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_1"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Switch_2"
  op: "Switch"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_2"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Switch_3"
  op: "Switch"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_3"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Switch_4"
  op: "Switch"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_4"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Identity"
  op: "Identity"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Identity_1"
  op: "Identity"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Identity_2"
  op: "Identity"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Identity_3"
  op: "Identity"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Identity_4"
  op: "Identity"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/add/y"
  op: "Const"
  input: "^listener/bilstm_2/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/add"
  op: "Add"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Identity"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Identity_1"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/GreaterEqual"
  op: "GreaterEqual"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Identity_1"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/GreaterEqual/Enter"
  op: "Enter"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/CheckSeqLen"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/keep_prob"
  op: "Const"
  input: "^listener/bilstm_2/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/Shape"
  op: "Shape"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/random_uniform/min"
  op: "Const"
  input: "^listener/bilstm_2/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/random_uniform/max"
  op: "Const"
  input: "^listener/bilstm_2/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/random_uniform/sub"
  op: "Sub"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/random_uniform/max"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/random_uniform/mul"
  op: "Mul"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/random_uniform/RandomUniform"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/random_uniform"
  op: "Add"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/random_uniform/mul"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/add"
  op: "Add"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/keep_prob"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/Floor"
  op: "Floor"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div"
  op: "RealDiv"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul"
  op: "Mul"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07216878235340118
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07216878235340118
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Initializer/random_uniform"
  op: "Add"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 640
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Assign"
  op: "Assign"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/read"
  op: "Identity"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias/Assign"
  op: "Assign"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias/read"
  op: "Identity"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Const"
  op: "Const"
  input: "^listener/bilstm_2/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat/axis"
  op: "Const"
  input: "^listener/bilstm_2/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Identity_4"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 640
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter"
  op: "Enter"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter"
  op: "Enter"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Const_1"
  op: "Const"
  input: "^listener/bilstm_2/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/split"
  op: "Split"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Const"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Const_2"
  op: "Const"
  input: "^listener/bilstm_2/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add"
  op: "Add"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/split:2"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul"
  op: "Mul"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Identity_3"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1"
  op: "Mul"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_1"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1"
  op: "Add"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2"
  op: "Mul"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Tanh_1"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select"
  op: "Select"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/GreaterEqual"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select/Enter"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select/Enter"
  op: "Enter"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1"
  op: "Select"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/GreaterEqual"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Identity_3"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_2"
  op: "Select"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/GreaterEqual"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Identity_4"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Identity_1"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/add_1/y"
  op: "Const"
  input: "^listener/bilstm_2/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/add_1"
  op: "Add"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Identity_1"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/NextIteration"
  op: "NextIteration"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/NextIteration_1"
  op: "NextIteration"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/NextIteration_2"
  op: "NextIteration"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/NextIteration_3"
  op: "NextIteration"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/NextIteration_4"
  op: "NextIteration"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Exit"
  op: "Exit"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Exit_1"
  op: "Exit"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Exit_2"
  op: "Exit"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Exit_3"
  op: "Exit"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Exit_4"
  op: "Exit"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArray"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayStack/range"
  op: "Range"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayStack/range/start"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArraySizeV3"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArray"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayStack/range"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/Rank_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/range_1/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/range_1/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/range_1"
  op: "Range"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/range_1/start"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/Rank_1"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/concat_2/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/concat_2"
  op: "ConcatV2"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/concat_2/values_0"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/range_1"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/bw/transpose_1"
  op: "Transpose"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/ReverseSequence"
  op: "ReverseSequence"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/transpose_1"
  input: "listener/bilstm_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "batch_dim"
    value {
      i: 0
    }
  }
  attr {
    key: "seq_dim"
    value {
      i: 1
    }
  }
}
node {
  name: "listener/bilstm_2/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "listener/bilstm_2/concat"
  op: "ConcatV2"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/transpose_1"
  input: "listener/bilstm_2/ReverseSequence"
  input: "listener/bilstm_2/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/Shape"
  op: "Shape"
  input: "listener/bilstm_2/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_2/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_2/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_2/strided_slice"
  op: "StridedSlice"
  input: "listener/bilstm_2/Shape"
  input: "listener/bilstm_2/strided_slice/stack"
  input: "listener/bilstm_2/strided_slice/stack_1"
  input: "listener/bilstm_2/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "listener/bilstm_2/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_2/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "listener/bilstm_2/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "listener/bilstm_2/strided_slice_1"
  op: "StridedSlice"
  input: "listener/bilstm_2/Shape"
  input: "listener/bilstm_2/strided_slice_1/stack"
  input: "listener/bilstm_2/strided_slice_1/stack_1"
  input: "listener/bilstm_2/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "listener/bilstm_2/FloorMod/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "listener/bilstm_2/FloorMod"
  op: "FloorMod"
  input: "listener/bilstm_2/strided_slice_1"
  input: "listener/bilstm_2/FloorMod/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/Pad/paddings/1/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/Pad/paddings/1"
  op: "Pack"
  input: "listener/bilstm_2/Pad/paddings/1/0"
  input: "listener/bilstm_2/FloorMod"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "listener/bilstm_2/Pad/paddings/0_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "listener/bilstm_2/Pad/paddings/2_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "listener/bilstm_2/Pad/paddings"
  op: "Pack"
  input: "listener/bilstm_2/Pad/paddings/0_1"
  input: "listener/bilstm_2/Pad/paddings/1"
  input: "listener/bilstm_2/Pad/paddings/2_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "listener/bilstm_2/Pad"
  op: "Pad"
  input: "listener/bilstm_2/concat"
  input: "listener/bilstm_2/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "listener/bilstm_2/Reshape/shape/2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "listener/bilstm_2/Reshape/shape"
  op: "Pack"
  input: "listener/bilstm_2/strided_slice"
  input: "listener/bilstm_2/Reshape/shape/1"
  input: "listener/bilstm_2/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "listener/bilstm_2/Reshape"
  op: "Reshape"
  input: "listener/bilstm_2/Pad"
  input: "listener/bilstm_2/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/floordiv/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "listener/bilstm_2/floordiv"
  op: "FloorDiv"
  input: "listener/bilstm_1/add"
  input: "listener/bilstm_2/floordiv/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/FloorMod_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "listener/bilstm_2/FloorMod_1"
  op: "FloorMod"
  input: "listener/bilstm_1/add"
  input: "listener/bilstm_2/FloorMod_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/add"
  op: "Add"
  input: "listener/bilstm_2/floordiv"
  input: "listener/bilstm_2/FloorMod_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/Shape"
  op: "Shape"
  input: "listener/bilstm_2/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "speller/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/strided_slice"
  op: "StridedSlice"
  input: "speller/Shape"
  input: "speller/strided_slice/stack"
  input: "speller/strided_slice/stack_1"
  input: "speller/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "speller/LuongAttention/Shape"
  op: "Shape"
  input: "listener/bilstm_2/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "speller/LuongAttention/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/LuongAttention/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "speller/LuongAttention/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/LuongAttention/strided_slice"
  op: "StridedSlice"
  input: "speller/LuongAttention/Shape"
  input: "speller/LuongAttention/strided_slice/stack"
  input: "speller/LuongAttention/strided_slice/stack_1"
  input: "speller/LuongAttention/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "speller/LuongAttention/SequenceMask/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/LuongAttention/SequenceMask/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/LuongAttention/SequenceMask/Range"
  op: "Range"
  input: "speller/LuongAttention/SequenceMask/Const"
  input: "speller/LuongAttention/strided_slice"
  input: "speller/LuongAttention/SequenceMask/Const_1"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/LuongAttention/SequenceMask/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "speller/LuongAttention/SequenceMask/ExpandDims"
  op: "ExpandDims"
  input: "listener/bilstm_2/add"
  input: "speller/LuongAttention/SequenceMask/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "speller/LuongAttention/SequenceMask/Cast"
  op: "Cast"
  input: "speller/LuongAttention/SequenceMask/ExpandDims"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "speller/LuongAttention/SequenceMask/Less"
  op: "Less"
  input: "speller/LuongAttention/SequenceMask/Range"
  input: "speller/LuongAttention/SequenceMask/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/LuongAttention/SequenceMask/Cast_1"
  op: "Cast"
  input: "speller/LuongAttention/SequenceMask/Less"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/LuongAttention/Shape_1"
  op: "Shape"
  input: "listener/bilstm_2/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "speller/LuongAttention/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/LuongAttention/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/LuongAttention/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/LuongAttention/strided_slice_1"
  op: "StridedSlice"
  input: "speller/LuongAttention/Shape_1"
  input: "speller/LuongAttention/strided_slice_1/stack"
  input: "speller/LuongAttention/strided_slice_1/stack_1"
  input: "speller/LuongAttention/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "speller/LuongAttention/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/LuongAttention/ones/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/LuongAttention/ones"
  op: "Fill"
  input: "speller/LuongAttention/ones/shape_as_tensor"
  input: "speller/LuongAttention/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "speller/LuongAttention/Shape_2"
  op: "Shape"
  input: "listener/bilstm_2/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "speller/LuongAttention/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/LuongAttention/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/LuongAttention/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/LuongAttention/strided_slice_2"
  op: "StridedSlice"
  input: "speller/LuongAttention/Shape_2"
  input: "speller/LuongAttention/strided_slice_2/stack"
  input: "speller/LuongAttention/strided_slice_2/stack_1"
  input: "speller/LuongAttention/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "speller/LuongAttention/assert_equal/Equal"
  op: "Equal"
  input: "speller/LuongAttention/strided_slice_1"
  input: "speller/LuongAttention/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/LuongAttention/assert_equal/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "speller/LuongAttention/assert_equal/All"
  op: "All"
  input: "speller/LuongAttention/assert_equal/Equal"
  input: "speller/LuongAttention/assert_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "speller/LuongAttention/assert_equal/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "memory_sequence_length and memory tensor batch sizes do not match."
      }
    }
  }
}
node {
  name: "speller/LuongAttention/assert_equal/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x == y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "speller/LuongAttention/assert_equal/Assert/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (speller/LuongAttention/strided_slice_1:0) = "
      }
    }
  }
}
node {
  name: "speller/LuongAttention/assert_equal/Assert/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (speller/LuongAttention/strided_slice_2:0) = "
      }
    }
  }
}
node {
  name: "speller/LuongAttention/assert_equal/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "memory_sequence_length and memory tensor batch sizes do not match."
      }
    }
  }
}
node {
  name: "speller/LuongAttention/assert_equal/Assert/Assert/data_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x == y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "speller/LuongAttention/assert_equal/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (speller/LuongAttention/strided_slice_1:0) = "
      }
    }
  }
}
node {
  name: "speller/LuongAttention/assert_equal/Assert/Assert/data_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (speller/LuongAttention/strided_slice_2:0) = "
      }
    }
  }
}
node {
  name: "speller/LuongAttention/assert_equal/Assert/Assert"
  op: "Assert"
  input: "speller/LuongAttention/assert_equal/All"
  input: "speller/LuongAttention/assert_equal/Assert/Assert/data_0"
  input: "speller/LuongAttention/assert_equal/Assert/Assert/data_1"
  input: "speller/LuongAttention/assert_equal/Assert/Assert/data_2"
  input: "speller/LuongAttention/strided_slice_1"
  input: "speller/LuongAttention/assert_equal/Assert/Assert/data_4"
  input: "speller/LuongAttention/strided_slice_2"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "speller/LuongAttention/Shape_3"
  op: "Shape"
  input: "speller/LuongAttention/SequenceMask/Cast_1"
  input: "^speller/LuongAttention/assert_equal/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "speller/LuongAttention/concat/axis"
  op: "Const"
  input: "^speller/LuongAttention/assert_equal/Assert/Assert"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/LuongAttention/concat"
  op: "ConcatV2"
  input: "speller/LuongAttention/Shape_3"
  input: "speller/LuongAttention/ones"
  input: "speller/LuongAttention/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "speller/LuongAttention/Reshape"
  op: "Reshape"
  input: "speller/LuongAttention/SequenceMask/Cast_1"
  input: "speller/LuongAttention/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "speller/LuongAttention/mul"
  op: "Mul"
  input: "listener/bilstm_2/Reshape"
  input: "speller/LuongAttention/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "speller/memory_layer/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/memory_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "speller/memory_layer/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/memory_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09682458639144897
      }
    }
  }
}
node {
  name: "speller/memory_layer/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/memory_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09682458639144897
      }
    }
  }
}
node {
  name: "speller/memory_layer/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "speller/memory_layer/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/memory_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "speller/memory_layer/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "speller/memory_layer/kernel/Initializer/random_uniform/max"
  input: "speller/memory_layer/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/memory_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/memory_layer/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "speller/memory_layer/kernel/Initializer/random_uniform/RandomUniform"
  input: "speller/memory_layer/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/memory_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "speller/memory_layer/kernel/Initializer/random_uniform"
  op: "Add"
  input: "speller/memory_layer/kernel/Initializer/random_uniform/mul"
  input: "speller/memory_layer/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/memory_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "speller/memory_layer/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/memory_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "speller/memory_layer/kernel/Assign"
  op: "Assign"
  input: "speller/memory_layer/kernel"
  input: "speller/memory_layer/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/memory_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "speller/memory_layer/kernel/read"
  op: "Identity"
  input: "speller/memory_layer/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/memory_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "speller/LuongAttention/memory_layer/Tensordot/axes"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "speller/LuongAttention/memory_layer/Tensordot/free"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "speller/LuongAttention/memory_layer/Tensordot/Shape"
  op: "Shape"
  input: "speller/LuongAttention/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "speller/LuongAttention/memory_layer/Tensordot/GatherV2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/LuongAttention/memory_layer/Tensordot/GatherV2"
  op: "GatherV2"
  input: "speller/LuongAttention/memory_layer/Tensordot/Shape"
  input: "speller/LuongAttention/memory_layer/Tensordot/free"
  input: "speller/LuongAttention/memory_layer/Tensordot/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "speller/LuongAttention/memory_layer/Tensordot/GatherV2_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/LuongAttention/memory_layer/Tensordot/GatherV2_1"
  op: "GatherV2"
  input: "speller/LuongAttention/memory_layer/Tensordot/Shape"
  input: "speller/LuongAttention/memory_layer/Tensordot/axes"
  input: "speller/LuongAttention/memory_layer/Tensordot/GatherV2_1/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "speller/LuongAttention/memory_layer/Tensordot/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/LuongAttention/memory_layer/Tensordot/Prod"
  op: "Prod"
  input: "speller/LuongAttention/memory_layer/Tensordot/GatherV2"
  input: "speller/LuongAttention/memory_layer/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "speller/LuongAttention/memory_layer/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/LuongAttention/memory_layer/Tensordot/Prod_1"
  op: "Prod"
  input: "speller/LuongAttention/memory_layer/Tensordot/GatherV2_1"
  input: "speller/LuongAttention/memory_layer/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "speller/LuongAttention/memory_layer/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/LuongAttention/memory_layer/Tensordot/concat"
  op: "ConcatV2"
  input: "speller/LuongAttention/memory_layer/Tensordot/free"
  input: "speller/LuongAttention/memory_layer/Tensordot/axes"
  input: "speller/LuongAttention/memory_layer/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "speller/LuongAttention/memory_layer/Tensordot/stack"
  op: "Pack"
  input: "speller/LuongAttention/memory_layer/Tensordot/Prod"
  input: "speller/LuongAttention/memory_layer/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "speller/LuongAttention/memory_layer/Tensordot/transpose"
  op: "Transpose"
  input: "speller/LuongAttention/mul"
  input: "speller/LuongAttention/memory_layer/Tensordot/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "speller/LuongAttention/memory_layer/Tensordot/Reshape"
  op: "Reshape"
  input: "speller/LuongAttention/memory_layer/Tensordot/transpose"
  input: "speller/LuongAttention/memory_layer/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/LuongAttention/memory_layer/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "speller/LuongAttention/memory_layer/Tensordot/transpose_1"
  op: "Transpose"
  input: "speller/memory_layer/kernel/read"
  input: "speller/LuongAttention/memory_layer/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "speller/LuongAttention/memory_layer/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "speller/LuongAttention/memory_layer/Tensordot/Reshape_1"
  op: "Reshape"
  input: "speller/LuongAttention/memory_layer/Tensordot/transpose_1"
  input: "speller/LuongAttention/memory_layer/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "speller/LuongAttention/memory_layer/Tensordot/MatMul"
  op: "MatMul"
  input: "speller/LuongAttention/memory_layer/Tensordot/Reshape"
  input: "speller/LuongAttention/memory_layer/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "speller/LuongAttention/memory_layer/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "speller/LuongAttention/memory_layer/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/LuongAttention/memory_layer/Tensordot/concat_1"
  op: "ConcatV2"
  input: "speller/LuongAttention/memory_layer/Tensordot/GatherV2"
  input: "speller/LuongAttention/memory_layer/Tensordot/Const_2"
  input: "speller/LuongAttention/memory_layer/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "speller/LuongAttention/memory_layer/Tensordot"
  op: "Reshape"
  input: "speller/LuongAttention/memory_layer/Tensordot/MatMul"
  input: "speller/LuongAttention/memory_layer/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "speller/LuongAttention/Shape_4"
  op: "Shape"
  input: "speller/LuongAttention/memory_layer/Tensordot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "speller/LuongAttention/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/LuongAttention/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/LuongAttention/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/LuongAttention/strided_slice_3"
  op: "StridedSlice"
  input: "speller/LuongAttention/Shape_4"
  input: "speller/LuongAttention/strided_slice_3/stack"
  input: "speller/LuongAttention/strided_slice_3/stack_1"
  input: "speller/LuongAttention/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "speller/LuongAttention/Shape_5"
  op: "Shape"
  input: "speller/LuongAttention/memory_layer/Tensordot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "speller/LuongAttention/strided_slice_4/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/LuongAttention/strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "speller/LuongAttention/strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/LuongAttention/strided_slice_4"
  op: "StridedSlice"
  input: "speller/LuongAttention/Shape_5"
  input: "speller/LuongAttention/strided_slice_4/stack"
  input: "speller/LuongAttention/strided_slice_4/stack_1"
  input: "speller/LuongAttention/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "speller/decoder_cell_/DropoutWrapperInit/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "speller/decoder_cell_/DropoutWrapperInit/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "speller/decoder_cell_/DropoutWrapperInit/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "speller/strided_slice"
  input: "speller/AttentionWrapperZeroState/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "speller/AttentionWrapperZeroState/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims"
  input: "speller/AttentionWrapperZeroState/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const"
  input: "speller/AttentionWrapperZeroState/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros"
  op: "Fill"
  input: "speller/AttentionWrapperZeroState/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat"
  input: "speller/AttentionWrapperZeroState/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_1"
  op: "ExpandDims"
  input: "speller/strided_slice"
  input: "speller/AttentionWrapperZeroState/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_2"
  op: "ExpandDims"
  input: "speller/strided_slice"
  input: "speller/AttentionWrapperZeroState/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "speller/AttentionWrapperZeroState/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_2"
  input: "speller/AttentionWrapperZeroState/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_2"
  input: "speller/AttentionWrapperZeroState/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "speller/AttentionWrapperZeroState/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat_1"
  input: "speller/AttentionWrapperZeroState/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_3/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_3"
  op: "ExpandDims"
  input: "speller/strided_slice"
  input: "speller/AttentionWrapperZeroState/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_3/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/assert_equal/Equal"
  op: "Equal"
  input: "speller/strided_slice"
  input: "speller/LuongAttention/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/assert_equal/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/assert_equal/All"
  op: "All"
  input: "speller/AttentionWrapperZeroState/assert_equal/Equal"
  input: "speller/AttentionWrapperZeroState/assert_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/assert_equal/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "When calling zero_state of AttentionWrapper attention_wrapper: Non-matching batch sizes between the memory (encoder output) and the requested batch size.  Are you using the BeamSearchDecoder?  If so, make sure your encoder output has been tiled to beam_width via tf.contrib.seq2seq.tile_batch, and the batch_size= argument passed to zero_state is batch_size * beam_width."
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/assert_equal/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x == y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/assert_equal/Assert/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (speller/strided_slice:0) = "
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/assert_equal/Assert/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (speller/LuongAttention/strided_slice_3:0) = "
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/assert_equal/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "When calling zero_state of AttentionWrapper attention_wrapper: Non-matching batch sizes between the memory (encoder output) and the requested batch size.  Are you using the BeamSearchDecoder?  If so, make sure your encoder output has been tiled to beam_width via tf.contrib.seq2seq.tile_batch, and the batch_size= argument passed to zero_state is batch_size * beam_width."
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/assert_equal/Assert/Assert/data_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x == y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/assert_equal/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (speller/strided_slice:0) = "
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/assert_equal/Assert/Assert/data_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (speller/LuongAttention/strided_slice_3:0) = "
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/assert_equal/Assert/Assert"
  op: "Assert"
  input: "speller/AttentionWrapperZeroState/assert_equal/All"
  input: "speller/AttentionWrapperZeroState/assert_equal/Assert/Assert/data_0"
  input: "speller/AttentionWrapperZeroState/assert_equal/Assert/Assert/data_1"
  input: "speller/AttentionWrapperZeroState/assert_equal/Assert/Assert/data_2"
  input: "speller/strided_slice"
  input: "speller/AttentionWrapperZeroState/assert_equal/Assert/Assert/data_4"
  input: "speller/LuongAttention/strided_slice_3"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/checked_cell_state"
  op: "Identity"
  input: "speller/AttentionWrapperZeroState/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros"
  input: "^speller/AttentionWrapperZeroState/assert_equal/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/checked_cell_state_1"
  op: "Identity"
  input: "speller/AttentionWrapperZeroState/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros_1"
  input: "^speller/AttentionWrapperZeroState/assert_equal/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/ExpandDims"
  op: "ExpandDims"
  input: "speller/strided_slice"
  input: "speller/AttentionWrapperZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/ExpandDims_1"
  op: "ExpandDims"
  input: "speller/LuongAttention/strided_slice_4"
  input: "speller/AttentionWrapperZeroState/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/concat"
  op: "ConcatV2"
  input: "speller/AttentionWrapperZeroState/ExpandDims"
  input: "speller/AttentionWrapperZeroState/ExpandDims_1"
  input: "speller/AttentionWrapperZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/zeros"
  op: "Fill"
  input: "speller/AttentionWrapperZeroState/concat"
  input: "speller/AttentionWrapperZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/ExpandDims_2"
  op: "ExpandDims"
  input: "speller/strided_slice"
  input: "speller/AttentionWrapperZeroState/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/ExpandDims_3/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/ExpandDims_3"
  op: "ExpandDims"
  input: "speller/LuongAttention/strided_slice_4"
  input: "speller/AttentionWrapperZeroState/ExpandDims_3/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/zeros_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/ExpandDims_4/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/ExpandDims_4"
  op: "ExpandDims"
  input: "speller/strided_slice"
  input: "speller/AttentionWrapperZeroState/ExpandDims_4/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/concat_1"
  op: "ConcatV2"
  input: "speller/AttentionWrapperZeroState/ExpandDims_4"
  input: "speller/AttentionWrapperZeroState/Const"
  input: "speller/AttentionWrapperZeroState/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/zeros_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/zeros_2"
  op: "Fill"
  input: "speller/AttentionWrapperZeroState/concat_1"
  input: "speller/AttentionWrapperZeroState/zeros_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/ExpandDims_5/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/ExpandDims_5"
  op: "ExpandDims"
  input: "speller/strided_slice"
  input: "speller/AttentionWrapperZeroState/ExpandDims_5/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/ExpandDims_6/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/ExpandDims_6"
  op: "ExpandDims"
  input: "speller/strided_slice"
  input: "speller/AttentionWrapperZeroState/ExpandDims_6/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/ExpandDims_7/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/ExpandDims_7"
  op: "ExpandDims"
  input: "speller/LuongAttention/strided_slice_4"
  input: "speller/AttentionWrapperZeroState/ExpandDims_7/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/concat_2"
  op: "ConcatV2"
  input: "speller/AttentionWrapperZeroState/ExpandDims_6"
  input: "speller/AttentionWrapperZeroState/ExpandDims_7"
  input: "speller/AttentionWrapperZeroState/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/zeros_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/zeros_3"
  op: "Fill"
  input: "speller/AttentionWrapperZeroState/concat_2"
  input: "speller/AttentionWrapperZeroState/zeros_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/ExpandDims_8/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/ExpandDims_8"
  op: "ExpandDims"
  input: "speller/strided_slice"
  input: "speller/AttentionWrapperZeroState/ExpandDims_8/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/ExpandDims_9/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/AttentionWrapperZeroState/ExpandDims_9"
  op: "ExpandDims"
  input: "speller/LuongAttention/strided_slice_4"
  input: "speller/AttentionWrapperZeroState/ExpandDims_9/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "speller/one_hot/on_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "speller/one_hot/off_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "speller/one_hot/depth"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5585
      }
    }
  }
}
node {
  name: "speller/one_hot"
  op: "OneHot"
  input: "IteratorGetNext:3"
  input: "speller/one_hot/depth"
  input: "speller/one_hot/on_value"
  input: "speller/one_hot/off_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "speller/ScheduledEmbeddingSamplingWrapper/sampling_probability"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/range"
  op: "Range"
  input: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/range/start"
  input: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/Rank"
  input: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/concat"
  op: "ConcatV2"
  input: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/concat/values_0"
  input: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/range"
  input: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/transpose"
  op: "Transpose"
  input: "speller/one_hot"
  input: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
}
node {
  name: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/Shape"
  op: "Shape"
  input: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/strided_slice"
  op: "StridedSlice"
  input: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/Shape"
  input: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/strided_slice/stack"
  input: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/strided_slice/stack_1"
  input: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/TensorArray"
  op: "TensorArrayV3"
  input: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 5585
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/TensorArrayUnstack/Shape"
  input: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/TensorArrayUnstack/strided_slice/stack"
  input: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/TensorArrayUnstack/strided_slice/stack_1"
  input: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/TensorArrayUnstack/range"
  op: "Range"
  input: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/TensorArrayUnstack/range/start"
  input: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/TensorArrayUnstack/strided_slice"
  input: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/TensorArray"
  input: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/TensorArrayUnstack/range"
  input: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/transpose"
  input: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/strided_slice_1"
  op: "StridedSlice"
  input: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/transpose"
  input: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/strided_slice_1/stack"
  input: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/strided_slice_1/stack_1"
  input: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/zeros_like"
  op: "ZerosLike"
  input: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
}
node {
  name: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/Size"
  op: "Size"
  input: "IteratorGetNext:2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "speller/decoder/TrainingHelperInitialize/Equal/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/decoder/TrainingHelperInitialize/Equal"
  op: "Equal"
  input: "speller/decoder/TrainingHelperInitialize/Equal/x"
  input: "IteratorGetNext:2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/TrainingHelperInitialize/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/decoder/TrainingHelperInitialize/All"
  op: "All"
  input: "speller/decoder/TrainingHelperInitialize/Equal"
  input: "speller/decoder/TrainingHelperInitialize/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "speller/decoder/TrainingHelperInitialize/cond/Switch"
  op: "Switch"
  input: "speller/decoder/TrainingHelperInitialize/All"
  input: "speller/decoder/TrainingHelperInitialize/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/TrainingHelperInitialize/cond/switch_t"
  op: "Identity"
  input: "speller/decoder/TrainingHelperInitialize/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/TrainingHelperInitialize/cond/switch_f"
  op: "Identity"
  input: "speller/decoder/TrainingHelperInitialize/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/TrainingHelperInitialize/cond/pred_id"
  op: "Identity"
  input: "speller/decoder/TrainingHelperInitialize/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/TrainingHelperInitialize/cond/Switch_1"
  op: "Switch"
  input: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/zeros_like"
  input: "speller/decoder/TrainingHelperInitialize/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/zeros_like"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5585
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/TrainingHelperInitialize/cond/TensorArrayReadV3/index"
  op: "Const"
  input: "^speller/decoder/TrainingHelperInitialize/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/decoder/TrainingHelperInitialize/cond/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "speller/decoder/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch"
  input: "speller/decoder/TrainingHelperInitialize/cond/TensorArrayReadV3/index"
  input: "speller/decoder/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "speller/decoder/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch"
  op: "Switch"
  input: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/TensorArray"
  input: "speller/decoder/TrainingHelperInitialize/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch_1"
  op: "Switch"
  input: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  input: "speller/decoder/TrainingHelperInitialize/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/TrainingHelperInitialize/cond/Merge"
  op: "Merge"
  input: "speller/decoder/TrainingHelperInitialize/cond/TensorArrayReadV3"
  input: "speller/decoder/TrainingHelperInitialize/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5585
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/decoder/ExpandDims"
  op: "ExpandDims"
  input: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/Size"
  input: "speller/decoder/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 5585
      }
    }
  }
}
node {
  name: "speller/decoder/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/decoder/concat"
  op: "ConcatV2"
  input: "speller/decoder/ExpandDims"
  input: "speller/decoder/Const"
  input: "speller/decoder/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "speller/decoder/zeros"
  op: "Fill"
  input: "speller/decoder/concat"
  input: "speller/decoder/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "speller/decoder/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/decoder/ExpandDims_1"
  op: "ExpandDims"
  input: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/Size"
  input: "speller/decoder/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 5585
      }
    }
  }
}
node {
  name: "speller/decoder/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/decoder/ExpandDims_2"
  op: "ExpandDims"
  input: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/Size"
  input: "speller/decoder/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/decoder/concat_1"
  op: "ConcatV2"
  input: "speller/decoder/ExpandDims_2"
  input: "speller/decoder/Const_2"
  input: "speller/decoder/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/decoder/zeros_1"
  op: "Fill"
  input: "speller/decoder/concat_1"
  input: "speller/decoder/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "speller/decoder/ExpandDims_3/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/decoder/ExpandDims_3"
  op: "ExpandDims"
  input: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/Size"
  input: "speller/decoder/ExpandDims_3/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/zeros_like/Shape"
  op: "Shape"
  input: "speller/decoder/TrainingHelperInitialize/Equal"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "speller/decoder/zeros_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/decoder/zeros_like"
  op: "Fill"
  input: "speller/decoder/zeros_like/Shape"
  input: "speller/decoder/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "speller/decoder/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/decoder/TensorArray/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/decoder/TensorArray"
  op: "TensorArrayV3"
  input: "speller/decoder/TensorArray/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: true
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 5585
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "speller/decoder/TensorArray_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/decoder/TensorArray_1"
  op: "TensorArrayV3"
  input: "speller/decoder/TensorArray_1/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: true
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "speller/decoder/while/Enter"
  op: "Enter"
  input: "speller/decoder/Const_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "speller/decoder/while/Enter_1"
  op: "Enter"
  input: "speller/decoder/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "speller/decoder/while/Enter_2"
  op: "Enter"
  input: "speller/decoder/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "speller/decoder/while/Enter_3"
  op: "Enter"
  input: "speller/AttentionWrapperZeroState/checked_cell_state"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "speller/decoder/while/Enter_4"
  op: "Enter"
  input: "speller/AttentionWrapperZeroState/checked_cell_state_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "speller/decoder/while/Enter_5"
  op: "Enter"
  input: "speller/AttentionWrapperZeroState/zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "speller/decoder/while/Enter_6"
  op: "Enter"
  input: "speller/AttentionWrapperZeroState/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "speller/decoder/while/Enter_7"
  op: "Enter"
  input: "speller/AttentionWrapperZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "speller/decoder/while/Enter_8"
  op: "Enter"
  input: "speller/AttentionWrapperZeroState/zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "speller/decoder/while/Enter_9"
  op: "Enter"
  input: "speller/decoder/TrainingHelperInitialize/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "speller/decoder/while/Enter_10"
  op: "Enter"
  input: "speller/decoder/TrainingHelperInitialize/Equal"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "speller/decoder/while/Enter_11"
  op: "Enter"
  input: "speller/decoder/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "speller/decoder/while/Merge"
  op: "Merge"
  input: "speller/decoder/while/Enter"
  input: "speller/decoder/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Merge_1"
  op: "Merge"
  input: "speller/decoder/while/Enter_1"
  input: "speller/decoder/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Merge_2"
  op: "Merge"
  input: "speller/decoder/while/Enter_2"
  input: "speller/decoder/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Merge_3"
  op: "Merge"
  input: "speller/decoder/while/Enter_3"
  input: "speller/decoder/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Merge_4"
  op: "Merge"
  input: "speller/decoder/while/Enter_4"
  input: "speller/decoder/while/NextIteration_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Merge_5"
  op: "Merge"
  input: "speller/decoder/while/Enter_5"
  input: "speller/decoder/while/NextIteration_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Merge_6"
  op: "Merge"
  input: "speller/decoder/while/Enter_6"
  input: "speller/decoder/while/NextIteration_6"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Merge_7"
  op: "Merge"
  input: "speller/decoder/while/Enter_7"
  input: "speller/decoder/while/NextIteration_7"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Merge_8"
  op: "Merge"
  input: "speller/decoder/while/Enter_8"
  input: "speller/decoder/while/NextIteration_8"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Merge_9"
  op: "Merge"
  input: "speller/decoder/while/Enter_9"
  input: "speller/decoder/while/NextIteration_9"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5585
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Merge_10"
  op: "Merge"
  input: "speller/decoder/while/Enter_10"
  input: "speller/decoder/while/NextIteration_10"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Merge_11"
  op: "Merge"
  input: "speller/decoder/while/Enter_11"
  input: "speller/decoder/while/NextIteration_11"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Const"
  op: "Const"
  input: "^speller/decoder/while/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/decoder/while/All"
  op: "All"
  input: "speller/decoder/while/Merge_10"
  input: "speller/decoder/while/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "speller/decoder/while/LogicalNot"
  op: "LogicalNot"
  input: "speller/decoder/while/All"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/LoopCond"
  op: "LoopCond"
  input: "speller/decoder/while/LogicalNot"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Switch"
  op: "Switch"
  input: "speller/decoder/while/Merge"
  input: "speller/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Switch_1"
  op: "Switch"
  input: "speller/decoder/while/Merge_1"
  input: "speller/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Switch_2"
  op: "Switch"
  input: "speller/decoder/while/Merge_2"
  input: "speller/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Switch_3"
  op: "Switch"
  input: "speller/decoder/while/Merge_3"
  input: "speller/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Switch_4"
  op: "Switch"
  input: "speller/decoder/while/Merge_4"
  input: "speller/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/Merge_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Switch_5"
  op: "Switch"
  input: "speller/decoder/while/Merge_5"
  input: "speller/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/Merge_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Switch_6"
  op: "Switch"
  input: "speller/decoder/while/Merge_6"
  input: "speller/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/Merge_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Switch_7"
  op: "Switch"
  input: "speller/decoder/while/Merge_7"
  input: "speller/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/Merge_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Switch_8"
  op: "Switch"
  input: "speller/decoder/while/Merge_8"
  input: "speller/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/Merge_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Switch_9"
  op: "Switch"
  input: "speller/decoder/while/Merge_9"
  input: "speller/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/Merge_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5585
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Switch_10"
  op: "Switch"
  input: "speller/decoder/while/Merge_10"
  input: "speller/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/Merge_10"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Switch_11"
  op: "Switch"
  input: "speller/decoder/while/Merge_11"
  input: "speller/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/Merge_11"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Identity"
  op: "Identity"
  input: "speller/decoder/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Identity_1"
  op: "Identity"
  input: "speller/decoder/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Identity_2"
  op: "Identity"
  input: "speller/decoder/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Identity_3"
  op: "Identity"
  input: "speller/decoder/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Identity_4"
  op: "Identity"
  input: "speller/decoder/while/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Identity_5"
  op: "Identity"
  input: "speller/decoder/while/Switch_5:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Identity_6"
  op: "Identity"
  input: "speller/decoder/while/Switch_6:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Identity_7"
  op: "Identity"
  input: "speller/decoder/while/Switch_7:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Identity_8"
  op: "Identity"
  input: "speller/decoder/while/Switch_8:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Identity_9"
  op: "Identity"
  input: "speller/decoder/while/Switch_9:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Identity_10"
  op: "Identity"
  input: "speller/decoder/while/Switch_10:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Identity_11"
  op: "Identity"
  input: "speller/decoder/while/Switch_11:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat/axis"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat"
  op: "ConcatV2"
  input: "speller/decoder/while/Identity_9"
  input: "speller/decoder/while/Identity_5"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6097
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/keep_prob"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/Shape"
  op: "Shape"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/random_uniform/min"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/random_uniform/max"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6097
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/random_uniform/sub"
  op: "Sub"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/random_uniform/max"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/random_uniform/mul"
  op: "Mul"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/random_uniform/RandomUniform"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6097
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/random_uniform"
  op: "Add"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/random_uniform/mul"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6097
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/add"
  op: "Add"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/keep_prob"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6097
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/Floor"
  op: "Floor"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6097
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div"
  op: "RealDiv"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6097
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul"
  op: "Mul"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6097
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "Q\030\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.02984299138188362
      }
    }
  }
}
node {
  name: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02984299138188362
      }
    }
  }
}
node {
  name: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6225
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6225
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform"
  op: "Add"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6225
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6225
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6225
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Assign"
  op: "Assign"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6225
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/read"
  op: "Identity"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6225
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Assign"
  op: "Assign"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/read"
  op: "Identity"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Const"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat/axis"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul"
  input: "speller/decoder/while/Identity_4"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6225
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul/Enter"
  op: "Enter"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6225
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd/Enter"
  op: "Enter"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Const_1"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Const"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Const_2"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add"
  op: "Add"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split:2"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul"
  op: "Mul"
  input: "speller/decoder/while/Identity_3"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1"
  op: "Mul"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1"
  op: "Add"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2"
  op: "Mul"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_1"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Shape"
  op: "Shape"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/strided_slice/stack"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/strided_slice/stack_1"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/strided_slice/stack_2"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/strided_slice"
  op: "StridedSlice"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Shape"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/strided_slice/stack"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/strided_slice/stack_1"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_equal/Equal"
  op: "Equal"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/strided_slice"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_equal/Equal/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_equal/Equal/Enter"
  op: "Enter"
  input: "speller/LuongAttention/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_equal/Const"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_equal/All"
  op: "All"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_equal/Equal"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_equal/Assert/Const"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "When applying AttentionWrapper attention_wrapper_1: Non-matching batch sizes between the memory (encoder output) and the query (decoder output).  Are you using the BeamSearchDecoder?  You may need to tile your memory input via the tf.contrib.seq2seq.tile_batch function with argument multiple=beam_width."
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_equal/Assert/Const_1"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x == y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_equal/Assert/Const_2"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/strided_slice:0) = "
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_equal/Assert/Const_3"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (speller/LuongAttention/strided_slice_3:0) = "
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_equal/Assert/Assert/data_0"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "When applying AttentionWrapper attention_wrapper_1: Non-matching batch sizes between the memory (encoder output) and the query (decoder output).  Are you using the BeamSearchDecoder?  You may need to tile your memory input via the tf.contrib.seq2seq.tile_batch function with argument multiple=beam_width."
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_equal/Assert/Assert/data_1"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x == y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_equal/Assert/Assert/data_2"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/strided_slice:0) = "
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_equal/Assert/Assert/data_4"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (speller/LuongAttention/strided_slice_3:0) = "
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_equal/Assert/Assert"
  op: "Assert"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_equal/All"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_equal/Assert/Assert/data_0"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_equal/Assert/Assert/data_1"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_equal/Assert/Assert/data_2"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/strided_slice"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_equal/Assert/Assert/data_4"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_equal/Equal/Enter"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/checked_cell_output"
  op: "Identity"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2"
  input: "^speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_equal/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims/dim"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims"
  op: "ExpandDims"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/checked_cell_output"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul"
  op: "BatchMatMul"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter"
  op: "Enter"
  input: "speller/LuongAttention/memory_layer/Tensordot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze"
  op: "Squeeze"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/Const"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Less"
  op: "Less"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/Const"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Less/Enter"
  op: "Enter"
  input: "listener/bilstm_2/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Const"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/All"
  op: "All"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Less"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Assert/Const"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "All values in memory_sequence_length must greater than zero."
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Assert/Const_1"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x > 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Assert/Const_2"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (listener/bilstm_2/add:0) = "
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Assert/Assert/data_0"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "All values in memory_sequence_length must greater than zero."
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Assert/Assert/data_1"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x > 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Assert/Assert/data_2"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (listener/bilstm_2/add:0) = "
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Assert/Assert"
  op: "Assert"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/All"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Assert/Assert/data_0"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Assert/Assert/data_1"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Assert/Assert/data_2"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Less/Enter"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Shape_1"
  op: "Shape"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze"
  input: "^speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/strided_slice_1/stack"
  op: "Const"
  input: "^speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Assert/Assert"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/strided_slice_1/stack_1"
  op: "Const"
  input: "^speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Assert/Assert"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/strided_slice_1/stack_2"
  op: "Const"
  input: "^speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Assert/Assert"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/strided_slice_1"
  op: "StridedSlice"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Shape_1"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/strided_slice_1/stack"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/strided_slice_1/stack_1"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/SequenceMask/Const"
  op: "Const"
  input: "^speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Assert/Assert"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/SequenceMask/Const_1"
  op: "Const"
  input: "^speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Assert/Assert"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/SequenceMask/Range"
  op: "Range"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/SequenceMask/Const"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/strided_slice_1"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/SequenceMask/Const_1"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/SequenceMask/ExpandDims/dim"
  op: "Const"
  input: "^speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Assert/Assert"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/SequenceMask/ExpandDims"
  op: "ExpandDims"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Less/Enter"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/SequenceMask/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/SequenceMask/Cast"
  op: "Cast"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/SequenceMask/ExpandDims"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/SequenceMask/Less"
  op: "Less"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/SequenceMask/Range"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/SequenceMask/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/ones_like/Shape"
  op: "Shape"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze"
  input: "^speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/ones_like/Const"
  op: "Const"
  input: "^speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Assert/Assert"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/ones_like"
  op: "Fill"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/ones_like/Shape"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/mul/x"
  op: "Const"
  input: "^speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/assert_positive/assert_less/Assert/Assert"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -inf
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/mul"
  op: "Mul"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/mul/x"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Select"
  op: "Select"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/SequenceMask/Less"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Softmax"
  op: "Softmax"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims/dim"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims"
  op: "ExpandDims"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Softmax"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul"
  op: "BatchMatMul"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter"
  op: "Enter"
  input: "speller/LuongAttention/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze"
  op: "Squeeze"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_1/concat_dim"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_1"
  op: "Identity"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/add/y"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/add"
  op: "Add"
  input: "speller/decoder/while/Identity_6"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/projection_layer/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\321\025\000\000"
      }
    }
  }
}
node {
  name: "speller/decoder/projection_layer/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.031370218843221664
      }
    }
  }
}
node {
  name: "speller/decoder/projection_layer/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.031370218843221664
      }
    }
  }
}
node {
  name: "speller/decoder/projection_layer/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "speller/decoder/projection_layer/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "speller/decoder/projection_layer/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "speller/decoder/projection_layer/kernel/Initializer/random_uniform/max"
  input: "speller/decoder/projection_layer/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/projection_layer/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "speller/decoder/projection_layer/kernel/Initializer/random_uniform/RandomUniform"
  input: "speller/decoder/projection_layer/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/projection_layer/kernel/Initializer/random_uniform"
  op: "Add"
  input: "speller/decoder/projection_layer/kernel/Initializer/random_uniform/mul"
  input: "speller/decoder/projection_layer/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/projection_layer/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 5585
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "speller/decoder/projection_layer/kernel/Assign"
  op: "Assign"
  input: "speller/decoder/projection_layer/kernel"
  input: "speller/decoder/projection_layer/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "speller/decoder/projection_layer/kernel/read"
  op: "Identity"
  input: "speller/decoder/projection_layer/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/projection_layer/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 5585
      }
    }
  }
}
node {
  name: "speller/decoder/projection_layer/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "speller/decoder/projection_layer/bias/Initializer/zeros"
  op: "Fill"
  input: "speller/decoder/projection_layer/bias/Initializer/zeros/shape_as_tensor"
  input: "speller/decoder/projection_layer/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "speller/decoder/projection_layer/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5585
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "speller/decoder/projection_layer/bias/Assign"
  op: "Assign"
  input: "speller/decoder/projection_layer/bias"
  input: "speller/decoder/projection_layer/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "speller/decoder/projection_layer/bias/read"
  op: "Identity"
  input: "speller/decoder/projection_layer/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5585
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/projection_layer/MatMul"
  op: "MatMul"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_1"
  input: "speller/decoder/while/BasicDecoderStep/projection_layer/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/projection_layer/MatMul/Enter"
  op: "Enter"
  input: "speller/decoder/projection_layer/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/projection_layer/BiasAdd"
  op: "BiasAdd"
  input: "speller/decoder/while/BasicDecoderStep/projection_layer/MatMul"
  input: "speller/decoder/while/BasicDecoderStep/projection_layer/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/projection_layer/BiasAdd/Enter"
  op: "Enter"
  input: "speller/decoder/projection_layer/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/logits/Log"
  op: "Log"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/logits/Log/Enter"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/logits/Log/Enter"
  op: "Enter"
  input: "speller/ScheduledEmbeddingSamplingWrapper/sampling_probability"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/logits/mul/x"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/logits/mul"
  op: "Mul"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/logits/mul/x"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/logits/Log/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/logits/Log1p"
  op: "Log1p"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/logits/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/logits/sub"
  op: "Sub"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/logits/Log"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/logits/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/Const"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/Prod"
  op: "Prod"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/Prod/Enter"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/Prod/Enter"
  op: "Enter"
  input: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/Reshape/shape"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/Reshape"
  op: "Reshape"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/Prod/Enter"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/batch_shape_tensor/batch_shape"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/concat/values_0"
  op: "Pack"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/Prod"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/concat/axis"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/concat"
  op: "ConcatV2"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/concat/values_0"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/batch_shape_tensor/batch_shape"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/random_uniform/min"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/random_uniform/max"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/random_uniform/sub"
  op: "Sub"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/random_uniform/max"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/random_uniform/mul"
  op: "Mul"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/random_uniform/RandomUniform"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/random_uniform"
  op: "Add"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/random_uniform/mul"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/Less"
  op: "Less"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/random_uniform"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/logits/Log/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/Shape"
  op: "Shape"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/Less"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/strided_slice/stack"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/strided_slice/stack_1"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/strided_slice/stack_2"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/strided_slice"
  op: "StridedSlice"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/Shape"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/strided_slice/stack"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/strided_slice/stack_1"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/concat_1/axis"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/concat_1"
  op: "ConcatV2"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/Reshape"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/strided_slice"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/Reshape_1"
  op: "Reshape"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/Less"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/concat_1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/probs"
  op: "Softmax"
  input: "speller/decoder/while/BasicDecoderStep/projection_layer/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/batch_rank"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/logits_shape"
  op: "Shape"
  input: "speller/decoder/while/BasicDecoderStep/projection_layer/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/event_size"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5585
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/batch_shape/strided_slice/stack"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/batch_shape/strided_slice/stack_1"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/batch_shape/strided_slice/stack_2"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/batch_shape/strided_slice"
  op: "StridedSlice"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/logits_shape"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/batch_shape/strided_slice/stack"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/batch_shape/strided_slice/stack_1"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/batch_shape/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/sample/sample_shape"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/sample/multinomial/Multinomial/num_samples"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/sample/multinomial/Multinomial"
  op: "Multinomial"
  input: "speller/decoder/while/BasicDecoderStep/projection_layer/BiasAdd"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/sample/multinomial/Multinomial/num_samples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "output_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/sample/transpose/Rank"
  op: "Rank"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/sample/multinomial/Multinomial"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/sample/transpose/sub/y"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/sample/transpose/sub"
  op: "Sub"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/sample/transpose/Rank"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/sample/transpose/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/sample/transpose/Range/start"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/sample/transpose/Range/delta"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/sample/transpose/Range"
  op: "Range"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/sample/transpose/Range/start"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/sample/transpose/Rank"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/sample/transpose/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/sample/transpose/sub_1"
  op: "Sub"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/sample/transpose/sub"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/sample/transpose/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/sample/transpose"
  op: "Transpose"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/sample/multinomial/Multinomial"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/sample/transpose/sub_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/batch_shape_tensor/Identity"
  op: "Identity"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/batch_shape/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/sample/concat/values_0"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/sample/concat/axis"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/sample/concat"
  op: "ConcatV2"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/sample/concat/values_0"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/batch_shape_tensor/Identity"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/sample/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/sample/Reshape"
  op: "Reshape"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/sample/transpose"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/sample/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/sample/Shape"
  op: "Shape"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/sample/Reshape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/sample/strided_slice/stack"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/sample/strided_slice/stack_1"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/sample/strided_slice/stack_2"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/sample/strided_slice"
  op: "StridedSlice"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/sample/Shape"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/sample/strided_slice/stack"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/sample/strided_slice/stack_1"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/sample/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/sample/concat_1/axis"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/sample/concat_1"
  op: "ConcatV2"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/sample/sample_shape"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/sample/strided_slice"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/sample/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/sample/Reshape_1"
  op: "Reshape"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/sample/Reshape"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/sample/concat_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Fill/dims"
  op: "Pack"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/Prod/Enter"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Fill/value"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Fill"
  op: "Fill"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Fill/dims"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Select"
  op: "Select"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Bernoulli/sample/Reshape_1"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Categorical/sample/Reshape_1"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Fill"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/add/y"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/add"
  op: "Add"
  input: "speller/decoder/while/Identity"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/GreaterEqual"
  op: "GreaterEqual"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/add"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/GreaterEqual/Enter"
  op: "Enter"
  input: "IteratorGetNext:2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/Const"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/All"
  op: "All"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/GreaterEqual"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/cond/Switch"
  op: "Switch"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/All"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/cond/switch_t"
  op: "Identity"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/cond/switch_f"
  op: "Identity"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/cond/pred_id"
  op: "Identity"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/cond/Enter"
  op: "Enter"
  input: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/cond/Switch_1"
  op: "Switch"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/cond/Enter"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/cond/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5585
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch_1"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch"
  op: "Switch"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch_1"
  op: "Switch"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/add"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "speller/ScheduledEmbeddingSamplingWrapper/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch_2"
  op: "Switch"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/cond/Merge"
  op: "Merge"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5585
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/Const"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/All"
  op: "All"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/GreaterEqual"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/Switch"
  op: "Switch"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/All"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/switch_t"
  op: "Identity"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/switch_f"
  op: "Identity"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/pred_id"
  op: "Identity"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/Switch_1"
  op: "Switch"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/cond/Merge"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/cond/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5585
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/Greater/y"
  op: "Const"
  input: "^speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/Greater"
  op: "Greater"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/Greater/Switch"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/Greater/Switch"
  op: "Switch"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Select"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/Where"
  op: "Where"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/Greater"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/Cast"
  op: "Cast"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/Where"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/LessEqual/y"
  op: "Const"
  input: "^speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/LessEqual"
  op: "LessEqual"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/Greater/Switch"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/LessEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/Where_1"
  op: "Where"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/Cast_1"
  op: "Cast"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/Where_1"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/GatherNd"
  op: "GatherNd"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/Greater/Switch"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/Cast"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/GatherNd_1"
  op: "GatherNd"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/GatherNd_1/Switch"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/Cast_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/GatherNd_1/Switch"
  op: "Switch"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/cond/Merge"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/cond/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5585
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/one_hot/on_value"
  op: "Const"
  input: "^speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/one_hot/off_value"
  op: "Const"
  input: "^speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/one_hot/depth"
  op: "Const"
  input: "^speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5585
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/one_hot"
  op: "OneHot"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/GatherNd"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/one_hot/depth"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/one_hot/on_value"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/one_hot/off_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/Shape"
  op: "Shape"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/GatherNd_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/ScatterNd"
  op: "ScatterNd"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/Cast"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/one_hot"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/ScatterNd_1"
  op: "ScatterNd"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/Cast_1"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/GatherNd_1"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/add"
  op: "Add"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/ScatterNd"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/ScatterNd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/Merge"
  op: "Merge"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/add"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5585
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/LogicalOr"
  op: "LogicalOr"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/TrainingHelperNextInputs/GreaterEqual"
  input: "speller/decoder/while/Identity_10"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/LogicalNot_1"
  op: "LogicalNot"
  input: "speller/decoder/while/Identity_10"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Shape"
  op: "Shape"
  input: "speller/decoder/while/Identity_11"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "speller/decoder/while/add/y"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/decoder/while/add"
  op: "Add"
  input: "speller/decoder/while/Identity"
  input: "speller/decoder/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Fill"
  op: "Fill"
  input: "speller/decoder/while/Shape"
  input: "speller/decoder/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "speller/decoder/while/Select"
  op: "Select"
  input: "speller/decoder/while/LogicalNot_1"
  input: "speller/decoder/while/Fill"
  input: "speller/decoder/while/Identity_11"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "speller/decoder/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "speller/decoder/while/Identity"
  input: "speller/decoder/while/BasicDecoderStep/projection_layer/BiasAdd"
  input: "speller/decoder/while/Identity_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/BasicDecoderStep/projection_layer/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "speller/decoder/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/BasicDecoderStep/projection_layer/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "speller/decoder/while/TensorArrayWrite_1/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "speller/decoder/while/TensorArrayWrite_1/TensorArrayWriteV3/Enter"
  input: "speller/decoder/while/Identity"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Select"
  input: "speller/decoder/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/TensorArrayWrite_1/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "speller/decoder/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperSample/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "speller/decoder/while/add_1/y"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/decoder/while/add_1"
  op: "Add"
  input: "speller/decoder/while/Identity"
  input: "speller/decoder/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/NextIteration"
  op: "NextIteration"
  input: "speller/decoder/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/NextIteration_1"
  op: "NextIteration"
  input: "speller/decoder/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/NextIteration_2"
  op: "NextIteration"
  input: "speller/decoder/while/TensorArrayWrite_1/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/NextIteration_3"
  op: "NextIteration"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/NextIteration_4"
  op: "NextIteration"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/NextIteration_5"
  op: "NextIteration"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/NextIteration_6"
  op: "NextIteration"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/NextIteration_7"
  op: "NextIteration"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/NextIteration_8"
  op: "NextIteration"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/NextIteration_9"
  op: "NextIteration"
  input: "speller/decoder/while/BasicDecoderStep/ScheduledEmbeddingTrainingHelperNextInputs/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/NextIteration_10"
  op: "NextIteration"
  input: "speller/decoder/while/LogicalOr"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/NextIteration_11"
  op: "NextIteration"
  input: "speller/decoder/while/Select"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Exit"
  op: "Exit"
  input: "speller/decoder/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Exit_1"
  op: "Exit"
  input: "speller/decoder/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Exit_2"
  op: "Exit"
  input: "speller/decoder/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Exit_3"
  op: "Exit"
  input: "speller/decoder/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Exit_4"
  op: "Exit"
  input: "speller/decoder/while/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Exit_5"
  op: "Exit"
  input: "speller/decoder/while/Switch_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Exit_6"
  op: "Exit"
  input: "speller/decoder/while/Switch_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Exit_7"
  op: "Exit"
  input: "speller/decoder/while/Switch_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Exit_8"
  op: "Exit"
  input: "speller/decoder/while/Switch_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Exit_9"
  op: "Exit"
  input: "speller/decoder/while/Switch_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Exit_10"
  op: "Exit"
  input: "speller/decoder/while/Switch_10"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/while/Exit_11"
  op: "Exit"
  input: "speller/decoder/while/Switch_11"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "speller/decoder/TensorArray"
  input: "speller/decoder/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/decoder/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/decoder/TensorArrayStack/range"
  op: "Range"
  input: "speller/decoder/TensorArrayStack/range/start"
  input: "speller/decoder/TensorArrayStack/TensorArraySizeV3"
  input: "speller/decoder/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "speller/decoder/TensorArray"
  input: "speller/decoder/TensorArrayStack/range"
  input: "speller/decoder/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 5585
        }
      }
    }
  }
}
node {
  name: "speller/decoder/TensorArrayStack_1/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "speller/decoder/TensorArray_1"
  input: "speller/decoder/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "speller/decoder/TensorArrayStack_1/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/decoder/TensorArrayStack_1/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/decoder/TensorArrayStack_1/range"
  op: "Range"
  input: "speller/decoder/TensorArrayStack_1/range/start"
  input: "speller/decoder/TensorArrayStack_1/TensorArraySizeV3"
  input: "speller/decoder/TensorArrayStack_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/TensorArrayStack_1/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "speller/decoder/TensorArray_1"
  input: "speller/decoder/TensorArrayStack_1/range"
  input: "speller/decoder/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "speller/decoder/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "speller/decoder/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "speller/decoder/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/decoder/range"
  op: "Range"
  input: "speller/decoder/range/start"
  input: "speller/decoder/Rank"
  input: "speller/decoder/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/concat_2/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "speller/decoder/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/decoder/concat_2"
  op: "ConcatV2"
  input: "speller/decoder/concat_2/values_0"
  input: "speller/decoder/range"
  input: "speller/decoder/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/transpose"
  op: "Transpose"
  input: "speller/decoder/TensorArrayStack/TensorArrayGatherV3"
  input: "speller/decoder/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/Rank_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "speller/decoder/range_1/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "speller/decoder/range_1/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "speller/decoder/range_1"
  op: "Range"
  input: "speller/decoder/range_1/start"
  input: "speller/decoder/Rank_1"
  input: "speller/decoder/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/concat_3/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "speller/decoder/concat_3/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "speller/decoder/concat_3"
  op: "ConcatV2"
  input: "speller/decoder/concat_3/values_0"
  input: "speller/decoder/range_1"
  input: "speller/decoder/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/transpose_1"
  op: "Transpose"
  input: "speller/decoder/TensorArrayStack_1/TensorArrayGatherV3"
  input: "speller/decoder/concat_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "prediction/ArgMax/dimension"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "prediction/ArgMax"
  op: "ArgMax"
  input: "speller/decoder/transpose"
  input: "prediction/ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "prediction/ToInt32"
  op: "Cast"
  input: "prediction/ArgMax"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "metrics/Shape"
  op: "Shape"
  input: "prediction/ToInt32"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "metrics/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "metrics/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "metrics/strided_slice"
  op: "StridedSlice"
  input: "metrics/Shape"
  input: "metrics/strided_slice/stack"
  input: "metrics/strided_slice/stack_1"
  input: "metrics/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "metrics/Fill/dims/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "metrics/Fill/dims"
  op: "Pack"
  input: "metrics/strided_slice"
  input: "metrics/Fill/dims/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "metrics/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "metrics/Fill"
  op: "Fill"
  input: "metrics/Fill/dims"
  input: "metrics/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "metrics/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics/concat"
  op: "ConcatV2"
  input: "prediction/ToInt32"
  input: "metrics/Fill"
  input: "metrics/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "metrics/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "metrics/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "metrics/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "metrics/strided_slice_1"
  op: "StridedSlice"
  input: "metrics/concat"
  input: "metrics/strided_slice_1/stack"
  input: "metrics/strided_slice_1/stack_1"
  input: "metrics/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "metrics/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "metrics/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "metrics/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "metrics/strided_slice_2"
  op: "StridedSlice"
  input: "metrics/concat"
  input: "metrics/strided_slice_2/stack"
  input: "metrics/strided_slice_2/stack_1"
  input: "metrics/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "metrics/sub"
  op: "Sub"
  input: "metrics/strided_slice_1"
  input: "metrics/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "metrics/Cast"
  op: "Cast"
  input: "metrics/sub"
  attr {
    key: "DstT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "metrics/Equal/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "metrics/Equal"
  op: "Equal"
  input: "metrics/concat"
  input: "metrics/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "metrics/Where"
  op: "Where"
  input: "metrics/Equal"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "metrics/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "metrics/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "metrics/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "metrics/strided_slice_3"
  op: "StridedSlice"
  input: "metrics/Where"
  input: "metrics/strided_slice_3/stack"
  input: "metrics/strided_slice_3/stack_1"
  input: "metrics/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "metrics/strided_slice_4/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "metrics/strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "metrics/strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "metrics/strided_slice_4"
  op: "StridedSlice"
  input: "metrics/Where"
  input: "metrics/strided_slice_4/stack"
  input: "metrics/strided_slice_4/stack_1"
  input: "metrics/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "metrics/SegmentMin"
  op: "SegmentMin"
  input: "metrics/strided_slice_3"
  input: "metrics/strided_slice_4"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "metrics/Shape_1"
  op: "Shape"
  input: "prediction/ToInt32"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "metrics/strided_slice_5/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "metrics/strided_slice_5/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "metrics/strided_slice_5/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "metrics/strided_slice_5"
  op: "StridedSlice"
  input: "metrics/Shape_1"
  input: "metrics/strided_slice_5/stack"
  input: "metrics/strided_slice_5/stack_1"
  input: "metrics/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "metrics/SequenceMask/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics/SequenceMask/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "metrics/SequenceMask/Range"
  op: "Range"
  input: "metrics/SequenceMask/Const"
  input: "metrics/strided_slice_5"
  input: "metrics/SequenceMask/Const_1"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "metrics/SequenceMask/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics/SequenceMask/ExpandDims"
  op: "ExpandDims"
  input: "metrics/SegmentMin"
  input: "metrics/SequenceMask/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "metrics/SequenceMask/Cast"
  op: "Cast"
  input: "metrics/SequenceMask/ExpandDims"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "metrics/SequenceMask/Less"
  op: "Less"
  input: "metrics/SequenceMask/Range"
  input: "metrics/SequenceMask/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "metrics/and"
  op: "LogicalAnd"
  input: "metrics/Cast"
  input: "metrics/SequenceMask/Less"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "metrics/NotEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics/NotEqual"
  op: "NotEqual"
  input: "prediction/ToInt32"
  input: "metrics/NotEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "metrics/and_1"
  op: "LogicalAnd"
  input: "metrics/and"
  input: "metrics/NotEqual"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "metrics/Where_1"
  op: "Where"
  input: "metrics/and_1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "metrics/GatherNd"
  op: "GatherNd"
  input: "prediction/ToInt32"
  input: "metrics/Where_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "metrics/Shape_2"
  op: "Shape"
  input: "prediction/ToInt32"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics/Shape_3"
  op: "Shape"
  input: "IteratorGetNext:4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "metrics/strided_slice_6/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics/strided_slice_6/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "metrics/strided_slice_6/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "metrics/strided_slice_6"
  op: "StridedSlice"
  input: "metrics/Shape_3"
  input: "metrics/strided_slice_6/stack"
  input: "metrics/strided_slice_6/stack_1"
  input: "metrics/strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "metrics/Fill_1/dims/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "metrics/Fill_1/dims"
  op: "Pack"
  input: "metrics/strided_slice_6"
  input: "metrics/Fill_1/dims/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "metrics/Fill_1/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "metrics/Fill_1"
  op: "Fill"
  input: "metrics/Fill_1/dims"
  input: "metrics/Fill_1/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "metrics/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics/concat_1"
  op: "ConcatV2"
  input: "IteratorGetNext:4"
  input: "metrics/Fill_1"
  input: "metrics/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "metrics/strided_slice_7/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "metrics/strided_slice_7/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "metrics/strided_slice_7/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "metrics/strided_slice_7"
  op: "StridedSlice"
  input: "metrics/concat_1"
  input: "metrics/strided_slice_7/stack"
  input: "metrics/strided_slice_7/stack_1"
  input: "metrics/strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "metrics/strided_slice_8/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "metrics/strided_slice_8/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "metrics/strided_slice_8/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "metrics/strided_slice_8"
  op: "StridedSlice"
  input: "metrics/concat_1"
  input: "metrics/strided_slice_8/stack"
  input: "metrics/strided_slice_8/stack_1"
  input: "metrics/strided_slice_8/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "metrics/sub_1"
  op: "Sub"
  input: "metrics/strided_slice_7"
  input: "metrics/strided_slice_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "metrics/Cast_1"
  op: "Cast"
  input: "metrics/sub_1"
  attr {
    key: "DstT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "metrics/Equal_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "metrics/Equal_1"
  op: "Equal"
  input: "metrics/concat_1"
  input: "metrics/Equal_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "metrics/Where_2"
  op: "Where"
  input: "metrics/Equal_1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "metrics/strided_slice_9/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "metrics/strided_slice_9/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "metrics/strided_slice_9/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "metrics/strided_slice_9"
  op: "StridedSlice"
  input: "metrics/Where_2"
  input: "metrics/strided_slice_9/stack"
  input: "metrics/strided_slice_9/stack_1"
  input: "metrics/strided_slice_9/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "metrics/strided_slice_10/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "metrics/strided_slice_10/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "metrics/strided_slice_10/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "metrics/strided_slice_10"
  op: "StridedSlice"
  input: "metrics/Where_2"
  input: "metrics/strided_slice_10/stack"
  input: "metrics/strided_slice_10/stack_1"
  input: "metrics/strided_slice_10/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "metrics/SegmentMin_1"
  op: "SegmentMin"
  input: "metrics/strided_slice_9"
  input: "metrics/strided_slice_10"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "metrics/Shape_4"
  op: "Shape"
  input: "IteratorGetNext:4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "metrics/strided_slice_11/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "metrics/strided_slice_11/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "metrics/strided_slice_11/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "metrics/strided_slice_11"
  op: "StridedSlice"
  input: "metrics/Shape_4"
  input: "metrics/strided_slice_11/stack"
  input: "metrics/strided_slice_11/stack_1"
  input: "metrics/strided_slice_11/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "metrics/SequenceMask_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics/SequenceMask_1/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "metrics/SequenceMask_1/Range"
  op: "Range"
  input: "metrics/SequenceMask_1/Const"
  input: "metrics/strided_slice_11"
  input: "metrics/SequenceMask_1/Const_1"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "metrics/SequenceMask_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics/SequenceMask_1/ExpandDims"
  op: "ExpandDims"
  input: "metrics/SegmentMin_1"
  input: "metrics/SequenceMask_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "metrics/SequenceMask_1/Cast"
  op: "Cast"
  input: "metrics/SequenceMask_1/ExpandDims"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "metrics/SequenceMask_1/Less"
  op: "Less"
  input: "metrics/SequenceMask_1/Range"
  input: "metrics/SequenceMask_1/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "metrics/and_2"
  op: "LogicalAnd"
  input: "metrics/Cast_1"
  input: "metrics/SequenceMask_1/Less"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "metrics/NotEqual_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics/NotEqual_1"
  op: "NotEqual"
  input: "IteratorGetNext:4"
  input: "metrics/NotEqual_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "metrics/and_3"
  op: "LogicalAnd"
  input: "metrics/and_2"
  input: "metrics/NotEqual_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "metrics/Where_3"
  op: "Where"
  input: "metrics/and_3"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "metrics/GatherNd_1"
  op: "GatherNd"
  input: "IteratorGetNext:4"
  input: "metrics/Where_3"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "metrics/Shape_5"
  op: "Shape"
  input: "IteratorGetNext:4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics/edit_distance"
  op: "EditDistance"
  input: "metrics/Where_1"
  input: "metrics/GatherNd"
  input: "metrics/Shape_2"
  input: "metrics/Where_3"
  input: "metrics/GatherNd_1"
  input: "metrics/Shape_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "normalize"
    value {
      b: true
    }
  }
}
node {
  name: "metrics/mean/total/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "metrics/mean/total"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "metrics/mean/total/Assign"
  op: "Assign"
  input: "metrics/mean/total"
  input: "metrics/mean/total/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "metrics/mean/total/read"
  op: "Identity"
  input: "metrics/mean/total"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/mean/count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "metrics/mean/count"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "metrics/mean/count/Assign"
  op: "Assign"
  input: "metrics/mean/count"
  input: "metrics/mean/count/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "metrics/mean/count/read"
  op: "Identity"
  input: "metrics/mean/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/mean/Size"
  op: "Size"
  input: "metrics/edit_distance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "metrics/mean/ToFloat"
  op: "Cast"
  input: "metrics/mean/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/mean/Rank"
  op: "Rank"
  input: "metrics/edit_distance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/mean/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics/mean/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "metrics/mean/range"
  op: "Range"
  input: "metrics/mean/range/start"
  input: "metrics/mean/Rank"
  input: "metrics/mean/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "metrics/mean/Sum"
  op: "Sum"
  input: "metrics/edit_distance"
  input: "metrics/mean/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/mean/AssignAdd"
  op: "AssignAdd"
  input: "metrics/mean/total"
  input: "metrics/mean/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/mean/AssignAdd_1"
  op: "AssignAdd"
  input: "metrics/mean/count"
  input: "metrics/mean/ToFloat"
  input: "^metrics/edit_distance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/mean/truediv"
  op: "RealDiv"
  input: "metrics/mean/total/read"
  input: "metrics/mean/count/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/mean/zeros_like"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "metrics/mean/Greater"
  op: "Greater"
  input: "metrics/mean/count/read"
  input: "metrics/mean/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/mean/value"
  op: "Select"
  input: "metrics/mean/Greater"
  input: "metrics/mean/truediv"
  input: "metrics/mean/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/mean/truediv_1"
  op: "RealDiv"
  input: "metrics/mean/AssignAdd"
  input: "metrics/mean/AssignAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/mean/zeros_like_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "metrics/mean/Greater_1"
  op: "Greater"
  input: "metrics/mean/AssignAdd_1"
  input: "metrics/mean/zeros_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/mean/update_op"
  op: "Select"
  input: "metrics/mean/Greater_1"
  input: "metrics/mean/truediv_1"
  input: "metrics/mean/zeros_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "edit_distance/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "edit_distance"
      }
    }
  }
}
node {
  name: "edit_distance"
  op: "ScalarSummary"
  input: "edit_distance/tags"
  input: "metrics/mean/update_op"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cross_entropy/SequenceMask/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy/SequenceMask/Max"
  op: "Max"
  input: "IteratorGetNext:2"
  input: "cross_entropy/SequenceMask/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "cross_entropy/SequenceMask/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy/SequenceMask/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cross_entropy/SequenceMask/Range"
  op: "Range"
  input: "cross_entropy/SequenceMask/Const_1"
  input: "cross_entropy/SequenceMask/Max"
  input: "cross_entropy/SequenceMask/Const_2"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "cross_entropy/SequenceMask/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "cross_entropy/SequenceMask/ExpandDims"
  op: "ExpandDims"
  input: "IteratorGetNext:2"
  input: "cross_entropy/SequenceMask/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "cross_entropy/SequenceMask/Cast"
  op: "Cast"
  input: "cross_entropy/SequenceMask/ExpandDims"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "cross_entropy/SequenceMask/Less"
  op: "Less"
  input: "cross_entropy/SequenceMask/Range"
  input: "cross_entropy/SequenceMask/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "cross_entropy/SequenceMask/Cast_1"
  op: "Cast"
  input: "cross_entropy/SequenceMask/Less"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "cross_entropy/sequence_loss/Shape"
  op: "Shape"
  input: "speller/decoder/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/sequence_loss/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "cross_entropy/sequence_loss/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "cross_entropy/sequence_loss/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cross_entropy/sequence_loss/strided_slice"
  op: "StridedSlice"
  input: "cross_entropy/sequence_loss/Shape"
  input: "cross_entropy/sequence_loss/strided_slice/stack"
  input: "cross_entropy/sequence_loss/strided_slice/stack_1"
  input: "cross_entropy/sequence_loss/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "cross_entropy/sequence_loss/Reshape/shape/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "cross_entropy/sequence_loss/Reshape/shape"
  op: "Pack"
  input: "cross_entropy/sequence_loss/Reshape/shape/0"
  input: "cross_entropy/sequence_loss/strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "cross_entropy/sequence_loss/Reshape"
  op: "Reshape"
  input: "speller/decoder/transpose"
  input: "cross_entropy/sequence_loss/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "cross_entropy/sequence_loss/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "cross_entropy/sequence_loss/Reshape_1"
  op: "Reshape"
  input: "IteratorGetNext:4"
  input: "cross_entropy/sequence_loss/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "cross_entropy/sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Shape"
  op: "Shape"
  input: "cross_entropy/sequence_loss/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "cross_entropy/sequence_loss/Reshape"
  input: "cross_entropy/sequence_loss/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "cross_entropy/sequence_loss/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "cross_entropy/sequence_loss/Reshape_2"
  op: "Reshape"
  input: "cross_entropy/SequenceMask/Cast_1"
  input: "cross_entropy/sequence_loss/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "cross_entropy/sequence_loss/mul"
  op: "Mul"
  input: "cross_entropy/sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  input: "cross_entropy/sequence_loss/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "cross_entropy/sequence_loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy/sequence_loss/Sum"
  op: "Sum"
  input: "cross_entropy/sequence_loss/mul"
  input: "cross_entropy/sequence_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "cross_entropy/sequence_loss/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "cross_entropy/sequence_loss/Sum_1"
  op: "Sum"
  input: "cross_entropy/SequenceMask/Cast_1"
  input: "cross_entropy/sequence_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "cross_entropy/sequence_loss/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "cross_entropy/sequence_loss/add"
  op: "Add"
  input: "cross_entropy/sequence_loss/Sum_1"
  input: "cross_entropy/sequence_loss/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cross_entropy/sequence_loss/truediv"
  op: "RealDiv"
  input: "cross_entropy/sequence_loss/Sum"
  input: "cross_entropy/sequence_loss/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "train/gradients/Fill"
  op: "Fill"
  input: "train/gradients/Shape"
  input: "train/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/f_count"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/f_count_1"
  op: "Enter"
  input: "train/gradients/f_count"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/Merge"
  op: "Merge"
  input: "train/gradients/f_count_1"
  input: "train/gradients/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/Switch"
  op: "Switch"
  input: "train/gradients/Merge"
  input: "speller/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/Add/y"
  op: "Const"
  input: "^speller/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/Add"
  op: "Add"
  input: "train/gradients/Switch:1"
  input: "train/gradients/Add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/NextIteration"
  op: "NextIteration"
  input: "train/gradients/Add"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims_grad/Reshape/StackPushV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/MatMul_1/StackPushV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/Select/StackPushV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/zeros_like/StackPushV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/mul/StackPushV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze_grad/Reshape/StackPushV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Mul/StackPushV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Mul_1/StackPushV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Mul/StackPushV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Mul_1/StackPushV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Mul/StackPushV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Mul_1/StackPushV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/ShapeN/StackPushV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/ShapeN/StackPushV2_1"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPushV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul/StackPushV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/StackPushV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/StackPushV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/StackPushV2_1"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims_grad/Reshape/StackPushV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/MatMul_1/StackPushV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze_grad/Reshape/StackPushV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/MatMul_grad/MatMul_1/StackPushV2"
  input: "^train/gradients/speller/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/f_count_2"
  op: "Exit"
  input: "train/gradients/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/b_count"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/b_count_1"
  op: "Enter"
  input: "train/gradients/f_count_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/Merge_1"
  op: "Merge"
  input: "train/gradients/b_count_1"
  input: "train/gradients/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/GreaterEqual"
  op: "GreaterEqual"
  input: "train/gradients/Merge_1"
  input: "train/gradients/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/GreaterEqual/Enter"
  op: "Enter"
  input: "train/gradients/b_count"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/b_count_2"
  op: "LoopCond"
  input: "train/gradients/GreaterEqual"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/Switch_1"
  op: "Switch"
  input: "train/gradients/Merge_1"
  input: "train/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/Sub"
  op: "Sub"
  input: "train/gradients/Switch_1:1"
  input: "train/gradients/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/NextIteration_1"
  op: "NextIteration"
  input: "train/gradients/Sub"
  input: "^train/gradients/speller/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/b_count_3"
  op: "Exit"
  input: "train/gradients/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/f_count_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/f_count_4"
  op: "Enter"
  input: "train/gradients/f_count_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/Merge_2"
  op: "Merge"
  input: "train/gradients/f_count_4"
  input: "train/gradients/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/Switch_2"
  op: "Switch"
  input: "train/gradients/Merge_2"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/Add_1/y"
  op: "Const"
  input: "^listener/bilstm_2/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/Add_1"
  op: "Add"
  input: "train/gradients/Switch_2:1"
  input: "train/gradients/Add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/NextIteration_2"
  op: "NextIteration"
  input: "train/gradients/Add_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPushV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/StackPushV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like/StackPushV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul/StackPushV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPushV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul/StackPushV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPushV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul/StackPushV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN/StackPushV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/StackPushV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/StackPushV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/f_count_5"
  op: "Exit"
  input: "train/gradients/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/b_count_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/b_count_5"
  op: "Enter"
  input: "train/gradients/f_count_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/Merge_3"
  op: "Merge"
  input: "train/gradients/b_count_5"
  input: "train/gradients/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/GreaterEqual_1"
  op: "GreaterEqual"
  input: "train/gradients/Merge_3"
  input: "train/gradients/GreaterEqual_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/GreaterEqual_1/Enter"
  op: "Enter"
  input: "train/gradients/b_count_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/b_count_6"
  op: "LoopCond"
  input: "train/gradients/GreaterEqual_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/Switch_3"
  op: "Switch"
  input: "train/gradients/Merge_3"
  input: "train/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/Sub_1"
  op: "Sub"
  input: "train/gradients/Switch_3:1"
  input: "train/gradients/GreaterEqual_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/NextIteration_3"
  op: "NextIteration"
  input: "train/gradients/Sub_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/b_count_7"
  op: "Exit"
  input: "train/gradients/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/f_count_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/f_count_7"
  op: "Enter"
  input: "train/gradients/f_count_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/Merge_4"
  op: "Merge"
  input: "train/gradients/f_count_7"
  input: "train/gradients/NextIteration_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/Switch_4"
  op: "Switch"
  input: "train/gradients/Merge_4"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/Add_2/y"
  op: "Const"
  input: "^listener/bilstm_2/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/Add_2"
  op: "Add"
  input: "train/gradients/Switch_4:1"
  input: "train/gradients/Add_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/NextIteration_4"
  op: "NextIteration"
  input: "train/gradients/Add_2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPushV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPushV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/StackPushV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul/StackPushV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPushV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul/StackPushV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPushV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul/StackPushV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN/StackPushV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/StackPushV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/StackPushV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/f_count_8"
  op: "Exit"
  input: "train/gradients/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/b_count_8"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/b_count_9"
  op: "Enter"
  input: "train/gradients/f_count_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/Merge_5"
  op: "Merge"
  input: "train/gradients/b_count_9"
  input: "train/gradients/NextIteration_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/GreaterEqual_2"
  op: "GreaterEqual"
  input: "train/gradients/Merge_5"
  input: "train/gradients/GreaterEqual_2/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/GreaterEqual_2/Enter"
  op: "Enter"
  input: "train/gradients/b_count_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/b_count_10"
  op: "LoopCond"
  input: "train/gradients/GreaterEqual_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/Switch_5"
  op: "Switch"
  input: "train/gradients/Merge_5"
  input: "train/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/Sub_2"
  op: "Sub"
  input: "train/gradients/Switch_5:1"
  input: "train/gradients/GreaterEqual_2/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/NextIteration_5"
  op: "NextIteration"
  input: "train/gradients/Sub_2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/b_count_11"
  op: "Exit"
  input: "train/gradients/Switch_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/f_count_9"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/f_count_10"
  op: "Enter"
  input: "train/gradients/f_count_9"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/Merge_6"
  op: "Merge"
  input: "train/gradients/f_count_10"
  input: "train/gradients/NextIteration_6"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/Switch_6"
  op: "Switch"
  input: "train/gradients/Merge_6"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/Add_3/y"
  op: "Const"
  input: "^listener/bilstm_1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/Add_3"
  op: "Add"
  input: "train/gradients/Switch_6:1"
  input: "train/gradients/Add_3/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/NextIteration_6"
  op: "NextIteration"
  input: "train/gradients/Add_3"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPushV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/StackPushV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like/StackPushV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul/StackPushV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPushV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul/StackPushV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPushV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul/StackPushV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN/StackPushV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/StackPushV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/StackPushV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/f_count_11"
  op: "Exit"
  input: "train/gradients/Switch_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/b_count_12"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/b_count_13"
  op: "Enter"
  input: "train/gradients/f_count_11"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/Merge_7"
  op: "Merge"
  input: "train/gradients/b_count_13"
  input: "train/gradients/NextIteration_7"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/GreaterEqual_3"
  op: "GreaterEqual"
  input: "train/gradients/Merge_7"
  input: "train/gradients/GreaterEqual_3/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/GreaterEqual_3/Enter"
  op: "Enter"
  input: "train/gradients/b_count_12"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/b_count_14"
  op: "LoopCond"
  input: "train/gradients/GreaterEqual_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/Switch_7"
  op: "Switch"
  input: "train/gradients/Merge_7"
  input: "train/gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/Sub_3"
  op: "Sub"
  input: "train/gradients/Switch_7:1"
  input: "train/gradients/GreaterEqual_3/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/NextIteration_7"
  op: "NextIteration"
  input: "train/gradients/Sub_3"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/b_count_15"
  op: "Exit"
  input: "train/gradients/Switch_7"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/f_count_12"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/f_count_13"
  op: "Enter"
  input: "train/gradients/f_count_12"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/Merge_8"
  op: "Merge"
  input: "train/gradients/f_count_13"
  input: "train/gradients/NextIteration_8"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/Switch_8"
  op: "Switch"
  input: "train/gradients/Merge_8"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/Add_4/y"
  op: "Const"
  input: "^listener/bilstm_1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/Add_4"
  op: "Add"
  input: "train/gradients/Switch_8:1"
  input: "train/gradients/Add_4/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/NextIteration_8"
  op: "NextIteration"
  input: "train/gradients/Add_4"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPushV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPushV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/StackPushV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul/StackPushV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPushV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul/StackPushV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPushV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul/StackPushV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN/StackPushV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/StackPushV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/StackPushV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/f_count_14"
  op: "Exit"
  input: "train/gradients/Switch_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/b_count_16"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/b_count_17"
  op: "Enter"
  input: "train/gradients/f_count_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/Merge_9"
  op: "Merge"
  input: "train/gradients/b_count_17"
  input: "train/gradients/NextIteration_9"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/GreaterEqual_4"
  op: "GreaterEqual"
  input: "train/gradients/Merge_9"
  input: "train/gradients/GreaterEqual_4/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/GreaterEqual_4/Enter"
  op: "Enter"
  input: "train/gradients/b_count_16"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/b_count_18"
  op: "LoopCond"
  input: "train/gradients/GreaterEqual_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/Switch_9"
  op: "Switch"
  input: "train/gradients/Merge_9"
  input: "train/gradients/b_count_18"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/Sub_4"
  op: "Sub"
  input: "train/gradients/Switch_9:1"
  input: "train/gradients/GreaterEqual_4/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/NextIteration_9"
  op: "NextIteration"
  input: "train/gradients/Sub_4"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/b_count_19"
  op: "Exit"
  input: "train/gradients/Switch_9"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/f_count_15"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/f_count_16"
  op: "Enter"
  input: "train/gradients/f_count_15"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/Merge_10"
  op: "Merge"
  input: "train/gradients/f_count_16"
  input: "train/gradients/NextIteration_10"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/Switch_10"
  op: "Switch"
  input: "train/gradients/Merge_10"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/Add_5/y"
  op: "Const"
  input: "^listener/bilstm_0/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/Add_5"
  op: "Add"
  input: "train/gradients/Switch_10:1"
  input: "train/gradients/Add_5/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/NextIteration_10"
  op: "NextIteration"
  input: "train/gradients/Add_5"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPushV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/StackPushV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like/StackPushV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul/StackPushV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPushV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul/StackPushV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPushV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul/StackPushV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/f_count_17"
  op: "Exit"
  input: "train/gradients/Switch_10"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/b_count_20"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/b_count_21"
  op: "Enter"
  input: "train/gradients/f_count_17"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/Merge_11"
  op: "Merge"
  input: "train/gradients/b_count_21"
  input: "train/gradients/NextIteration_11"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/GreaterEqual_5"
  op: "GreaterEqual"
  input: "train/gradients/Merge_11"
  input: "train/gradients/GreaterEqual_5/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/GreaterEqual_5/Enter"
  op: "Enter"
  input: "train/gradients/b_count_20"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/b_count_22"
  op: "LoopCond"
  input: "train/gradients/GreaterEqual_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/Switch_11"
  op: "Switch"
  input: "train/gradients/Merge_11"
  input: "train/gradients/b_count_22"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/Sub_5"
  op: "Sub"
  input: "train/gradients/Switch_11:1"
  input: "train/gradients/GreaterEqual_5/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/NextIteration_11"
  op: "NextIteration"
  input: "train/gradients/Sub_5"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/b_count_23"
  op: "Exit"
  input: "train/gradients/Switch_11"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/f_count_18"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/f_count_19"
  op: "Enter"
  input: "train/gradients/f_count_18"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/Merge_12"
  op: "Merge"
  input: "train/gradients/f_count_19"
  input: "train/gradients/NextIteration_12"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/Switch_12"
  op: "Switch"
  input: "train/gradients/Merge_12"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/Add_6/y"
  op: "Const"
  input: "^listener/bilstm_0/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/Add_6"
  op: "Add"
  input: "train/gradients/Switch_12:1"
  input: "train/gradients/Add_6/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/NextIteration_12"
  op: "NextIteration"
  input: "train/gradients/Add_6"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPushV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPushV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/StackPushV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul/StackPushV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPushV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul/StackPushV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPushV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul/StackPushV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/f_count_20"
  op: "Exit"
  input: "train/gradients/Switch_12"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/b_count_24"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/b_count_25"
  op: "Enter"
  input: "train/gradients/f_count_20"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/Merge_13"
  op: "Merge"
  input: "train/gradients/b_count_25"
  input: "train/gradients/NextIteration_13"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/GreaterEqual_6"
  op: "GreaterEqual"
  input: "train/gradients/Merge_13"
  input: "train/gradients/GreaterEqual_6/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/GreaterEqual_6/Enter"
  op: "Enter"
  input: "train/gradients/b_count_24"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/b_count_26"
  op: "LoopCond"
  input: "train/gradients/GreaterEqual_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/Switch_13"
  op: "Switch"
  input: "train/gradients/Merge_13"
  input: "train/gradients/b_count_26"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/Sub_6"
  op: "Sub"
  input: "train/gradients/Switch_13:1"
  input: "train/gradients/GreaterEqual_6/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/NextIteration_13"
  op: "NextIteration"
  input: "train/gradients/Sub_6"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/b_count_27"
  op: "Exit"
  input: "train/gradients/Switch_13"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sequence_loss/truediv_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sequence_loss/truediv_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sequence_loss/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/cross_entropy/sequence_loss/truediv_grad/Shape"
  input: "train/gradients/cross_entropy/sequence_loss/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sequence_loss/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "train/gradients/Fill"
  input: "cross_entropy/sequence_loss/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sequence_loss/truediv_grad/Sum"
  op: "Sum"
  input: "train/gradients/cross_entropy/sequence_loss/truediv_grad/RealDiv"
  input: "train/gradients/cross_entropy/sequence_loss/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sequence_loss/truediv_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/cross_entropy/sequence_loss/truediv_grad/Sum"
  input: "train/gradients/cross_entropy/sequence_loss/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sequence_loss/truediv_grad/Neg"
  op: "Neg"
  input: "cross_entropy/sequence_loss/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sequence_loss/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "train/gradients/cross_entropy/sequence_loss/truediv_grad/Neg"
  input: "cross_entropy/sequence_loss/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sequence_loss/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "train/gradients/cross_entropy/sequence_loss/truediv_grad/RealDiv_1"
  input: "cross_entropy/sequence_loss/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sequence_loss/truediv_grad/mul"
  op: "Mul"
  input: "train/gradients/Fill"
  input: "train/gradients/cross_entropy/sequence_loss/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sequence_loss/truediv_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/cross_entropy/sequence_loss/truediv_grad/mul"
  input: "train/gradients/cross_entropy/sequence_loss/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sequence_loss/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/cross_entropy/sequence_loss/truediv_grad/Sum_1"
  input: "train/gradients/cross_entropy/sequence_loss/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sequence_loss/truediv_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/cross_entropy/sequence_loss/truediv_grad/Reshape"
  input: "^train/gradients/cross_entropy/sequence_loss/truediv_grad/Reshape_1"
}
node {
  name: "train/gradients/cross_entropy/sequence_loss/truediv_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/cross_entropy/sequence_loss/truediv_grad/Reshape"
  input: "^train/gradients/cross_entropy/sequence_loss/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/sequence_loss/truediv_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sequence_loss/truediv_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/cross_entropy/sequence_loss/truediv_grad/Reshape_1"
  input: "^train/gradients/cross_entropy/sequence_loss/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/sequence_loss/truediv_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sequence_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sequence_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/cross_entropy/sequence_loss/truediv_grad/tuple/control_dependency"
  input: "train/gradients/cross_entropy/sequence_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sequence_loss/Sum_grad/Shape"
  op: "Shape"
  input: "cross_entropy/sequence_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sequence_loss/Sum_grad/Tile"
  op: "Tile"
  input: "train/gradients/cross_entropy/sequence_loss/Sum_grad/Reshape"
  input: "train/gradients/cross_entropy/sequence_loss/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sequence_loss/mul_grad/Shape"
  op: "Shape"
  input: "cross_entropy/sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sequence_loss/mul_grad/Shape_1"
  op: "Shape"
  input: "cross_entropy/sequence_loss/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sequence_loss/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/cross_entropy/sequence_loss/mul_grad/Shape"
  input: "train/gradients/cross_entropy/sequence_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sequence_loss/mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/cross_entropy/sequence_loss/Sum_grad/Tile"
  input: "cross_entropy/sequence_loss/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sequence_loss/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/cross_entropy/sequence_loss/mul_grad/Mul"
  input: "train/gradients/cross_entropy/sequence_loss/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sequence_loss/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/cross_entropy/sequence_loss/mul_grad/Sum"
  input: "train/gradients/cross_entropy/sequence_loss/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sequence_loss/mul_grad/Mul_1"
  op: "Mul"
  input: "cross_entropy/sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  input: "train/gradients/cross_entropy/sequence_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sequence_loss/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/cross_entropy/sequence_loss/mul_grad/Mul_1"
  input: "train/gradients/cross_entropy/sequence_loss/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sequence_loss/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/cross_entropy/sequence_loss/mul_grad/Sum_1"
  input: "train/gradients/cross_entropy/sequence_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sequence_loss/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/cross_entropy/sequence_loss/mul_grad/Reshape"
  input: "^train/gradients/cross_entropy/sequence_loss/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/cross_entropy/sequence_loss/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/cross_entropy/sequence_loss/mul_grad/Reshape"
  input: "^train/gradients/cross_entropy/sequence_loss/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/sequence_loss/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sequence_loss/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/cross_entropy/sequence_loss/mul_grad/Reshape_1"
  input: "^train/gradients/cross_entropy/sequence_loss/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/sequence_loss/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like"
  op: "ZerosLike"
  input: "cross_entropy/sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/PreventGradient"
  op: "PreventGradient"
  input: "cross_entropy/sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Currently there is no way to take the second derivative of sparse_softmax_cross_entropy_with_logits due to the fused implementation\'s interaction with tf.gradients()"
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims"
  op: "ExpandDims"
  input: "train/gradients/cross_entropy/sequence_loss/mul_grad/tuple/control_dependency"
  input: "train/gradients/cross_entropy/sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
  op: "Mul"
  input: "train/gradients/cross_entropy/sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims"
  input: "train/gradients/cross_entropy/sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/PreventGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sequence_loss/Reshape_grad/Shape"
  op: "Shape"
  input: "speller/decoder/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sequence_loss/Reshape_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/cross_entropy/sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
  input: "train/gradients/cross_entropy/sequence_loss/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "speller/decoder/concat_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/transpose_grad/transpose"
  op: "Transpose"
  input: "train/gradients/cross_entropy/sequence_loss/Reshape_grad/Reshape"
  input: "train/gradients/speller/decoder/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "speller/decoder/TensorArray"
  input: "speller/decoder/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/speller/decoder/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "speller/decoder/while/Exit_1"
  input: "^train/gradients/speller/decoder/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "train/gradients/speller/decoder/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "speller/decoder/TensorArrayStack/range"
  input: "train/gradients/speller/decoder/transpose_grad/transpose"
  input: "train/gradients/speller/decoder/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_1"
  op: "ZerosLike"
  input: "speller/decoder/while/Exit_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_2"
  op: "ZerosLike"
  input: "speller/decoder/while/Exit_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_3"
  op: "ZerosLike"
  input: "speller/decoder/while/Exit_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_4"
  op: "ZerosLike"
  input: "speller/decoder/while/Exit_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_5"
  op: "ZerosLike"
  input: "speller/decoder/while/Exit_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_6"
  op: "ZerosLike"
  input: "speller/decoder/while/Exit_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/Exit_1_grad/b_exit"
  op: "Enter"
  input: "train/gradients/speller/decoder/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "train/gradients/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "train/gradients/zeros_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/Exit_4_grad/b_exit"
  op: "Enter"
  input: "train/gradients/zeros_like_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/Exit_5_grad/b_exit"
  op: "Enter"
  input: "train/gradients/zeros_like_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/Exit_7_grad/b_exit"
  op: "Enter"
  input: "train/gradients/zeros_like_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/Exit_8_grad/b_exit"
  op: "Enter"
  input: "train/gradients/zeros_like_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/Exit_9_grad/b_exit"
  op: "Enter"
  input: "train/gradients/zeros_like_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/Switch_1_grad/b_switch"
  op: "Merge"
  input: "train/gradients/speller/decoder/while/Exit_1_grad/b_exit"
  input: "train/gradients/speller/decoder/while/Switch_1_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "train/gradients/speller/decoder/while/Exit_3_grad/b_exit"
  input: "train/gradients/speller/decoder/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/Switch_4_grad/b_switch"
  op: "Merge"
  input: "train/gradients/speller/decoder/while/Exit_4_grad/b_exit"
  input: "train/gradients/speller/decoder/while/Switch_4_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/Switch_5_grad/b_switch"
  op: "Merge"
  input: "train/gradients/speller/decoder/while/Exit_5_grad/b_exit"
  input: "train/gradients/speller/decoder/while/Switch_5_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/Merge_1_grad/Switch"
  op: "Switch"
  input: "train/gradients/speller/decoder/while/Switch_1_grad/b_switch"
  input: "train/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/Merge_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/speller/decoder/while/Merge_1_grad/Switch"
}
node {
  name: "train/gradients/speller/decoder/while/Merge_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/speller/decoder/while/Merge_1_grad/Switch"
  input: "^train/gradients/speller/decoder/while/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/Merge_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/speller/decoder/while/Merge_1_grad/Switch:1"
  input: "^train/gradients/speller/decoder/while/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "train/gradients/speller/decoder/while/Switch_3_grad/b_switch"
  input: "train/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/speller/decoder/while/Merge_3_grad/Switch"
}
node {
  name: "train/gradients/speller/decoder/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/speller/decoder/while/Merge_3_grad/Switch"
  input: "^train/gradients/speller/decoder/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/speller/decoder/while/Merge_3_grad/Switch:1"
  input: "^train/gradients/speller/decoder/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/Merge_4_grad/Switch"
  op: "Switch"
  input: "train/gradients/speller/decoder/while/Switch_4_grad/b_switch"
  input: "train/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/Switch_4_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/Merge_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/speller/decoder/while/Merge_4_grad/Switch"
}
node {
  name: "train/gradients/speller/decoder/while/Merge_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/speller/decoder/while/Merge_4_grad/Switch"
  input: "^train/gradients/speller/decoder/while/Merge_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/Switch_4_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/Merge_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/speller/decoder/while/Merge_4_grad/Switch:1"
  input: "^train/gradients/speller/decoder/while/Merge_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/Switch_4_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/Merge_5_grad/Switch"
  op: "Switch"
  input: "train/gradients/speller/decoder/while/Switch_5_grad/b_switch"
  input: "train/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/Switch_5_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/Merge_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/speller/decoder/while/Merge_5_grad/Switch"
}
node {
  name: "train/gradients/speller/decoder/while/Merge_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/speller/decoder/while/Merge_5_grad/Switch"
  input: "^train/gradients/speller/decoder/while/Merge_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/Switch_5_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/Merge_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/speller/decoder/while/Merge_5_grad/Switch:1"
  input: "^train/gradients/speller/decoder/while/Merge_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/Switch_5_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/Enter_1_grad/Exit"
  op: "Exit"
  input: "train/gradients/speller/decoder/while/Merge_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "train/gradients/speller/decoder/while/Merge_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/Enter_4_grad/Exit"
  op: "Exit"
  input: "train/gradients/speller/decoder/while/Merge_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/Enter_5_grad/Exit"
  op: "Exit"
  input: "train/gradients/speller/decoder/while/Merge_5_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "train/gradients/speller/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "train/gradients/speller/decoder/while/Merge_1_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/BasicDecoderStep/projection_layer/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "speller/decoder/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/BasicDecoderStep/projection_layer/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/speller/decoder/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^train/gradients/speller/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/BasicDecoderStep/projection_layer/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "train/gradients/speller/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "train/gradients/speller/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "train/gradients/speller/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "train/gradients/speller/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/speller/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "speller/decoder/while/Identity"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/speller/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims_grad/Reshape/StackPopV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/MatMul_1/StackPopV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/Select/StackPopV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/zeros_like/StackPopV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/mul/StackPopV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze_grad/Reshape/StackPopV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Mul_1/StackPopV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/ShapeN/StackPopV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/ShapeN/StackPopV2_1"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPopV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul/StackPopV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/StackPopV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/StackPopV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/StackPopV2_1"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims_grad/Reshape/StackPopV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/MatMul_1/StackPopV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze_grad/Reshape/StackPopV2"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/MatMul_grad/MatMul_1/StackPopV2"
  input: "^train/gradients/speller/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
}
node {
  name: "train/gradients/speller/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/speller/decoder/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^train/gradients/speller/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "train/gradients/speller/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/speller/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^train/gradients/speller/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/speller/decoder/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^train/gradients/speller/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/speller/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/speller/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/speller/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5585
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/BiasAdd_grad/tuple/control_dependency"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "speller/decoder/projection_layer/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/MatMul_grad/MatMul_1/StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/MatMul_grad/MatMul_1/Enter"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_1"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/MatMul_grad/MatMul"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/MatMul_grad/MatMul"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/MatMul_grad/MatMul_1"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5585
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/BiasAdd/Enter_grad/b_acc_1"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5585
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/BiasAdd/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5585
          }
        }
        shape {
          dim {
            size: 5585
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/BiasAdd/Enter_grad/Switch:1"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5585
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5585
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5585
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/Switch_1_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/speller/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/AddN"
  op: "AddN"
  input: "train/gradients/speller/decoder/while/Merge_5_grad/tuple/control_dependency_1"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/MatMul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/Switch_5_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 5585
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/MatMul/Enter_grad/b_acc_1"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 5585
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/MatMul/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 5585
          }
        }
        shape {
          dim {
            size: 512
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/MatMul/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/MatMul/Enter_grad/Switch:1"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze_grad/Shape"
  op: "Shape"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/AddN"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze_grad/Reshape/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze_grad/Reshape/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze_grad/Reshape/f_acc"
  op: "StackV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze_grad/Reshape/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze_grad/Reshape/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze_grad/Reshape/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze_grad/Reshape/Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze_grad/Shape"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze_grad/Reshape/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze_grad/Reshape/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze_grad/Reshape/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/MatMul"
  op: "BatchMatMul"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze_grad/Reshape"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "speller/LuongAttention/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/MatMul_1"
  op: "BatchMatMul"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/MatMul_1/StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/MatMul_1/Enter"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/MatMul"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/MatMul"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/MatMul_1"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims_grad/Shape"
  op: "Shape"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims_grad/Reshape/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims_grad/Reshape/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims_grad/Reshape/f_acc"
  op: "StackV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims_grad/Reshape/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims_grad/Reshape/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims_grad/Reshape/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims_grad/Reshape/Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims_grad/Shape"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims_grad/Reshape/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims_grad/Reshape/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims_grad/Reshape/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter_grad/Shape"
  op: "Shape"
  input: "speller/LuongAttention/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter_grad/zeros"
  op: "Fill"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter_grad/Shape"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter_grad/b_acc"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter_grad/b_acc_1"
  op: "Merge"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter_grad/b_acc"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter_grad/b_acc_1"
  input: "train/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter_grad/Switch:1"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter_grad/b_acc_2"
  op: "Exit"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/mul"
  op: "Mul"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims_grad/Reshape"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Softmax"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/mul/f_acc"
  op: "StackV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Softmax"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/mul/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/mul/Enter"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Softmax"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/mul/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/Sum/reduction_indices"
  op: "Const"
  input: "^train/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/Sum"
  op: "Sum"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/mul"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/sub"
  op: "Sub"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/ExpandDims_grad/Reshape"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/mul_1"
  op: "Mul"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/sub"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/zeros_like/f_acc"
  op: "StackV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/zeros_like/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/zeros_like/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/zeros_like/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/zeros_like/Enter"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/zeros_like/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/zeros_like/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/zeros_like/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/Select"
  op: "Select"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/Select/StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/mul_1"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/Select/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/SequenceMask/Less"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/Select/f_acc"
  op: "StackV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/Select/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/SequenceMask/Less"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/Select/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/Select/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/Select/Enter"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/SequenceMask/Less"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/Select/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/Select/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/Select/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/Select_1"
  op: "Select"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/Select/StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/zeros_like"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Softmax_grad/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/Select"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/Select_1"
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/Select"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/Select_1"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze_grad/Shape"
  op: "Shape"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/Select_grad/tuple/control_dependency"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze_grad/Reshape/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze_grad/Reshape/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze_grad/Reshape/f_acc"
  op: "StackV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze_grad/Reshape/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze_grad/Reshape/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze_grad/Reshape/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze_grad/Reshape/Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze_grad/Shape"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze_grad/Reshape/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze_grad/Reshape/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze_grad/Reshape/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/MatMul"
  op: "BatchMatMul"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze_grad/Reshape"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "speller/LuongAttention/memory_layer/Tensordot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/MatMul_1"
  op: "BatchMatMul"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/Squeeze_grad/Reshape"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/MatMul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/MatMul_1/Enter"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/MatMul"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/MatMul"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/MatMul_1"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims_grad/Shape"
  op: "Shape"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/checked_cell_output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims_grad/Reshape/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims_grad/Reshape/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims_grad/Reshape/f_acc"
  op: "StackV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims_grad/Reshape/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims_grad/Reshape/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims_grad/Reshape/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims_grad/Reshape/Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims_grad/Shape"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims_grad/Reshape/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims_grad/Reshape/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims_grad/Reshape/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter_grad/Shape"
  op: "Shape"
  input: "speller/LuongAttention/memory_layer/Tensordot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter_grad/zeros"
  op: "Fill"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter_grad/Shape"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter_grad/b_acc"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter_grad/b_acc_1"
  op: "Merge"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter_grad/b_acc"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter_grad/b_acc_1"
  input: "train/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter_grad/Switch:1"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter_grad/b_acc_2"
  op: "Exit"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/LuongAttention/memory_layer/Tensordot_grad/Shape"
  op: "Shape"
  input: "speller/LuongAttention/memory_layer/Tensordot/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/speller/LuongAttention/memory_layer/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/MatMul/Enter_grad/b_acc_2"
  input: "train/gradients/speller/LuongAttention/memory_layer/Tensordot_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/AddN_1"
  op: "AddN"
  input: "train/gradients/speller/decoder/while/Merge_4_grad/tuple/control_dependency_1"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/luong_attention/ExpandDims_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/Switch_4_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Shape"
  op: "Shape"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Shape_1"
  op: "Shape"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Shape"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Shape_1"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Mul"
  op: "Mul"
  input: "train/gradients/AddN_1"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Mul/Enter"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_2"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Mul"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Sum"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  input: "train/gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Mul_1/Enter"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_1"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Mul_1"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Sum_1"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Reshape"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Reshape_1"
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Reshape"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Reshape_1"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/LuongAttention/memory_layer/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/speller/LuongAttention/memory_layer/Tensordot_grad/Reshape"
  input: "speller/LuongAttention/memory_layer/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/speller/LuongAttention/memory_layer/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "speller/LuongAttention/memory_layer/Tensordot/Reshape"
  input: "train/gradients/speller/LuongAttention/memory_layer/Tensordot_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/LuongAttention/memory_layer/Tensordot/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/speller/LuongAttention/memory_layer/Tensordot/MatMul_grad/MatMul"
  input: "^train/gradients/speller/LuongAttention/memory_layer/Tensordot/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/speller/LuongAttention/memory_layer/Tensordot/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/speller/LuongAttention/memory_layer/Tensordot/MatMul_grad/MatMul"
  input: "^train/gradients/speller/LuongAttention/memory_layer/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/LuongAttention/memory_layer/Tensordot/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/LuongAttention/memory_layer/Tensordot/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/speller/LuongAttention/memory_layer/Tensordot/MatMul_grad/MatMul_1"
  input: "^train/gradients/speller/LuongAttention/memory_layer/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/LuongAttention/memory_layer/Tensordot/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/LuongAttention/memory_layer/Tensordot/Reshape_grad/Shape"
  op: "Shape"
  input: "speller/LuongAttention/memory_layer/Tensordot/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/speller/LuongAttention/memory_layer/Tensordot/Reshape_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/speller/LuongAttention/memory_layer/Tensordot/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/speller/LuongAttention/memory_layer/Tensordot/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/LuongAttention/memory_layer/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/speller/LuongAttention/memory_layer/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/speller/LuongAttention/memory_layer/Tensordot/MatMul_grad/tuple/control_dependency_1"
  input: "train/gradients/speller/LuongAttention/memory_layer/Tensordot/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/AddN_2"
  op: "AddN"
  input: "train/gradients/speller/decoder/while/Merge_3_grad/tuple/control_dependency_1"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/Shape"
  op: "Shape"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/Shape_1"
  op: "Shape"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/Shape"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/Shape_1"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/Sum"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/Sum_1"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/Reshape"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/Reshape_1"
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/Reshape"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/Reshape_1"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/LuongAttention/memory_layer/Tensordot/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "speller/LuongAttention/memory_layer/Tensordot/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/LuongAttention/memory_layer/Tensordot/transpose_grad/transpose"
  op: "Transpose"
  input: "train/gradients/speller/LuongAttention/memory_layer/Tensordot/Reshape_grad/Reshape"
  input: "train/gradients/speller/LuongAttention/memory_layer/Tensordot/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/LuongAttention/memory_layer/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "speller/LuongAttention/memory_layer/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/LuongAttention/memory_layer/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "train/gradients/speller/LuongAttention/memory_layer/Tensordot/Reshape_1_grad/Reshape"
  input: "train/gradients/speller/LuongAttention/memory_layer/Tensordot/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Shape"
  op: "Shape"
  input: "speller/decoder/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Shape_1"
  op: "Shape"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Shape"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Shape_1"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/tuple/control_dependency"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Mul/Enter"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Mul"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Sum"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Mul_1/StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Mul_1/Enter"
  input: "speller/decoder/while/Identity_3"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Mul_1"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Sum_1"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Reshape"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Reshape_1"
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Reshape"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Reshape_1"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Shape"
  op: "Shape"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Shape_1"
  op: "Shape"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Shape"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Shape_1"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Mul"
  op: "Mul"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/tuple/control_dependency_1"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Mul/Enter"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Mul"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Sum"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Mul_1/Enter"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Mul_1"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Sum_1"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Reshape"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Reshape_1"
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Reshape"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Reshape_1"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/AddN_3"
  op: "AddN"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter_grad/b_acc_2"
  input: "train/gradients/speller/LuongAttention/memory_layer/Tensordot/transpose_grad/transpose"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/MatMul/Enter_grad/b_acc_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/LuongAttention/mul_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_2/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/speller/LuongAttention/mul_grad/Shape_1"
  op: "Shape"
  input: "speller/LuongAttention/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/speller/LuongAttention/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/speller/LuongAttention/mul_grad/Shape"
  input: "train/gradients/speller/LuongAttention/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/LuongAttention/mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/AddN_3"
  input: "speller/LuongAttention/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/LuongAttention/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/speller/LuongAttention/mul_grad/Mul"
  input: "train/gradients/speller/LuongAttention/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/LuongAttention/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/speller/LuongAttention/mul_grad/Sum"
  input: "train/gradients/speller/LuongAttention/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/LuongAttention/mul_grad/Mul_1"
  op: "Mul"
  input: "listener/bilstm_2/Reshape"
  input: "train/gradients/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/LuongAttention/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/speller/LuongAttention/mul_grad/Mul_1"
  input: "train/gradients/speller/LuongAttention/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/LuongAttention/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/speller/LuongAttention/mul_grad/Sum_1"
  input: "train/gradients/speller/LuongAttention/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/LuongAttention/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/speller/LuongAttention/mul_grad/Reshape"
  input: "^train/gradients/speller/LuongAttention/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/speller/LuongAttention/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/speller/LuongAttention/mul_grad/Reshape"
  input: "^train/gradients/speller/LuongAttention/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/LuongAttention/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/LuongAttention/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/speller/LuongAttention/mul_grad/Reshape_1"
  input: "^train/gradients/speller/LuongAttention/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/LuongAttention/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/Reshape_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_2/Pad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/Reshape_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/speller/LuongAttention/mul_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_2/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_grad/Shape"
  op: "Shape"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_grad/Shape_1"
  op: "Const"
  input: "^train/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_grad/Shape"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_grad/Sum"
  op: "Sum"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_grad/Sum"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_grad/Sum_1"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_grad/Reshape"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_grad/Reshape_1"
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_grad/Reshape"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_grad/Reshape_1"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/Pad_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/Pad_grad/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/Pad_grad/stack"
  op: "Pack"
  input: "train/gradients/listener/bilstm_2/Pad_grad/Rank"
  input: "train/gradients/listener/bilstm_2/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/Pad_grad/Slice/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/Pad_grad/Slice"
  op: "Slice"
  input: "listener/bilstm_2/Pad/paddings"
  input: "train/gradients/listener/bilstm_2/Pad_grad/Slice/begin"
  input: "train/gradients/listener/bilstm_2/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/Pad_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/Pad_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_2/Pad_grad/Slice"
  input: "train/gradients/listener/bilstm_2/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/Pad_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_2/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/Pad_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/listener/bilstm_2/Reshape_grad/Reshape"
  input: "train/gradients/listener/bilstm_2/Pad_grad/Reshape"
  input: "train/gradients/listener/bilstm_2/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split_grad/concat"
  op: "ConcatV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_grad/TanhGrad"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Add_grad/tuple/control_dependency"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split_grad/concat/Const"
  op: "Const"
  input: "^train/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/concat_grad/mod"
  op: "FloorMod"
  input: "listener/bilstm_2/concat/axis"
  input: "train/gradients/listener/bilstm_2/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/concat_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/concat_grad/ShapeN"
  op: "ShapeN"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/transpose_1"
  input: "listener/bilstm_2/ReverseSequence"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/listener/bilstm_2/concat_grad/mod"
  input: "train/gradients/listener/bilstm_2/concat_grad/ShapeN"
  input: "train/gradients/listener/bilstm_2/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/listener/bilstm_2/Pad_grad/Slice_1"
  input: "train/gradients/listener/bilstm_2/concat_grad/ConcatOffset"
  input: "train/gradients/listener/bilstm_2/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/listener/bilstm_2/Pad_grad/Slice_1"
  input: "train/gradients/listener/bilstm_2/concat_grad/ConcatOffset:1"
  input: "train/gradients/listener/bilstm_2/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_2/concat_grad/Slice"
  input: "^train/gradients/listener/bilstm_2/concat_grad/Slice_1"
}
node {
  name: "train/gradients/listener/bilstm_2/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/concat_grad/Slice"
  input: "^train/gradients/listener/bilstm_2/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/concat_grad/Slice_1"
  input: "^train/gradients/listener/bilstm_2/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split_grad/concat"
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split_grad/concat"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/split_grad/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/concat_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/transpose_1_grad/transpose"
  op: "Transpose"
  input: "train/gradients/listener/bilstm_2/concat_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/ReverseSequence_grad/ReverseSequence"
  op: "ReverseSequence"
  input: "train/gradients/listener/bilstm_2/concat_grad/tuple/control_dependency_1"
  input: "listener/bilstm_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "batch_dim"
    value {
      i: 0
    }
  }
  attr {
    key: "seq_dim"
    value {
      i: 1
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6225
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6225
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6225
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_grad/MatMul_1/Enter"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6225
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6225
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_grad/MatMul"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_grad/MatMul"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6225
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_grad/MatMul_1"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6225
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd/Enter_grad/Switch:1"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArray"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Exit_2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayStack/range"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/transpose_1_grad/transpose"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_7"
  op: "ZerosLike"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Exit_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_8"
  op: "ZerosLike"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Exit_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/concat_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/transpose_1_grad/transpose"
  op: "Transpose"
  input: "train/gradients/listener/bilstm_2/ReverseSequence_grad/ReverseSequence"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/Const"
  op: "Const"
  input: "^train/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/Rank"
  op: "Const"
  input: "^train/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/mod"
  op: "FloorMod"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/Const"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/Shape"
  op: "Shape"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/ShapeN"
  op: "ShapeN"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/ShapeN/StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/ShapeN/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/ShapeN/Enter"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6097
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/ShapeN/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6097
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/ShapeN/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/Identity_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/ShapeN/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/Identity_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/ShapeN/Enter_1"
  input: "speller/decoder/while/Identity_4"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/ShapeN/StackPopV2_1/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/mod"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/ShapeN"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/ConcatOffset"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6097
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/ConcatOffset:1"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/Slice"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/Slice_1"
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/Slice"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6097
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/Slice_1"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6225
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6225
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6225
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul/Enter_grad/b_acc_1"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6225
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6225
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 6225
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul/Enter_grad/Switch:1"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6225
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6225
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6225
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "train/gradients/zeros_like_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Exit_4_grad/b_exit"
  op: "Enter"
  input: "train/gradients/zeros_like_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArray"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Exit_2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayStack/range"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/transpose_1_grad/transpose"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_9"
  op: "ZerosLike"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Exit_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_10"
  op: "ZerosLike"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Exit_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Shape"
  op: "Shape"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Shape"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Shape_1"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/tuple/control_dependency"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6097
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul/Enter"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/Floor"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6097
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6097
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Sum"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6097
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6097
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/Enter"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6097
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6097
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Sum_1"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6097
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Reshape"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Reshape"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6097
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Reshape_1"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6097
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Exit_2_grad/b_exit"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Exit_3_grad/b_exit"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Switch_4_grad/b_switch"
  op: "Merge"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Exit_4_grad/b_exit"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Switch_4_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "train/gradients/zeros_like_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Exit_4_grad/b_exit"
  op: "Enter"
  input: "train/gradients/zeros_like_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Shape"
  op: "Shape"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Shape_1"
  op: "Const"
  input: "^train/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Shape"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/tuple/control_dependency"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6097
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/Const"
  op: "Const"
  input: "^train/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Sum"
  op: "Sum"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Sum"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6097
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Neg"
  op: "Neg"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6097
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Neg/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Neg/f_acc"
  op: "StackV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Neg/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Neg/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Neg/Enter"
  input: "speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6097
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6097
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Neg"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6097
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv_1"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6097
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/mul"
  op: "Mul"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/mul_grad/tuple/control_dependency"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6097
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/mul"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Sum_1"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Reshape"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Reshape_1"
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Reshape"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6097
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Reshape_1"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/Switch_4_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
  input: "train/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_2_grad/Switch"
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_2_grad/Switch"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_2_grad/Switch:1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Switch_3_grad/b_switch"
  input: "train/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_3_grad/Switch"
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_3_grad/Switch"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_3_grad/Switch:1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_4_grad/Switch"
  op: "Switch"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Switch_4_grad/b_switch"
  input: "train/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Switch_4_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_4_grad/Switch"
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_4_grad/Switch"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Switch_4_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_4_grad/Switch:1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Switch_4_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Exit_2_grad/b_exit"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Exit_3_grad/b_exit"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Switch_4_grad/b_switch"
  op: "Merge"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Exit_4_grad/b_exit"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Switch_4_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/Const"
  op: "Const"
  input: "^train/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/Rank"
  op: "Const"
  input: "^train/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/mod"
  op: "FloorMod"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/Const"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/Shape"
  op: "Shape"
  input: "speller/decoder/while/Identity_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN"
  op: "ShapeN"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/Identity_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/Identity_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/Enter"
  input: "speller/decoder/while/Identity_9"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/StackPopV2/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/Identity_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/while/Identity_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/Enter_1"
  input: "speller/decoder/while/Identity_5"
  input: "^train/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/StackPopV2_1/Enter"
  input: "^train/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/speller/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/mod"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/tuple/control_dependency"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ConcatOffset"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/dropout/div_grad/tuple/control_dependency"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ConcatOffset:1"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/Slice"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/Slice_1"
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/Slice"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/Slice_1"
  input: "^train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Enter_4_grad/Exit"
  op: "Exit"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
  input: "train/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_2_grad/Switch"
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_2_grad/Switch"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_2_grad/Switch:1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Switch_3_grad/b_switch"
  input: "train/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_3_grad/Switch"
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_3_grad/Switch"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_3_grad/Switch:1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_4_grad/Switch"
  op: "Switch"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Switch_4_grad/b_switch"
  input: "train/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Switch_4_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_4_grad/Switch"
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_4_grad/Switch"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Switch_4_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_4_grad/Switch:1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Switch_4_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Identity_1"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPopV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/StackPopV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like/StackPopV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN/StackPopV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/StackPopV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/StackPopV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/StackPopV2"
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/Enter"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Identity_3"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/Select"
  op: "Select"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/control_dependency_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/Enter"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/GreaterEqual"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/Select_1"
  op: "Select"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/Select"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/Select_1"
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/Select"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/Select_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like"
  op: "ZerosLike"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/while/Identity_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/while/Identity_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like/Enter"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Identity_4"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_2_grad/Select"
  op: "Select"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/control_dependency_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_2_grad/Select_1"
  op: "Select"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_2_grad/Select"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_2_grad/Select_1"
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_2_grad/Select"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_2_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_2_grad/Select_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_2_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Enter_4_grad/Exit"
  op: "Exit"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/speller/decoder/while/Switch_5_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_grad/zeros_like/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_grad/zeros_like/Enter"
  op: "Enter"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_grad/Select"
  op: "Select"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_grad/Select_1"
  op: "Select"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_grad/zeros_like"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_grad/Select"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_grad/Select_1"
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_grad/Select"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_grad/Select_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Identity_1"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPopV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/StackPopV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN/StackPopV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/StackPopV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/StackPopV2"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/StackPopV2"
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/Enter"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Identity_3"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/Select"
  op: "Select"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/control_dependency_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/Enter"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/GreaterEqual"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/Select_1"
  op: "Select"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/Select"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/Select_1"
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/Select"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/Select_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like"
  op: "ZerosLike"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/while/Identity_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/while/Identity_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/Enter"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Identity_4"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_2_grad/Select"
  op: "Select"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/control_dependency_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_2_grad/Select_1"
  op: "Select"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_2_grad/Select"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_2_grad/Select_1"
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_2_grad/Select"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_2_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_2_grad/Select_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_2_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/AddN_4"
  op: "AddN"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_2_grad/tuple/control_dependency_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_2_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Shape_1"
  op: "Shape"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Shape"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Shape_1"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul"
  op: "Mul"
  input: "train/gradients/AddN_4"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul/Enter"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_2"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Sum"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  input: "train/gradients/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1/Enter"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Tanh_1"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Sum_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Reshape"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Reshape_1"
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Reshape"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Reshape_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_grad/zeros_like/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_grad/zeros_like/Enter"
  op: "Enter"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_grad/Select"
  op: "Select"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_grad/Select_1"
  op: "Select"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_grad/zeros_like"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_grad/Select"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_grad/Select_1"
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_grad/Select"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_grad/Select_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/AddN_5"
  op: "AddN"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_2_grad/tuple/control_dependency_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_2_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Shape_1"
  op: "Shape"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Shape"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Shape_1"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul"
  op: "Mul"
  input: "train/gradients/AddN_5"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul/Enter"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_2"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Sum"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  input: "train/gradients/AddN_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1/Enter"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Tanh_1"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Sum_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Reshape"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Reshape_1"
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Reshape"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Reshape_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/AddN_6"
  op: "AddN"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/tuple/control_dependency_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Shape_1"
  op: "Shape"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Shape"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Shape_1"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_6"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Sum"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_6"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Sum_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Reshape"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Reshape_1"
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Reshape"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Reshape_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Shape_1"
  op: "Shape"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Shape"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Shape_1"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul/Enter"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Sum"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Sum_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Reshape"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Reshape_1"
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Reshape"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Reshape_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Shape_1"
  op: "Shape"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Shape"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Shape_1"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul"
  op: "Mul"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul/Enter"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Tanh"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Sum"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1/Enter"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_1"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Sum_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Reshape"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Reshape_1"
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Reshape"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Reshape_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/AddN_7"
  op: "AddN"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/tuple/control_dependency_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Shape_1"
  op: "Shape"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Shape"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Shape_1"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_7"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Sum"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_7"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Sum_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Reshape"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Reshape_1"
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Reshape"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Reshape_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/AddN_8"
  op: "AddN"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Shape_1"
  op: "Shape"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Shape"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Shape_1"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul/Enter"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Sum"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Sum_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Reshape"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Reshape_1"
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Reshape"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Reshape_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Shape_1"
  op: "Shape"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Shape"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Shape_1"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul"
  op: "Mul"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul/Enter"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Tanh"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Sum"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1/Enter"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_1"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Sum_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Reshape"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Reshape_1"
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Reshape"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Reshape_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/AddN_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/split:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Shape_1"
  op: "Const"
  input: "^train/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Shape"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Sum"
  op: "Sum"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Sum"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Sum_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Reshape"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Reshape_1"
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Reshape"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Reshape_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/AddN_9"
  op: "AddN"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/split_grad/concat"
  op: "ConcatV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Tanh_grad/TanhGrad"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/split_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/split_grad/concat/Const"
  op: "Const"
  input: "^train/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/AddN_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/split:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Shape_1"
  op: "Const"
  input: "^train/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Shape"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Sum"
  op: "Sum"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Sum"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Sum_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Reshape"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Reshape_1"
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Reshape"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Reshape_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/split_grad/concat"
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/split_grad/concat"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/split_grad/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/split_grad/concat"
  op: "ConcatV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Tanh_grad/TanhGrad"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/split_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/split_grad/concat/Const"
  op: "Const"
  input: "^train/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 640
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1/Enter"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 640
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 640
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 640
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter_grad/Switch:1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/split_grad/concat"
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/split_grad/concat"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/split_grad/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/Const"
  op: "Const"
  input: "^train/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/Rank"
  op: "Const"
  input: "^train/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/mod"
  op: "FloorMod"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/Const"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN"
  op: "ShapeN"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like/StackPopV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN/Enter"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/mod"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ConcatOffset"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ConcatOffset:1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/Slice"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/Slice_1"
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/Slice"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/Slice_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter_grad/Switch:1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 640
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1/Enter"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 640
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 640
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 640
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter_grad/Switch:1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Shape"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Shape_1"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/Enter"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/Floor"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Sum"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/Enter"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Sum_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Reshape"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Reshape"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Reshape_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/AddN_10"
  op: "AddN"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_2_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Select_2_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/Const"
  op: "Const"
  input: "^train/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/Rank"
  op: "Const"
  input: "^train/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/mod"
  op: "FloorMod"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/Const"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN"
  op: "ShapeN"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/StackPopV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN/Enter"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/mod"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ConcatOffset"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ConcatOffset:1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/Slice"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/Slice_1"
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/Slice"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/Slice_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter_grad/Switch:1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/Shape_1"
  op: "Const"
  input: "^train/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/Shape"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv/Const"
  op: "Const"
  input: "^train/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/Sum"
  op: "Sum"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/Sum"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg"
  op: "Neg"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/Enter"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  input: "^train/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/StackPopV2/Enter"
  input: "^train/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/mul"
  op: "Mul"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/mul_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/mul"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/Sum_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/Reshape"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/Reshape_1"
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/Reshape"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/Reshape_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/Switch_4_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/AddN_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Shape"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Shape_1"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/Enter"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/Floor"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Sum"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/Enter"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Sum_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Reshape"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Reshape"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Reshape_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/AddN_11"
  op: "AddN"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_2_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Select_2_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^train/gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/dropout/div_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/Shape_1"
  op: "Const"
  input: "^train/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/Shape"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv/Const"
  op: "Const"
  input: "^train/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/Sum"
  op: "Sum"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/Sum"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg"
  op: "Neg"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/Enter"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  input: "^train/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/StackPopV2/Enter"
  input: "^train/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/mul"
  op: "Mul"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/mul_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/mul"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/Sum_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/Reshape"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/Reshape_1"
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/Reshape"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/Reshape_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/Switch_4_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/AddN_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "train/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^train/gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/dropout/div_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArray_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayUnstack/range"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "train/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "listener/bilstm_2/bidirectional_rnn/fw/fw/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/transpose_grad/transpose"
  op: "Transpose"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArray_1"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayUnstack/range"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "listener/bilstm_2/bidirectional_rnn/bw/bw/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/transpose_grad/transpose"
  op: "Transpose"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/ReverseSequence_grad/ReverseSequence"
  op: "ReverseSequence"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/transpose_grad/transpose"
  input: "listener/bilstm_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "batch_dim"
    value {
      i: 0
    }
  }
  attr {
    key: "seq_dim"
    value {
      i: 1
    }
  }
}
node {
  name: "train/gradients/AddN_12"
  op: "AddN"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/transpose_grad/transpose"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/ReverseSequence_grad/ReverseSequence"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/transpose_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/Reshape_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_1/Pad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/Reshape_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/AddN_12"
  input: "train/gradients/listener/bilstm_1/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/Pad_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/Pad_grad/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/Pad_grad/stack"
  op: "Pack"
  input: "train/gradients/listener/bilstm_1/Pad_grad/Rank"
  input: "train/gradients/listener/bilstm_1/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/Pad_grad/Slice/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/Pad_grad/Slice"
  op: "Slice"
  input: "listener/bilstm_1/Pad/paddings"
  input: "train/gradients/listener/bilstm_1/Pad_grad/Slice/begin"
  input: "train/gradients/listener/bilstm_1/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/Pad_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/Pad_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_1/Pad_grad/Slice"
  input: "train/gradients/listener/bilstm_1/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/Pad_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/Pad_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/listener/bilstm_1/Reshape_grad/Reshape"
  input: "train/gradients/listener/bilstm_1/Pad_grad/Reshape"
  input: "train/gradients/listener/bilstm_1/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/concat_grad/mod"
  op: "FloorMod"
  input: "listener/bilstm_1/concat/axis"
  input: "train/gradients/listener/bilstm_1/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/concat_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/concat_grad/ShapeN"
  op: "ShapeN"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/transpose_1"
  input: "listener/bilstm_1/ReverseSequence"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/listener/bilstm_1/concat_grad/mod"
  input: "train/gradients/listener/bilstm_1/concat_grad/ShapeN"
  input: "train/gradients/listener/bilstm_1/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/listener/bilstm_1/Pad_grad/Slice_1"
  input: "train/gradients/listener/bilstm_1/concat_grad/ConcatOffset"
  input: "train/gradients/listener/bilstm_1/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/listener/bilstm_1/Pad_grad/Slice_1"
  input: "train/gradients/listener/bilstm_1/concat_grad/ConcatOffset:1"
  input: "train/gradients/listener/bilstm_1/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_1/concat_grad/Slice"
  input: "^train/gradients/listener/bilstm_1/concat_grad/Slice_1"
}
node {
  name: "train/gradients/listener/bilstm_1/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/concat_grad/Slice"
  input: "^train/gradients/listener/bilstm_1/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/concat_grad/Slice_1"
  input: "^train/gradients/listener/bilstm_1/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/concat_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/transpose_1_grad/transpose"
  op: "Transpose"
  input: "train/gradients/listener/bilstm_1/concat_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/ReverseSequence_grad/ReverseSequence"
  op: "ReverseSequence"
  input: "train/gradients/listener/bilstm_1/concat_grad/tuple/control_dependency_1"
  input: "IteratorGetNext:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "batch_dim"
    value {
      i: 0
    }
  }
  attr {
    key: "seq_dim"
    value {
      i: 1
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArray"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Exit_2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayStack/range"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/transpose_1_grad/transpose"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_11"
  op: "ZerosLike"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Exit_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_12"
  op: "ZerosLike"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Exit_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/concat_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/transpose_1_grad/transpose"
  op: "Transpose"
  input: "train/gradients/listener/bilstm_1/ReverseSequence_grad/ReverseSequence"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "train/gradients/zeros_like_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Exit_4_grad/b_exit"
  op: "Enter"
  input: "train/gradients/zeros_like_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArray"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Exit_2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayStack/range"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/transpose_1_grad/transpose"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_13"
  op: "ZerosLike"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Exit_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_14"
  op: "ZerosLike"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Exit_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Exit_2_grad/b_exit"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Exit_3_grad/b_exit"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Switch_4_grad/b_switch"
  op: "Merge"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Exit_4_grad/b_exit"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Switch_4_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "train/gradients/zeros_like_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Exit_4_grad/b_exit"
  op: "Enter"
  input: "train/gradients/zeros_like_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
  input: "train/gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_2_grad/Switch"
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_2_grad/Switch"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_2_grad/Switch:1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Switch_3_grad/b_switch"
  input: "train/gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_3_grad/Switch"
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_3_grad/Switch"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_3_grad/Switch:1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_4_grad/Switch"
  op: "Switch"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Switch_4_grad/b_switch"
  input: "train/gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Switch_4_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_4_grad/Switch"
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_4_grad/Switch"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Switch_4_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_4_grad/Switch:1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Switch_4_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Exit_2_grad/b_exit"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Exit_3_grad/b_exit"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Switch_4_grad/b_switch"
  op: "Merge"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Exit_4_grad/b_exit"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Switch_4_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Enter_4_grad/Exit"
  op: "Exit"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
  input: "train/gradients/b_count_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_2_grad/Switch"
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_2_grad/Switch"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_2_grad/Switch:1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Switch_3_grad/b_switch"
  input: "train/gradients/b_count_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_3_grad/Switch"
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_3_grad/Switch"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_3_grad/Switch:1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_4_grad/Switch"
  op: "Switch"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Switch_4_grad/b_switch"
  input: "train/gradients/b_count_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Switch_4_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_4_grad/Switch"
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_4_grad/Switch"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Switch_4_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_4_grad/Switch:1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Switch_4_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Identity_1"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPopV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/StackPopV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like/StackPopV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN/StackPopV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/StackPopV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/StackPopV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/StackPopV2"
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/Enter"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Identity_3"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select"
  op: "Select"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/control_dependency_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/Enter"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/GreaterEqual"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select_1"
  op: "Select"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select_1"
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like"
  op: "ZerosLike"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/while/Identity_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/while/Identity_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like/Enter"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Identity_4"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_2_grad/Select"
  op: "Select"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/control_dependency_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_2_grad/Select_1"
  op: "Select"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_2_grad/Select"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_2_grad/Select_1"
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_2_grad/Select"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_2_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_2_grad/Select_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_2_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Enter_4_grad/Exit"
  op: "Exit"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_grad/zeros_like/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_grad/zeros_like/Enter"
  op: "Enter"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_grad/Select"
  op: "Select"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_grad/Select_1"
  op: "Select"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_grad/zeros_like"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_grad/Select"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_grad/Select_1"
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_grad/Select"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_grad/Select_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Identity_1"
  input: "^train/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPopV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/StackPopV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN/StackPopV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/StackPopV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/StackPopV2"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/StackPopV2"
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/Enter"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Identity_3"
  input: "^train/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPopV2/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select"
  op: "Select"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/control_dependency_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/Enter"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/GreaterEqual"
  input: "^train/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select_1"
  op: "Select"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select_1"
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like"
  op: "ZerosLike"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/while/Identity_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/while/Identity_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/Enter"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Identity_4"
  input: "^train/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/StackPopV2/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_2_grad/Select"
  op: "Select"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/control_dependency_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_2_grad/Select_1"
  op: "Select"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_2_grad/Select"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_2_grad/Select_1"
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_2_grad/Select"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_2_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_2_grad/Select_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_2_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/AddN_13"
  op: "AddN"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_2_grad/tuple/control_dependency_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_2_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Shape_1"
  op: "Shape"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Shape"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Shape_1"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul"
  op: "Mul"
  input: "train/gradients/AddN_13"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul/Enter"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_2"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Sum"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  input: "train/gradients/AddN_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1/Enter"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Tanh_1"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Sum_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Reshape"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Reshape_1"
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Reshape"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Reshape_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_grad/zeros_like/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_grad/zeros_like/Enter"
  op: "Enter"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_grad/Select"
  op: "Select"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_grad/Select_1"
  op: "Select"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_grad/zeros_like"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_grad/Select"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_grad/Select_1"
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_grad/Select"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_grad/Select_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/AddN_14"
  op: "AddN"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_2_grad/tuple/control_dependency_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_2_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Shape_1"
  op: "Shape"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Shape"
  input: "^train/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Shape_1"
  input: "^train/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul"
  op: "Mul"
  input: "train/gradients/AddN_14"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul/Enter"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_2"
  input: "^train/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Sum"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  input: "train/gradients/AddN_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1/Enter"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Tanh_1"
  input: "^train/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Sum_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Reshape"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Reshape_1"
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Reshape"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Reshape_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/AddN_15"
  op: "AddN"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/tuple/control_dependency_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Shape_1"
  op: "Shape"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Shape"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Shape_1"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_15"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Sum"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_15"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Sum_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Reshape"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Reshape_1"
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Reshape"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Reshape_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Shape_1"
  op: "Shape"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Shape"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Shape_1"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul/Enter"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Sum"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Sum_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Reshape"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Reshape_1"
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Reshape"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Reshape_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Shape_1"
  op: "Shape"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Shape"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Shape_1"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul"
  op: "Mul"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul/Enter"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Tanh"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Sum"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1/Enter"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_1"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Sum_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Reshape"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Reshape_1"
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Reshape"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Reshape_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/AddN_16"
  op: "AddN"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/tuple/control_dependency_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Shape_1"
  op: "Shape"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Shape"
  input: "^train/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Shape_1"
  input: "^train/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_16"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Sum"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_16"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Sum_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Reshape"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Reshape_1"
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Reshape"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Reshape_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/AddN_17"
  op: "AddN"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Shape_1"
  op: "Shape"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Shape"
  input: "^train/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Shape_1"
  input: "^train/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul/Enter"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid"
  input: "^train/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Sum"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Sum_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Reshape"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Reshape_1"
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Reshape"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Reshape_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Shape_1"
  op: "Shape"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Shape"
  input: "^train/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Shape_1"
  input: "^train/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul"
  op: "Mul"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul/Enter"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Tanh"
  input: "^train/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Sum"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1/Enter"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_1"
  input: "^train/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Sum_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Reshape"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Reshape_1"
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Reshape"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Reshape_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/AddN_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/split:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Shape_1"
  op: "Const"
  input: "^train/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Shape"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Sum"
  op: "Sum"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Sum"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Sum_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Reshape"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Reshape_1"
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Reshape"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Reshape_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/AddN_18"
  op: "AddN"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/split_grad/concat"
  op: "ConcatV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Tanh_grad/TanhGrad"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/split_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/split_grad/concat/Const"
  op: "Const"
  input: "^train/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/AddN_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/split:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Shape_1"
  op: "Const"
  input: "^train/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Shape"
  input: "^train/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Sum"
  op: "Sum"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Sum"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Sum_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Reshape"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Reshape_1"
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Reshape"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Reshape_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/split_grad/concat"
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/split_grad/concat"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/split_grad/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/split_grad/concat"
  op: "ConcatV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Tanh_grad/TanhGrad"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/split_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/split_grad/concat/Const"
  op: "Const"
  input: "^train/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1/Enter"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter_grad/Switch:1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/split_grad/concat"
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/split_grad/concat"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/split_grad/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/Const"
  op: "Const"
  input: "^train/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/Rank"
  op: "Const"
  input: "^train/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/mod"
  op: "FloorMod"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/Const"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN"
  op: "ShapeN"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like/StackPopV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN/Enter"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/mod"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ConcatOffset"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ConcatOffset:1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/Slice"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/Slice_1"
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/Slice"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/Slice_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter_grad/Switch:1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1/Enter"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat"
  input: "^train/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter_grad/Switch:1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Shape"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Shape_1"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/Enter"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/Floor"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Sum"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/Enter"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Sum_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Reshape"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Reshape"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Reshape_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/AddN_19"
  op: "AddN"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_2_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Select_2_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/Const"
  op: "Const"
  input: "^train/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/Rank"
  op: "Const"
  input: "^train/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/mod"
  op: "FloorMod"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/Const"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN"
  op: "ShapeN"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/StackPopV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN/Enter"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul"
  input: "^train/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN/StackPopV2/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/mod"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ConcatOffset"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ConcatOffset:1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/Slice"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/Slice_1"
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/Slice"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/Slice_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter_grad/Switch:1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Shape_1"
  op: "Const"
  input: "^train/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Shape"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv/Const"
  op: "Const"
  input: "^train/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Sum"
  op: "Sum"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Sum"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg"
  op: "Neg"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/Enter"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  input: "^train/gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/StackPopV2/Enter"
  input: "^train/gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/mul"
  op: "Mul"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/mul"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Sum_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Reshape"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Reshape_1"
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Reshape"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Reshape_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/Switch_4_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/AddN_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Shape"
  input: "^train/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Shape_1"
  input: "^train/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/Enter"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/Floor"
  input: "^train/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Sum"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/Enter"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div"
  input: "^train/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Sum_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Reshape"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Reshape"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Reshape_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/AddN_20"
  op: "AddN"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_2_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Select_2_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^train/gradients/Sub_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Shape_1"
  op: "Const"
  input: "^train/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Shape"
  input: "^train/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv/Const"
  op: "Const"
  input: "^train/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Sum"
  op: "Sum"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Sum"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg"
  op: "Neg"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/Enter"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  input: "^train/gradients/Add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/StackPopV2/Enter"
  input: "^train/gradients/Sub_4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/mul"
  op: "Mul"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/mul"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Sum_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Reshape"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Reshape_1"
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Reshape"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Reshape_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/Switch_4_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/AddN_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "train/gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^train/gradients/Sub_4"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArray_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/range"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "train/gradients/b_count_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "listener/bilstm_1/bidirectional_rnn/fw/fw/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/transpose_grad/transpose"
  op: "Transpose"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArray_1"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/range"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "listener/bilstm_1/bidirectional_rnn/bw/bw/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/transpose_grad/transpose"
  op: "Transpose"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/ReverseSequence_grad/ReverseSequence"
  op: "ReverseSequence"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/transpose_grad/transpose"
  input: "IteratorGetNext:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "batch_dim"
    value {
      i: 0
    }
  }
  attr {
    key: "seq_dim"
    value {
      i: 1
    }
  }
}
node {
  name: "train/gradients/AddN_21"
  op: "AddN"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/transpose_grad/transpose"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/ReverseSequence_grad/ReverseSequence"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/transpose_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/concat_grad/mod"
  op: "FloorMod"
  input: "listener/bilstm_0/concat/axis"
  input: "train/gradients/listener/bilstm_0/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/concat_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/concat_grad/ShapeN"
  op: "ShapeN"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/transpose_1"
  input: "listener/bilstm_0/ReverseSequence"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/listener/bilstm_0/concat_grad/mod"
  input: "train/gradients/listener/bilstm_0/concat_grad/ShapeN"
  input: "train/gradients/listener/bilstm_0/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/AddN_21"
  input: "train/gradients/listener/bilstm_0/concat_grad/ConcatOffset"
  input: "train/gradients/listener/bilstm_0/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/AddN_21"
  input: "train/gradients/listener/bilstm_0/concat_grad/ConcatOffset:1"
  input: "train/gradients/listener/bilstm_0/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_0/concat_grad/Slice"
  input: "^train/gradients/listener/bilstm_0/concat_grad/Slice_1"
}
node {
  name: "train/gradients/listener/bilstm_0/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/concat_grad/Slice"
  input: "^train/gradients/listener/bilstm_0/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/concat_grad/Slice_1"
  input: "^train/gradients/listener/bilstm_0/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/concat_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/transpose_1_grad/transpose"
  op: "Transpose"
  input: "train/gradients/listener/bilstm_0/concat_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/ReverseSequence_grad/ReverseSequence"
  op: "ReverseSequence"
  input: "train/gradients/listener/bilstm_0/concat_grad/tuple/control_dependency_1"
  input: "IteratorGetNext:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "batch_dim"
    value {
      i: 0
    }
  }
  attr {
    key: "seq_dim"
    value {
      i: 1
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArray"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Exit_2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArrayStack/range"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/transpose_1_grad/transpose"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_15"
  op: "ZerosLike"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Exit_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_16"
  op: "ZerosLike"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Exit_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/concat_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/transpose_1_grad/transpose"
  op: "Transpose"
  input: "train/gradients/listener/bilstm_0/ReverseSequence_grad/ReverseSequence"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "train/gradients/zeros_like_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Exit_4_grad/b_exit"
  op: "Enter"
  input: "train/gradients/zeros_like_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArray"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Exit_2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArrayStack/range"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/transpose_1_grad/transpose"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_17"
  op: "ZerosLike"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Exit_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_18"
  op: "ZerosLike"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Exit_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Exit_2_grad/b_exit"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Exit_3_grad/b_exit"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Switch_4_grad/b_switch"
  op: "Merge"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Exit_4_grad/b_exit"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Switch_4_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "train/gradients/zeros_like_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Exit_4_grad/b_exit"
  op: "Enter"
  input: "train/gradients/zeros_like_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
  input: "train/gradients/b_count_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_2_grad/Switch"
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_2_grad/Switch"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_2_grad/Switch:1"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Switch_3_grad/b_switch"
  input: "train/gradients/b_count_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_3_grad/Switch"
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_3_grad/Switch"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_3_grad/Switch:1"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_4_grad/Switch"
  op: "Switch"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Switch_4_grad/b_switch"
  input: "train/gradients/b_count_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Switch_4_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_4_grad/Switch"
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_4_grad/Switch"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Switch_4_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_4_grad/Switch:1"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Switch_4_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Exit_2_grad/b_exit"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Exit_3_grad/b_exit"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Switch_4_grad/b_switch"
  op: "Merge"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Exit_4_grad/b_exit"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Switch_4_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Enter_4_grad/Exit"
  op: "Exit"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
  input: "train/gradients/b_count_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_2_grad/Switch"
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_2_grad/Switch"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_2_grad/Switch:1"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Switch_3_grad/b_switch"
  input: "train/gradients/b_count_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_3_grad/Switch"
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_3_grad/Switch"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_3_grad/Switch:1"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_4_grad/Switch"
  op: "Switch"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Switch_4_grad/b_switch"
  input: "train/gradients/b_count_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Switch_4_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_4_grad/Switch"
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_4_grad/Switch"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Switch_4_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_4_grad/Switch:1"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Switch_4_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/fw/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/fw/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Identity_1"
  input: "^train/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^train/gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPopV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/StackPopV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like/StackPopV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN/StackPopV2"
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/fw/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/fw/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/Enter"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Identity_3"
  input: "^train/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/StackPopV2/Enter"
  input: "^train/gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/Select"
  op: "Select"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/control_dependency_1"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/fw/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/fw/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/Enter"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/GreaterEqual"
  input: "^train/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPopV2/Enter"
  input: "^train/gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/Select_1"
  op: "Select"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/Select"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/Select_1"
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/Select"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/Select_1"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like"
  op: "ZerosLike"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/fw/while/Identity_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/fw/while/Identity_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like/Enter"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Identity_4"
  input: "^train/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like/StackPopV2/Enter"
  input: "^train/gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_2_grad/Select"
  op: "Select"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/control_dependency_1"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_2_grad/Select_1"
  op: "Select"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Merge_4_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_2_grad/Select"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_2_grad/Select_1"
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_2_grad/Select"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_2_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_2_grad/Select_1"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_2_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Enter_4_grad/Exit"
  op: "Exit"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_grad/zeros_like/Enter"
  input: "^train/gradients/Sub_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_grad/zeros_like/Enter"
  op: "Enter"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_grad/Select"
  op: "Select"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_grad/Select_1"
  op: "Select"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_grad/zeros_like"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_grad/Select"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_grad/Select_1"
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_grad/Select"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_grad/Select_1"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "train/gradients"
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/bw/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/bw/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Identity_1"
  input: "^train/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^train/gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPopV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/StackPopV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN/StackPopV2"
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/bw/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/bw/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/Enter"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Identity_3"
  input: "^train/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPopV2/Enter"
  input: "^train/gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/Select"
  op: "Select"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/control_dependency_1"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/bw/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/bw/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/Enter"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/GreaterEqual"
  input: "^train/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2/Enter"
  input: "^train/gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/Select_1"
  op: "Select"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/Select"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/Select_1"
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/Select"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/Select_1"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like"
  op: "ZerosLike"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/bw/while/Identity_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/bw/while/Identity_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/Enter"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Identity_4"
  input: "^train/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/StackPopV2/Enter"
  input: "^train/gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_2_grad/Select"
  op: "Select"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/control_dependency_1"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_2_grad/Select_1"
  op: "Select"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Merge_4_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_2_grad/Select"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_2_grad/Select_1"
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_2_grad/Select"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_2_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_2_grad/Select_1"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_2_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/AddN_22"
  op: "AddN"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_2_grad/tuple/control_dependency_1"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_2_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Shape_1"
  op: "Shape"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Shape"
  input: "^train/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Shape_1"
  input: "^train/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul"
  op: "Mul"
  input: "train/gradients/AddN_22"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul/Enter"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_2"
  input: "^train/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Sum"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  input: "train/gradients/AddN_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1/Enter"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Tanh_1"
  input: "^train/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Sum_1"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Reshape"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Reshape_1"
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Reshape"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Reshape_1"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_grad/zeros_like/Enter"
  input: "^train/gradients/Sub_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_grad/zeros_like/Enter"
  op: "Enter"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_grad/Select"
  op: "Select"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_grad/Select_1"
  op: "Select"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_grad/zeros_like"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_grad/Select"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_grad/Select_1"
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_grad/Select"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_grad/Select_1"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/AddN_23"
  op: "AddN"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_2_grad/tuple/control_dependency_1"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_2_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Shape_1"
  op: "Shape"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Shape"
  input: "^train/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Shape_1"
  input: "^train/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul"
  op: "Mul"
  input: "train/gradients/AddN_23"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul/Enter"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_2"
  input: "^train/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Sum"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  input: "train/gradients/AddN_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1/Enter"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Tanh_1"
  input: "^train/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Sum_1"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Reshape"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Reshape_1"
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Reshape"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Reshape_1"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/AddN_24"
  op: "AddN"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/tuple/control_dependency_1"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Shape_1"
  op: "Shape"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Shape"
  input: "^train/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Shape_1"
  input: "^train/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_24"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Sum"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_24"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Sum_1"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Reshape"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Reshape_1"
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Reshape"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Reshape_1"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul_1/StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/Mul/StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Shape_1"
  op: "Shape"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Shape"
  input: "^train/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Shape_1"
  input: "^train/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul/Enter"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid"
  input: "^train/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Sum"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul_1"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Sum_1"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Reshape"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Reshape_1"
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Reshape"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Reshape_1"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Shape_1"
  op: "Shape"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Shape"
  input: "^train/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Shape_1"
  input: "^train/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul"
  op: "Mul"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency_1"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul/Enter"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Tanh"
  input: "^train/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Sum"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1/Enter"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_1"
  input: "^train/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Sum_1"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Reshape"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Reshape_1"
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Reshape"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Reshape_1"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/AddN_25"
  op: "AddN"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/tuple/control_dependency_1"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Shape_1"
  op: "Shape"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Shape"
  input: "^train/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Shape_1"
  input: "^train/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_25"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Sum"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_25"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Sum_1"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Reshape"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Reshape_1"
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Reshape"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Reshape_1"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/AddN_26"
  op: "AddN"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Shape_1"
  op: "Shape"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Shape"
  input: "^train/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Shape_1"
  input: "^train/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul/Enter"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid"
  input: "^train/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Sum"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul_1"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Sum_1"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Reshape"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Reshape_1"
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Reshape"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Reshape_1"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Shape_1"
  op: "Shape"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Shape"
  input: "^train/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/Enter_1"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Shape_1"
  input: "^train/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^train/gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul"
  op: "Mul"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency_1"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul/Enter"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Tanh"
  input: "^train/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2/Enter"
  input: "^train/gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Sum"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1"
  op: "Mul"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1/Enter"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_1"
  input: "^train/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Sum_1"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Reshape"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Reshape_1"
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Reshape"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Reshape_1"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/AddN_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/split:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Shape_1"
  op: "Const"
  input: "^train/gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Shape"
  input: "^train/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Sum"
  op: "Sum"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Sum"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Sum_1"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Reshape"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Reshape_1"
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Reshape"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Reshape_1"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/AddN_27"
  op: "AddN"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/Mul/StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul_1/StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/Mul/StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/split_grad/concat"
  op: "ConcatV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Tanh_grad/TanhGrad"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Add_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/split_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/split_grad/concat/Const"
  op: "Const"
  input: "^train/gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/AddN_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/split:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Shape_1"
  op: "Const"
  input: "^train/gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Shape"
  input: "^train/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^train/gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Sum"
  op: "Sum"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Sum"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Sum_1"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Reshape"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Reshape_1"
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Reshape"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Reshape_1"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/split_grad/concat"
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/split_grad/concat"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/split_grad/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/split_grad/concat"
  op: "ConcatV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Tanh_grad/TanhGrad"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Add_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/split_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/split_grad/concat/Const"
  op: "Const"
  input: "^train/gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 167
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1/Enter"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat"
  input: "^train/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 167
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 167
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 167
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter_grad/Switch:1"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/split_grad/concat"
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/split_grad/concat"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/split_grad/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/Const"
  op: "Const"
  input: "^train/gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/Rank"
  op: "Const"
  input: "^train/gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/mod"
  op: "FloorMod"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/Const"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN"
  op: "ShapeN"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN/StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_2_grad/zeros_like/StackPopV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/fw/while/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/fw/while/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN/Enter"
  input: "listener/bilstm_0/bidirectional_rnn/fw/fw/while/dropout/mul"
  input: "^train/gradients/Add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 39
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN/StackPopV2/Enter"
  input: "^train/gradients/Sub_5"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 39
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/mod"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ConcatOffset"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 39
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ConcatOffset:1"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/Slice"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/Slice_1"
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/Slice"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 39
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/Slice_1"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_1"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter_grad/Switch:1"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 167
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1/Enter"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat"
  input: "^train/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 167
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^train/gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 167
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 167
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter_grad/Switch:1"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/AddN_28"
  op: "AddN"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_2_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Select_2_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/Const"
  op: "Const"
  input: "^train/gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/Rank"
  op: "Const"
  input: "^train/gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/mod"
  op: "FloorMod"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/Const"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/Shape"
  op: "Shape"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN"
  op: "ShapeN"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN/StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_2_grad/zeros_like/StackPopV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/bw/while/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/bw/while/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN/Enter"
  input: "listener/bilstm_0/bidirectional_rnn/bw/bw/while/dropout/mul"
  input: "^train/gradients/Add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 39
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN/StackPopV2/Enter"
  input: "^train/gradients/Sub_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 39
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/mod"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ConcatOffset"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 39
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ConcatOffset:1"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/Slice"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/Slice_1"
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/Slice"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 39
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/Slice_1"
  input: "^train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_1"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_2"
  input: "train/gradients/b_count_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter_grad/Switch:1"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/Switch_4_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/AddN_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/AddN_29"
  op: "AddN"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_2_grad/tuple/control_dependency"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Select_2_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/Switch_4_grad_1/NextIteration"
  op: "NextIteration"
  input: "train/gradients/AddN_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train/beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "train/beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/beta1_power/Assign"
  op: "Assign"
  input: "train/beta1_power"
  input: "train/beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/beta1_power/read"
  op: "Identity"
  input: "train/beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "train/beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/beta2_power/Assign"
  op: "Assign"
  input: "train/beta2_power"
  input: "train/beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/beta2_power/read"
  op: "Identity"
  input: "train/beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\247\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 167
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam/Assign"
  op: "Assign"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam/read"
  op: "Identity"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\247\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 167
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1/Assign"
  op: "Assign"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1/read"
  op: "Identity"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam/Assign"
  op: "Assign"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam/read"
  op: "Identity"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1/Assign"
  op: "Assign"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1/read"
  op: "Identity"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\247\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 167
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam/Assign"
  op: "Assign"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam/read"
  op: "Identity"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\247\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 167
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1/Assign"
  op: "Assign"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1/read"
  op: "Identity"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam/Assign"
  op: "Assign"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam/read"
  op: "Identity"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1/Assign"
  op: "Assign"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1/read"
  op: "Identity"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam/Assign"
  op: "Assign"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam/read"
  op: "Identity"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1/Assign"
  op: "Assign"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1/read"
  op: "Identity"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam/Assign"
  op: "Assign"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam/read"
  op: "Identity"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1/Assign"
  op: "Assign"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1/read"
  op: "Identity"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam/Assign"
  op: "Assign"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam/read"
  op: "Identity"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1/Assign"
  op: "Assign"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1/read"
  op: "Identity"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam/Assign"
  op: "Assign"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam/read"
  op: "Identity"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1/Assign"
  op: "Assign"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1/read"
  op: "Identity"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 640
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam/Assign"
  op: "Assign"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam/read"
  op: "Identity"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 640
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1/Assign"
  op: "Assign"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1/read"
  op: "Identity"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam/Assign"
  op: "Assign"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam/read"
  op: "Identity"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1/Assign"
  op: "Assign"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1/read"
  op: "Identity"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 640
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam/Assign"
  op: "Assign"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam/read"
  op: "Identity"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 640
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1/Assign"
  op: "Assign"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1/read"
  op: "Identity"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam/Assign"
  op: "Assign"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam/read"
  op: "Identity"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1/Assign"
  op: "Assign"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1/read"
  op: "Identity"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "speller/memory_layer/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/memory_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "speller/memory_layer/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/memory_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "speller/memory_layer/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "speller/memory_layer/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "speller/memory_layer/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/memory_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "speller/memory_layer/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/memory_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "speller/memory_layer/kernel/Adam/Assign"
  op: "Assign"
  input: "speller/memory_layer/kernel/Adam"
  input: "speller/memory_layer/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/memory_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "speller/memory_layer/kernel/Adam/read"
  op: "Identity"
  input: "speller/memory_layer/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/memory_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "speller/memory_layer/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/memory_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "speller/memory_layer/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/memory_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "speller/memory_layer/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "speller/memory_layer/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "speller/memory_layer/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/memory_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "speller/memory_layer/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/memory_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "speller/memory_layer/kernel/Adam_1/Assign"
  op: "Assign"
  input: "speller/memory_layer/kernel/Adam_1"
  input: "speller/memory_layer/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/memory_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "speller/memory_layer/kernel/Adam_1/read"
  op: "Identity"
  input: "speller/memory_layer/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/memory_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "Q\030\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6225
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6225
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6225
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam/Assign"
  op: "Assign"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6225
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam/read"
  op: "Identity"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6225
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "Q\030\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6225
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6225
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6225
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam_1/Assign"
  op: "Assign"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam_1"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6225
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam_1/read"
  op: "Identity"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6225
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam/Assign"
  op: "Assign"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam/read"
  op: "Identity"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam_1/Assign"
  op: "Assign"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam_1"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam_1/read"
  op: "Identity"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/projection_layer/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\321\025\000\000"
      }
    }
  }
}
node {
  name: "speller/decoder/projection_layer/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "speller/decoder/projection_layer/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "speller/decoder/projection_layer/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "speller/decoder/projection_layer/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "speller/decoder/projection_layer/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 5585
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "speller/decoder/projection_layer/kernel/Adam/Assign"
  op: "Assign"
  input: "speller/decoder/projection_layer/kernel/Adam"
  input: "speller/decoder/projection_layer/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "speller/decoder/projection_layer/kernel/Adam/read"
  op: "Identity"
  input: "speller/decoder/projection_layer/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/projection_layer/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\321\025\000\000"
      }
    }
  }
}
node {
  name: "speller/decoder/projection_layer/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "speller/decoder/projection_layer/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "speller/decoder/projection_layer/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "speller/decoder/projection_layer/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "speller/decoder/projection_layer/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 5585
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "speller/decoder/projection_layer/kernel/Adam_1/Assign"
  op: "Assign"
  input: "speller/decoder/projection_layer/kernel/Adam_1"
  input: "speller/decoder/projection_layer/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "speller/decoder/projection_layer/kernel/Adam_1/read"
  op: "Identity"
  input: "speller/decoder/projection_layer/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/projection_layer/bias/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 5585
      }
    }
  }
}
node {
  name: "speller/decoder/projection_layer/bias/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "speller/decoder/projection_layer/bias/Adam/Initializer/zeros"
  op: "Fill"
  input: "speller/decoder/projection_layer/bias/Adam/Initializer/zeros/shape_as_tensor"
  input: "speller/decoder/projection_layer/bias/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "speller/decoder/projection_layer/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5585
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "speller/decoder/projection_layer/bias/Adam/Assign"
  op: "Assign"
  input: "speller/decoder/projection_layer/bias/Adam"
  input: "speller/decoder/projection_layer/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "speller/decoder/projection_layer/bias/Adam/read"
  op: "Identity"
  input: "speller/decoder/projection_layer/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5585
          }
        }
      }
    }
  }
}
node {
  name: "speller/decoder/projection_layer/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 5585
      }
    }
  }
}
node {
  name: "speller/decoder/projection_layer/bias/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "speller/decoder/projection_layer/bias/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "speller/decoder/projection_layer/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "speller/decoder/projection_layer/bias/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "speller/decoder/projection_layer/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5585
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "speller/decoder/projection_layer/bias/Adam_1/Assign"
  op: "Assign"
  input: "speller/decoder/projection_layer/bias/Adam_1"
  input: "speller/decoder/projection_layer/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "speller/decoder/projection_layer/bias/Adam_1/read"
  op: "Identity"
  input: "speller/decoder/projection_layer/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5585
          }
        }
      }
    }
  }
}
node {
  name: "train/Adam/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "train/Adam/beta1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "train/Adam/beta2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "train/Adam/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "train/Adam/update_listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/listener/bilstm_0/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/listener/bilstm_1/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/fw/fw/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/listener/bilstm_2/bidirectional_rnn/bw/bw/while/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_speller/memory_layer/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "speller/memory_layer/kernel"
  input: "speller/memory_layer/kernel/Adam"
  input: "speller/memory_layer/kernel/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/speller/LuongAttention/memory_layer/Tensordot/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/memory_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6225
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/decoder/attention_wrapper/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_speller/decoder/projection_layer/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "speller/decoder/projection_layer/kernel"
  input: "speller/decoder/projection_layer/kernel/Adam"
  input: "speller/decoder/projection_layer/kernel/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_speller/decoder/projection_layer/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "speller/decoder/projection_layer/bias"
  input: "speller/decoder/projection_layer/bias/Adam"
  input: "speller/decoder/projection_layer/bias/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/speller/decoder/while/BasicDecoderStep/projection_layer/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/mul"
  op: "Mul"
  input: "train/beta1_power/read"
  input: "train/Adam/beta1"
  input: "^train/Adam/update_listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias/ApplyAdam"
  input: "^train/Adam/update_listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/ApplyAdam"
  input: "^train/Adam/update_listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias/ApplyAdam"
  input: "^train/Adam/update_listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/ApplyAdam"
  input: "^train/Adam/update_listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias/ApplyAdam"
  input: "^train/Adam/update_listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/ApplyAdam"
  input: "^train/Adam/update_listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias/ApplyAdam"
  input: "^train/Adam/update_listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/ApplyAdam"
  input: "^train/Adam/update_listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias/ApplyAdam"
  input: "^train/Adam/update_listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/ApplyAdam"
  input: "^train/Adam/update_listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias/ApplyAdam"
  input: "^train/Adam/update_listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/ApplyAdam"
  input: "^train/Adam/update_speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/ApplyAdam"
  input: "^train/Adam/update_speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/ApplyAdam"
  input: "^train/Adam/update_speller/decoder/projection_layer/bias/ApplyAdam"
  input: "^train/Adam/update_speller/decoder/projection_layer/kernel/ApplyAdam"
  input: "^train/Adam/update_speller/memory_layer/kernel/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/Adam/Assign"
  op: "Assign"
  input: "train/beta1_power"
  input: "train/Adam/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/Adam/mul_1"
  op: "Mul"
  input: "train/beta2_power/read"
  input: "train/Adam/beta2"
  input: "^train/Adam/update_listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias/ApplyAdam"
  input: "^train/Adam/update_listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/ApplyAdam"
  input: "^train/Adam/update_listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias/ApplyAdam"
  input: "^train/Adam/update_listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/ApplyAdam"
  input: "^train/Adam/update_listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias/ApplyAdam"
  input: "^train/Adam/update_listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/ApplyAdam"
  input: "^train/Adam/update_listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias/ApplyAdam"
  input: "^train/Adam/update_listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/ApplyAdam"
  input: "^train/Adam/update_listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias/ApplyAdam"
  input: "^train/Adam/update_listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/ApplyAdam"
  input: "^train/Adam/update_listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias/ApplyAdam"
  input: "^train/Adam/update_listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/ApplyAdam"
  input: "^train/Adam/update_speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/ApplyAdam"
  input: "^train/Adam/update_speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/ApplyAdam"
  input: "^train/Adam/update_speller/decoder/projection_layer/bias/ApplyAdam"
  input: "^train/Adam/update_speller/decoder/projection_layer/kernel/ApplyAdam"
  input: "^train/Adam/update_speller/memory_layer/kernel/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train/Adam/Assign_1"
  op: "Assign"
  input: "train/beta2_power"
  input: "train/Adam/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/Adam/update"
  op: "NoOp"
  input: "^train/Adam/Assign"
  input: "^train/Adam/Assign_1"
  input: "^train/Adam/update_listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias/ApplyAdam"
  input: "^train/Adam/update_listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/ApplyAdam"
  input: "^train/Adam/update_listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias/ApplyAdam"
  input: "^train/Adam/update_listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/ApplyAdam"
  input: "^train/Adam/update_listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias/ApplyAdam"
  input: "^train/Adam/update_listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/ApplyAdam"
  input: "^train/Adam/update_listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias/ApplyAdam"
  input: "^train/Adam/update_listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/ApplyAdam"
  input: "^train/Adam/update_listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias/ApplyAdam"
  input: "^train/Adam/update_listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/ApplyAdam"
  input: "^train/Adam/update_listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias/ApplyAdam"
  input: "^train/Adam/update_listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/ApplyAdam"
  input: "^train/Adam/update_speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/ApplyAdam"
  input: "^train/Adam/update_speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/ApplyAdam"
  input: "^train/Adam/update_speller/decoder/projection_layer/bias/ApplyAdam"
  input: "^train/Adam/update_speller/decoder/projection_layer/kernel/ApplyAdam"
  input: "^train/Adam/update_speller/memory_layer/kernel/ApplyAdam"
}
node {
  name: "train/Adam/value"
  op: "Const"
  input: "^train/Adam/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "train/Adam"
  op: "AssignAdd"
  input: "global_step"
  input: "train/Adam/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Rank"
  op: "Rank"
  input: "metrics/edit_distance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "range"
  op: "Range"
  input: "range/start"
  input: "Rank"
  input: "range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Mean"
  op: "Mean"
  input: "metrics/edit_distance"
  input: "range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "loss"
  op: "ScalarSummary"
  input: "loss/tags"
  input: "cross_entropy/sequence_loss/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam/Assign"
  input: "^listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1/Assign"
  input: "^listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias/Assign"
  input: "^listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam/Assign"
  input: "^listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1/Assign"
  input: "^listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Assign"
  input: "^listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam/Assign"
  input: "^listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1/Assign"
  input: "^listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias/Assign"
  input: "^listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam/Assign"
  input: "^listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1/Assign"
  input: "^listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Assign"
  input: "^listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam/Assign"
  input: "^listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1/Assign"
  input: "^listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias/Assign"
  input: "^listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam/Assign"
  input: "^listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1/Assign"
  input: "^listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Assign"
  input: "^listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam/Assign"
  input: "^listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1/Assign"
  input: "^listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias/Assign"
  input: "^listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam/Assign"
  input: "^listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1/Assign"
  input: "^listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Assign"
  input: "^listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam/Assign"
  input: "^listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1/Assign"
  input: "^listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias/Assign"
  input: "^listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam/Assign"
  input: "^listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1/Assign"
  input: "^listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Assign"
  input: "^listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam/Assign"
  input: "^listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1/Assign"
  input: "^listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias/Assign"
  input: "^listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam/Assign"
  input: "^listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1/Assign"
  input: "^listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Assign"
  input: "^speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam/Assign"
  input: "^speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam_1/Assign"
  input: "^speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Assign"
  input: "^speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam/Assign"
  input: "^speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam_1/Assign"
  input: "^speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Assign"
  input: "^speller/decoder/projection_layer/bias/Adam/Assign"
  input: "^speller/decoder/projection_layer/bias/Adam_1/Assign"
  input: "^speller/decoder/projection_layer/bias/Assign"
  input: "^speller/decoder/projection_layer/kernel/Adam/Assign"
  input: "^speller/decoder/projection_layer/kernel/Adam_1/Assign"
  input: "^speller/decoder/projection_layer/kernel/Assign"
  input: "^speller/memory_layer/kernel/Adam/Assign"
  input: "^speller/memory_layer/kernel/Adam_1/Assign"
  input: "^speller/memory_layer/kernel/Assign"
  input: "^train/beta1_power/Assign"
  input: "^train/beta2_power/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "speller/memory_layer/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/memory_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "speller/decoder/projection_layer/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "speller/decoder/projection_layer/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "train/beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "train/beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "speller/memory_layer/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/memory_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "speller/memory_layer/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/memory_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_46"
  op: "IsVariableInitialized"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_47"
  op: "IsVariableInitialized"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_48"
  op: "IsVariableInitialized"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_49"
  op: "IsVariableInitialized"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_50"
  op: "IsVariableInitialized"
  input: "speller/decoder/projection_layer/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_51"
  op: "IsVariableInitialized"
  input: "speller/decoder/projection_layer/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_52"
  op: "IsVariableInitialized"
  input: "speller/decoder/projection_layer/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_53"
  op: "IsVariableInitialized"
  input: "speller/decoder/projection_layer/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_54"
  op: "IsVariableInitialized"
  input: "metrics/mean/total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_55"
  op: "IsVariableInitialized"
  input: "metrics/mean/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  input: "report_uninitialized_variables/IsVariableInitialized_16"
  input: "report_uninitialized_variables/IsVariableInitialized_17"
  input: "report_uninitialized_variables/IsVariableInitialized_18"
  input: "report_uninitialized_variables/IsVariableInitialized_19"
  input: "report_uninitialized_variables/IsVariableInitialized_20"
  input: "report_uninitialized_variables/IsVariableInitialized_21"
  input: "report_uninitialized_variables/IsVariableInitialized_22"
  input: "report_uninitialized_variables/IsVariableInitialized_23"
  input: "report_uninitialized_variables/IsVariableInitialized_24"
  input: "report_uninitialized_variables/IsVariableInitialized_25"
  input: "report_uninitialized_variables/IsVariableInitialized_26"
  input: "report_uninitialized_variables/IsVariableInitialized_27"
  input: "report_uninitialized_variables/IsVariableInitialized_28"
  input: "report_uninitialized_variables/IsVariableInitialized_29"
  input: "report_uninitialized_variables/IsVariableInitialized_30"
  input: "report_uninitialized_variables/IsVariableInitialized_31"
  input: "report_uninitialized_variables/IsVariableInitialized_32"
  input: "report_uninitialized_variables/IsVariableInitialized_33"
  input: "report_uninitialized_variables/IsVariableInitialized_34"
  input: "report_uninitialized_variables/IsVariableInitialized_35"
  input: "report_uninitialized_variables/IsVariableInitialized_36"
  input: "report_uninitialized_variables/IsVariableInitialized_37"
  input: "report_uninitialized_variables/IsVariableInitialized_38"
  input: "report_uninitialized_variables/IsVariableInitialized_39"
  input: "report_uninitialized_variables/IsVariableInitialized_40"
  input: "report_uninitialized_variables/IsVariableInitialized_41"
  input: "report_uninitialized_variables/IsVariableInitialized_42"
  input: "report_uninitialized_variables/IsVariableInitialized_43"
  input: "report_uninitialized_variables/IsVariableInitialized_44"
  input: "report_uninitialized_variables/IsVariableInitialized_45"
  input: "report_uninitialized_variables/IsVariableInitialized_46"
  input: "report_uninitialized_variables/IsVariableInitialized_47"
  input: "report_uninitialized_variables/IsVariableInitialized_48"
  input: "report_uninitialized_variables/IsVariableInitialized_49"
  input: "report_uninitialized_variables/IsVariableInitialized_50"
  input: "report_uninitialized_variables/IsVariableInitialized_51"
  input: "report_uninitialized_variables/IsVariableInitialized_52"
  input: "report_uninitialized_variables/IsVariableInitialized_53"
  input: "report_uninitialized_variables/IsVariableInitialized_54"
  input: "report_uninitialized_variables/IsVariableInitialized_55"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 56
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 56
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 56
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 56
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 56
          }
        }
        string_val: "global_step"
        string_val: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel"
        string_val: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias"
        string_val: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel"
        string_val: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
        string_val: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel"
        string_val: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias"
        string_val: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel"
        string_val: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias"
        string_val: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel"
        string_val: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias"
        string_val: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel"
        string_val: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias"
        string_val: "speller/memory_layer/kernel"
        string_val: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
        string_val: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
        string_val: "speller/decoder/projection_layer/kernel"
        string_val: "speller/decoder/projection_layer/bias"
        string_val: "train/beta1_power"
        string_val: "train/beta2_power"
        string_val: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam"
        string_val: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1"
        string_val: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam"
        string_val: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1"
        string_val: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam"
        string_val: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1"
        string_val: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam"
        string_val: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1"
        string_val: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam"
        string_val: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1"
        string_val: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam"
        string_val: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1"
        string_val: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam"
        string_val: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1"
        string_val: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam"
        string_val: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1"
        string_val: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam"
        string_val: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1"
        string_val: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam"
        string_val: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1"
        string_val: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam"
        string_val: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1"
        string_val: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam"
        string_val: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1"
        string_val: "speller/memory_layer/kernel/Adam"
        string_val: "speller/memory_layer/kernel/Adam_1"
        string_val: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam"
        string_val: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam_1"
        string_val: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam"
        string_val: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam_1"
        string_val: "speller/decoder/projection_layer/kernel/Adam"
        string_val: "speller/decoder/projection_layer/kernel/Adam_1"
        string_val: "speller/decoder/projection_layer/bias/Adam"
        string_val: "speller/decoder/projection_layer/bias/Adam_1"
        string_val: "metrics/mean/total"
        string_val: "metrics/mean/count"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 56
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 56
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 56
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 56
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 56
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  input: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/GatherV2"
  input: "report_uninitialized_resources/Const"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "speller/memory_layer/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/memory_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "speller/decoder/projection_layer/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "speller/decoder/projection_layer/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "train/beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "train/beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "speller/memory_layer/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/memory_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "speller/memory_layer/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/memory_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_46"
  op: "IsVariableInitialized"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_47"
  op: "IsVariableInitialized"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_48"
  op: "IsVariableInitialized"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_49"
  op: "IsVariableInitialized"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_50"
  op: "IsVariableInitialized"
  input: "speller/decoder/projection_layer/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_51"
  op: "IsVariableInitialized"
  input: "speller/decoder/projection_layer/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_52"
  op: "IsVariableInitialized"
  input: "speller/decoder/projection_layer/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_53"
  op: "IsVariableInitialized"
  input: "speller/decoder/projection_layer/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/stack"
  op: "Pack"
  input: "report_uninitialized_variables_1/IsVariableInitialized"
  input: "report_uninitialized_variables_1/IsVariableInitialized_1"
  input: "report_uninitialized_variables_1/IsVariableInitialized_2"
  input: "report_uninitialized_variables_1/IsVariableInitialized_3"
  input: "report_uninitialized_variables_1/IsVariableInitialized_4"
  input: "report_uninitialized_variables_1/IsVariableInitialized_5"
  input: "report_uninitialized_variables_1/IsVariableInitialized_6"
  input: "report_uninitialized_variables_1/IsVariableInitialized_7"
  input: "report_uninitialized_variables_1/IsVariableInitialized_8"
  input: "report_uninitialized_variables_1/IsVariableInitialized_9"
  input: "report_uninitialized_variables_1/IsVariableInitialized_10"
  input: "report_uninitialized_variables_1/IsVariableInitialized_11"
  input: "report_uninitialized_variables_1/IsVariableInitialized_12"
  input: "report_uninitialized_variables_1/IsVariableInitialized_13"
  input: "report_uninitialized_variables_1/IsVariableInitialized_14"
  input: "report_uninitialized_variables_1/IsVariableInitialized_15"
  input: "report_uninitialized_variables_1/IsVariableInitialized_16"
  input: "report_uninitialized_variables_1/IsVariableInitialized_17"
  input: "report_uninitialized_variables_1/IsVariableInitialized_18"
  input: "report_uninitialized_variables_1/IsVariableInitialized_19"
  input: "report_uninitialized_variables_1/IsVariableInitialized_20"
  input: "report_uninitialized_variables_1/IsVariableInitialized_21"
  input: "report_uninitialized_variables_1/IsVariableInitialized_22"
  input: "report_uninitialized_variables_1/IsVariableInitialized_23"
  input: "report_uninitialized_variables_1/IsVariableInitialized_24"
  input: "report_uninitialized_variables_1/IsVariableInitialized_25"
  input: "report_uninitialized_variables_1/IsVariableInitialized_26"
  input: "report_uninitialized_variables_1/IsVariableInitialized_27"
  input: "report_uninitialized_variables_1/IsVariableInitialized_28"
  input: "report_uninitialized_variables_1/IsVariableInitialized_29"
  input: "report_uninitialized_variables_1/IsVariableInitialized_30"
  input: "report_uninitialized_variables_1/IsVariableInitialized_31"
  input: "report_uninitialized_variables_1/IsVariableInitialized_32"
  input: "report_uninitialized_variables_1/IsVariableInitialized_33"
  input: "report_uninitialized_variables_1/IsVariableInitialized_34"
  input: "report_uninitialized_variables_1/IsVariableInitialized_35"
  input: "report_uninitialized_variables_1/IsVariableInitialized_36"
  input: "report_uninitialized_variables_1/IsVariableInitialized_37"
  input: "report_uninitialized_variables_1/IsVariableInitialized_38"
  input: "report_uninitialized_variables_1/IsVariableInitialized_39"
  input: "report_uninitialized_variables_1/IsVariableInitialized_40"
  input: "report_uninitialized_variables_1/IsVariableInitialized_41"
  input: "report_uninitialized_variables_1/IsVariableInitialized_42"
  input: "report_uninitialized_variables_1/IsVariableInitialized_43"
  input: "report_uninitialized_variables_1/IsVariableInitialized_44"
  input: "report_uninitialized_variables_1/IsVariableInitialized_45"
  input: "report_uninitialized_variables_1/IsVariableInitialized_46"
  input: "report_uninitialized_variables_1/IsVariableInitialized_47"
  input: "report_uninitialized_variables_1/IsVariableInitialized_48"
  input: "report_uninitialized_variables_1/IsVariableInitialized_49"
  input: "report_uninitialized_variables_1/IsVariableInitialized_50"
  input: "report_uninitialized_variables_1/IsVariableInitialized_51"
  input: "report_uninitialized_variables_1/IsVariableInitialized_52"
  input: "report_uninitialized_variables_1/IsVariableInitialized_53"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 54
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 54
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables_1/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 54
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 54
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 54
          }
        }
        string_val: "global_step"
        string_val: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel"
        string_val: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias"
        string_val: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel"
        string_val: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
        string_val: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel"
        string_val: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias"
        string_val: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel"
        string_val: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias"
        string_val: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel"
        string_val: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias"
        string_val: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel"
        string_val: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias"
        string_val: "speller/memory_layer/kernel"
        string_val: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
        string_val: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
        string_val: "speller/decoder/projection_layer/kernel"
        string_val: "speller/decoder/projection_layer/bias"
        string_val: "train/beta1_power"
        string_val: "train/beta2_power"
        string_val: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam"
        string_val: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1"
        string_val: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam"
        string_val: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1"
        string_val: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam"
        string_val: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1"
        string_val: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam"
        string_val: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1"
        string_val: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam"
        string_val: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1"
        string_val: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam"
        string_val: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1"
        string_val: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam"
        string_val: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1"
        string_val: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam"
        string_val: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1"
        string_val: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam"
        string_val: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1"
        string_val: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam"
        string_val: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1"
        string_val: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam"
        string_val: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1"
        string_val: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam"
        string_val: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1"
        string_val: "speller/memory_layer/kernel/Adam"
        string_val: "speller/memory_layer/kernel/Adam_1"
        string_val: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam"
        string_val: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam_1"
        string_val: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam"
        string_val: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam_1"
        string_val: "speller/decoder/projection_layer/kernel/Adam"
        string_val: "speller/decoder/projection_layer/kernel/Adam_1"
        string_val: "speller/decoder/projection_layer/bias/Adam"
        string_val: "speller/decoder/projection_layer/bias/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 54
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 54
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 54
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables_1/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables_1/Const"
  input: "report_uninitialized_variables_1/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 54
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables_1/LogicalNot"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 54
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape"
  input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
  input: "^metrics/mean/count/Assign"
  input: "^metrics/mean/total/Assign"
}
node {
  name: "init_all_tables"
  op: "NoOp"
  input: "^string_to_index/hash_table/table_init"
  device: "/device:CPU:0"
}
node {
  name: "init_3"
  op: "NoOp"
}
node {
  name: "group_deps_1/NoOp"
  op: "NoOp"
  input: "^init_2"
  input: "^init_3"
}
node {
  name: "group_deps_1/NoOp_1"
  op: "NoOp"
  input: "^init_all_tables"
  device: "/device:CPU:0"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^group_deps_1/NoOp"
  input: "^group_deps_1/NoOp_1"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "edit_distance"
  input: "loss"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/StringJoin/inputs_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp_bcc4692f12a34ad89aa1c0c6c4c5c308/part"
      }
    }
  }
}
node {
  name: "save/StringJoin"
  op: "StringJoin"
  input: "save/Const"
  input: "save/StringJoin/inputs_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 54
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 54
          }
        }
        string_val: "global_step"
        string_val: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
        string_val: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam"
        string_val: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1"
        string_val: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel"
        string_val: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam"
        string_val: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1"
        string_val: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias"
        string_val: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam"
        string_val: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1"
        string_val: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel"
        string_val: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam"
        string_val: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1"
        string_val: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias"
        string_val: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam"
        string_val: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1"
        string_val: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel"
        string_val: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam"
        string_val: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1"
        string_val: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias"
        string_val: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam"
        string_val: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1"
        string_val: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel"
        string_val: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam"
        string_val: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1"
        string_val: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias"
        string_val: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam"
        string_val: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1"
        string_val: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel"
        string_val: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam"
        string_val: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1"
        string_val: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias"
        string_val: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam"
        string_val: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1"
        string_val: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel"
        string_val: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam"
        string_val: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1"
        string_val: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
        string_val: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam"
        string_val: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam_1"
        string_val: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
        string_val: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam"
        string_val: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam_1"
        string_val: "speller/decoder/projection_layer/bias"
        string_val: "speller/decoder/projection_layer/bias/Adam"
        string_val: "speller/decoder/projection_layer/bias/Adam_1"
        string_val: "speller/decoder/projection_layer/kernel"
        string_val: "speller/decoder/projection_layer/kernel/Adam"
        string_val: "speller/decoder/projection_layer/kernel/Adam_1"
        string_val: "speller/memory_layer/kernel"
        string_val: "speller/memory_layer/kernel/Adam"
        string_val: "speller/memory_layer/kernel/Adam_1"
        string_val: "train/beta1_power"
        string_val: "train/beta2_power"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 54
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 54
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/ShardedFilename"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "global_step"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam_1"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam_1"
  input: "speller/decoder/projection_layer/bias"
  input: "speller/decoder/projection_layer/bias/Adam"
  input: "speller/decoder/projection_layer/bias/Adam_1"
  input: "speller/decoder/projection_layer/kernel"
  input: "speller/decoder/projection_layer/kernel/Adam"
  input: "speller/decoder/projection_layer/kernel/Adam_1"
  input: "speller/memory_layer/kernel"
  input: "speller/memory_layer/kernel/Adam"
  input: "speller/memory_layer/kernel/Adam_1"
  input: "train/beta1_power"
  input: "train/beta2_power"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/SaveV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save/ShardedFilename"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save/Const"
  device: "/device:CPU:0"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/Const"
  input: "^save/MergeV2Checkpoints"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 54
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 54
          }
        }
        string_val: "global_step"
        string_val: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
        string_val: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam"
        string_val: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1"
        string_val: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel"
        string_val: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam"
        string_val: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1"
        string_val: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias"
        string_val: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam"
        string_val: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1"
        string_val: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel"
        string_val: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam"
        string_val: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1"
        string_val: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias"
        string_val: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam"
        string_val: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1"
        string_val: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel"
        string_val: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam"
        string_val: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1"
        string_val: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias"
        string_val: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam"
        string_val: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1"
        string_val: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel"
        string_val: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam"
        string_val: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1"
        string_val: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias"
        string_val: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam"
        string_val: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1"
        string_val: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel"
        string_val: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam"
        string_val: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1"
        string_val: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias"
        string_val: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam"
        string_val: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1"
        string_val: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel"
        string_val: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam"
        string_val: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1"
        string_val: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
        string_val: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam"
        string_val: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam_1"
        string_val: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
        string_val: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam"
        string_val: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam_1"
        string_val: "speller/decoder/projection_layer/bias"
        string_val: "speller/decoder/projection_layer/bias/Adam"
        string_val: "speller/decoder/projection_layer/bias/Adam_1"
        string_val: "speller/decoder/projection_layer/kernel"
        string_val: "speller/decoder/projection_layer/kernel/Adam"
        string_val: "speller/decoder/projection_layer/kernel/Adam_1"
        string_val: "speller/memory_layer/kernel"
        string_val: "speller/memory_layer/kernel/Adam"
        string_val: "speller/memory_layer/kernel/Adam_1"
        string_val: "train/beta1_power"
        string_val: "train/beta2_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 54
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 54
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 167
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_1/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias/Adam_1"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel/Adam_1"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/bw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias/Adam_1"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel/Adam_1"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_2/bidirectional_rnn/fw/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 640
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam_1"
  input: "save/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  input: "save/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6225
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam"
  input: "save/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6225
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam_1"
  input: "save/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/attention_wrapper/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6225
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "speller/decoder/projection_layer/bias"
  input: "save/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "speller/decoder/projection_layer/bias/Adam"
  input: "save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "speller/decoder/projection_layer/bias/Adam_1"
  input: "save/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "speller/decoder/projection_layer/kernel"
  input: "save/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "speller/decoder/projection_layer/kernel/Adam"
  input: "save/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "speller/decoder/projection_layer/kernel/Adam_1"
  input: "save/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/decoder/projection_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 5585
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "speller/memory_layer/kernel"
  input: "save/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/memory_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "speller/memory_layer/kernel/Adam"
  input: "save/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/memory_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "speller/memory_layer/kernel/Adam_1"
  input: "save/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@speller/memory_layer/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "train/beta1_power"
  input: "save/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "train/beta2_power"
  input: "save/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@listener/bilstm_0/bidirectional_rnn/bw/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_2"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_3"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_4"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_5"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_shard"
}
library {
  function {
    signature {
      name: "tf_data_structured_function_wrapper_AAfPU2iCD9w"
      input_arg {
        name: "arg0_0"
        type: DT_FLOAT
      }
      input_arg {
        name: "arg1"
        type: DT_INT64
      }
      output_arg {
        name: "arg0"
        type: DT_FLOAT
      }
      output_arg {
        name: "cast"
        type: DT_INT32
      }
      description: "Wrapper for passing nested structures to and from tf.data functions."
    }
    node_def {
      name: "Cast"
      op: "Cast"
      input: "arg1"
      device: "/device:CPU:0"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
    }
    ret {
      key: "arg0"
      value: "arg0_0"
    }
    ret {
      key: "cast"
      value: "Cast:y:0"
    }
  }
  function {
    signature {
      name: "tf_data_structured_function_wrapper_hvYyoquGYAk"
      input_arg {
        name: "arg0_0"
        type: DT_FLOAT
      }
      input_arg {
        name: "arg1_0"
        type: DT_INT32
      }
      input_arg {
        name: "arg2_0"
        type: DT_INT32
      }
      input_arg {
        name: "arg3_0"
        type: DT_INT32
      }
      input_arg {
        name: "arg4_0"
        type: DT_INT32
      }
      output_arg {
        name: "arg0"
        type: DT_FLOAT
      }
      output_arg {
        name: "arg3"
        type: DT_INT32
      }
      output_arg {
        name: "arg4"
        type: DT_INT32
      }
      output_arg {
        name: "arg1"
        type: DT_INT32
      }
      output_arg {
        name: "arg2"
        type: DT_INT32
      }
      description: "Wrapper for passing nested structures to and from tf.data functions."
    }
    ret {
      key: "arg0"
      value: "arg0_0"
    }
    ret {
      key: "arg1"
      value: "arg1_0"
    }
    ret {
      key: "arg2"
      value: "arg2_0"
    }
    ret {
      key: "arg3"
      value: "arg3_0"
    }
    ret {
      key: "arg4"
      value: "arg4_0"
    }
  }
  function {
    signature {
      name: "tf_data_structured_function_wrapper_mAdOBgQrakc"
      input_arg {
        name: "arg0_0"
        type: DT_FLOAT
      }
      input_arg {
        name: "arg1"
        type: DT_INT32
      }
      input_arg {
        name: "concat_values_0_placeholder"
        type: DT_INT32
      }
      input_arg {
        name: "concat_1_values_1_placeholder"
        type: DT_INT32
      }
      output_arg {
        name: "arg0"
        type: DT_FLOAT
      }
      output_arg {
        name: "concat"
        type: DT_INT32
      }
      output_arg {
        name: "concat_1"
        type: DT_INT32
      }
      description: "Wrapper for passing nested structures to and from tf.data functions."
    }
    node_def {
      name: "concat/values_0"
      op: "Pack"
      input: "concat_values_0_placeholder"
      device: "/device:CPU:0"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "concat/axis"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "concat_0"
      op: "ConcatV2"
      input: "concat/values_0:output:0"
      input: "arg1"
      input: "concat/axis:output:0"
      device: "/device:CPU:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "concat_1/values_1"
      op: "Pack"
      input: "concat_1_values_1_placeholder"
      device: "/device:CPU:0"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "concat_1/axis"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "concat_1_0"
      op: "ConcatV2"
      input: "arg1"
      input: "concat_1/values_1:output:0"
      input: "concat_1/axis:output:0"
      device: "/device:CPU:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
    }
    ret {
      key: "arg0"
      value: "arg0_0"
    }
    ret {
      key: "concat"
      value: "concat_0:output:0"
    }
    ret {
      key: "concat_1"
      value: "concat_1_0:output:0"
    }
  }
  function {
    signature {
      name: "tf_data_structured_function_wrapper_lPmvTEtOHbs"
      input_arg {
        name: "arg0_0"
        type: DT_FLOAT
      }
      input_arg {
        name: "arg1"
        type: DT_STRING
      }
      input_arg {
        name: "hash_table_lookup_placeholder"
        type: DT_RESOURCE
      }
      input_arg {
        name: "hash_table_lookup_placeholder_1"
        type: DT_INT64
      }
      output_arg {
        name: "arg0"
        type: DT_FLOAT
      }
      output_arg {
        name: "hash_table_lookup"
        type: DT_INT64
      }
      description: "Wrapper for passing nested structures to and from tf.data functions."
      is_stateful: true
    }
    node_def {
      name: "hash_table_Lookup"
      op: "LookupTableFindV2"
      input: "hash_table_lookup_placeholder"
      input: "arg1"
      input: "hash_table_lookup_placeholder_1"
      device: "/device:CPU:0"
      attr {
        key: "Tin"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "Tout"
        value {
          type: DT_INT64
        }
      }
    }
    ret {
      key: "arg0"
      value: "arg0_0"
    }
    ret {
      key: "hash_table_lookup"
      value: "hash_table_Lookup:values:0"
    }
  }
  function {
    signature {
      name: "tf_data_structured_function_wrapper_aeuwDpH4P8c"
      input_arg {
        name: "arg0"
        type: DT_STRING
      }
      output_arg {
        name: "parsesinglesequenceexample_parsesinglesequenceexample"
        type: DT_FLOAT
      }
      output_arg {
        name: "parsesinglesequenceexample_parsesinglesequenceexample_0"
        type: DT_STRING
      }
      description: "Wrapper for passing nested structures to and from tf.data functions."
    }
    node_def {
      name: "ParseSingleSequenceExample/ParseSingleSequenceExample/feature_list_dense_missing_assumed_empty"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "ParseSingleSequenceExample/ParseSingleSequenceExample/feature_list_dense_keys_0"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "inputs"
          }
        }
      }
    }
    node_def {
      name: "ParseSingleSequenceExample/ParseSingleSequenceExample/feature_list_dense_keys_1"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "labels"
          }
        }
      }
    }
    node_def {
      name: "ParseSingleSequenceExample/ParseSingleSequenceExample/debug_name"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "ParseSingleSequenceExample/ParseSingleSequenceExample"
      op: "ParseSingleSequenceExample"
      input: "arg0"
      input: "ParseSingleSequenceExample/ParseSingleSequenceExample/feature_list_dense_missing_assumed_empty:output:0"
      input: "ParseSingleSequenceExample/ParseSingleSequenceExample/feature_list_dense_keys_0:output:0"
      input: "ParseSingleSequenceExample/ParseSingleSequenceExample/feature_list_dense_keys_1:output:0"
      input: "ParseSingleSequenceExample/ParseSingleSequenceExample/debug_name:output:0"
      device: "/device:CPU:0"
      attr {
        key: "Ncontext_dense"
        value {
          i: 0
        }
      }
      attr {
        key: "Ncontext_sparse"
        value {
          i: 0
        }
      }
      attr {
        key: "Nfeature_list_dense"
        value {
          i: 2
        }
      }
      attr {
        key: "Nfeature_list_sparse"
        value {
          i: 0
        }
      }
      attr {
        key: "Tcontext_dense"
        value {
          list {
          }
        }
      }
      attr {
        key: "context_dense_shapes"
        value {
          list {
          }
        }
      }
      attr {
        key: "context_sparse_types"
        value {
          list {
          }
        }
      }
      attr {
        key: "feature_list_dense_shapes"
        value {
          list {
            shape {
              dim {
                size: 39
              }
            }
            shape {
            }
          }
        }
      }
      attr {
        key: "feature_list_dense_types"
        value {
          list {
            type: DT_FLOAT
            type: DT_STRING
          }
        }
      }
      attr {
        key: "feature_list_sparse_types"
        value {
          list {
          }
        }
      }
    }
    ret {
      key: "parsesinglesequenceexample_parsesinglesequenceexample"
      value: "ParseSingleSequenceExample/ParseSingleSequenceExample:feature_list_dense_values:0"
    }
    ret {
      key: "parsesinglesequenceexample_parsesinglesequenceexample_0"
      value: "ParseSingleSequenceExample/ParseSingleSequenceExample:feature_list_dense_values:1"
    }
  }
  function {
    signature {
      name: "tf_data_structured_function_wrapper_52oRgbbAY9U"
      input_arg {
        name: "arg0"
        type: DT_STRING
      }
      output_arg {
        name: "tfrecorddataset"
        type: DT_VARIANT
      }
      description: "Wrapper for passing nested structures to and from tf.data functions."
      is_stateful: true
    }
    node_def {
      name: "compression_type"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "buffer_size"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 262144
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "arg0"
      input: "compression_type:output:0"
      input: "buffer_size:output:0"
      device: "/device:CPU:0"
    }
    ret {
      key: "tfrecorddataset"
      value: "TFRecordDataset:handle:0"
    }
  }
  function {
    signature {
      name: "tf_data_structured_function_wrapper_xVA2SbI2ctA"
      input_arg {
        name: "arg0_0"
        type: DT_FLOAT
      }
      input_arg {
        name: "arg1_0"
        type: DT_INT32
      }
      input_arg {
        name: "arg2_0"
        type: DT_INT32
      }
      output_arg {
        name: "arg0"
        type: DT_FLOAT
      }
      output_arg {
        name: "arg1"
        type: DT_INT32
      }
      output_arg {
        name: "arg2"
        type: DT_INT32
      }
      output_arg {
        name: "strided_slice"
        type: DT_INT32
      }
      output_arg {
        name: "size"
        type: DT_INT32
      }
      description: "Wrapper for passing nested structures to and from tf.data functions."
    }
    node_def {
      name: "Shape"
      op: "Shape"
      input: "arg0_0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "strided_slice/stack"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "strided_slice/stack_1"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "strided_slice/stack_2"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "strided_slice_0"
      op: "StridedSlice"
      input: "Shape:output:0"
      input: "strided_slice/stack:output:0"
      input: "strided_slice/stack_1:output:0"
      input: "strided_slice/stack_2:output:0"
      device: "/device:CPU:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "Size"
      op: "Size"
      input: "arg1_0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    ret {
      key: "arg0"
      value: "arg0_0"
    }
    ret {
      key: "arg1"
      value: "arg1_0"
    }
    ret {
      key: "arg2"
      value: "arg2_0"
    }
    ret {
      key: "size"
      value: "Size:output:0"
    }
    ret {
      key: "strided_slice"
      value: "strided_slice_0:output:0"
    }
  }
}
versions {
  producer: 27
  min_consumer: 12
}
